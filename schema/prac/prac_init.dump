-- $Id$

--   Schema Name: prac
-- Database Name: prac_init

--
--
--
-- Name: "plpgsql_call_handler" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "plpgsql_call_handler" () RETURNS opaque AS '/usr/pkg/lib/plpgsql.so', 'plpgsql_call_handler' LANGUAGE 'C';

--
--
--
-- Name: plpgsql Type: PROCEDURAL LANGUAGE Owner: 
--

CREATE TRUSTED PROCEDURAL LANGUAGE 'plpgsql' HANDLER "plpgsql_call_handler" LANCOMPILER 'PL/pgSQL';

--
--
--
-- Name: mvac_user Type: TABLE Owner: source
--

CREATE TABLE "mvac_user" (
	"uid" text NOT NULL,
	"username" text DEFAULT '' NOT NULL,
	"userdesc" text DEFAULT '' NOT NULL,
	"password" text DEFAULT '' NOT NULL,
	"perms" text,
	"email" text DEFAULT '',
	Constraint "mvac_user_pkey" Primary Key ("uid")
);

--
--
--
-- Name: mvac_user Type: ACL Owner: 
--

REVOKE ALL on "mvac_user" from PUBLIC;
GRANT SELECT on "mvac_user" to PUBLIC;
GRANT ALL on "mvac_user" to "source";

--
--
--
-- Name: mvac_database Type: TABLE Owner: source
--

CREATE TABLE "mvac_database" (
	"db_name" text NOT NULL,
	"db_desc" text DEFAULT '',
	"db_host" text DEFAULT 'localhost',
	"db_port" text DEFAULT '5432',
	"db_options" text DEFAULT '',
	"db_tty" text DEFAULT '',
	"db_login" text DEFAULT '',
	"db_pwd" text DEFAULT '',
	"perms" text DEFAULT 1,
	Constraint "mvac_database_pkey" Primary Key ("db_name")
);

--
--
--
-- Name: mvac_database Type: ACL Owner: 
--

REVOKE ALL on "mvac_database" from PUBLIC;
GRANT SELECT on "mvac_database" to PUBLIC;
GRANT ALL on "mvac_database" to "source";

--
--
--
-- Name: mvac_sessions Type: TABLE Owner: source
--

CREATE TABLE "mvac_sessions" (
	"sid" text DEFAULT '' NOT NULL,
	"name" text DEFAULT '' NOT NULL,
	"val" text,
	"changed" character varying(14) DEFAULT '' NOT NULL,
	Constraint "mvac_sessions_pkey" Primary Key ("sid", "name")
);

--
--
--
-- Name: "byteaparam" (bytea,integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "byteaparam" (bytea,integer) RETURNS text AS '
    declare
        bparm   alias for $1;  --bytea parameters
        parmIdx alias for $2;

        parmCount  int = 0;
        charCount  int = 0;
        bsize      int;
        c          int;
        parm       text = '''';

    begin
        -- length of bytea
        select octet_length(bparm)
        into   bsize;

        -- skip over the leading params
        while parmCount < parmIdx loop
            if (charCount >= bsize) then
               return '''';
            end if;
            c := get_byte(bparm, charCount);
            charCount := charCount + 1;
            if c = 0 then
                parmCount := parmCount + 1;
            end if;
        end loop;

        -- extract the parameter.
        while parmCount = parmIdx loop
            if (charCount >= bsize) then
               return '''';
            end if;
            c := get_byte(bparm, charCount);
            charCount := charCount + 1;
            if c = 0 then
                parmCount := parmCount + 1;
            else
                parm := parm || chr(c);
            end if;
        end loop;

        return parm;
    end;
' LANGUAGE 'plpgsql';

--
--
--
-- Name: "create_fk_links" (text) Type: FUNCTION Owner: source
--

CREATE FUNCTION "create_fk_links" (text) RETURNS integer AS 'DECLARE
   arg_reln alias for $1;
   tmp_record record;
   tmp_count integer := 0;

    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;

    BEGIN

        insert into mtfn(mtfn_title,
                         mtfn_master_class,
                         mtfn_key,
                         mtfn_other_class,
                         mtfn_join,
                         mtfn_view)
          select  mtsv_other_class as tmp_title,
                  mtsv_master_class as tmp_master_class,
                  mtsv_key as tmp_key,
                  mtsv_other_class as tmp_other_class,
                  mtsv_join as tmp_join,
                  mtsv_join as tmp_view
          from    mtsv
          where   mtsv_master_class = arg_reln
          except
          select  mtfn_other_class as tmp_title,
                  mtfn_master_class as tmp_master_class,
                  mtfn_key as tmp_key,
                  mtfn_other_class as tmp_other_class,
                  mtfn_join as tmp_join,
                  mtfn_join as tmp_view
          from    mtfn
          where   mtfn_master_class = arg_reln;

          GET DIAGNOSTICS tmp_count = ROW_COUNT;
    return tmp_count;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "create_rl_links" (text) Type: FUNCTION Owner: source
--

CREATE FUNCTION "create_rl_links" (text) RETURNS integer AS 'DECLARE
   arg_reln alias for $1;
   tmp_record record;
   tmp_count integer := 0;

    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;

    BEGIN

        insert into mtrl(mtrl_title,
                         mtrl_master_class,
                         mtrl_key,
                         mtrl_other_class,
                         mtrl_join)
          select  mtsv_master_class as tmp_title,
                  mtsv_other_class as tmp_master_class,
                  mtsv_join as tmp_key,
                  mtsv_master_class as tmp_other_class,
                  mtsv_key as tmp_join
          from    mtsv
          where   mtsv_other_class = arg_reln
          except
          select  mtrl_other_class as tmp_title,
                  mtrl_master_class as tmp_master_class,
                  mtrl_key as tmp_key,
                  mtrl_other_class as tmp_other_class,
                  mtrl_join as tmp_join
          from    mtrl
          where   mtrl_master_class = arg_reln;

          GET DIAGNOSTICS tmp_count = ROW_COUNT;
    return tmp_count;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "get_param" (text,text,integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "get_param" (text,text,integer) RETURNS text AS 'DECLARE
        multistr   alias for $1;  -- multi-parameter string
        sep        alias for $2;  -- separator
        parnum     alias for $3;  -- parameter number

        par_count  int = 0;
        tmp_str    text := '''';
        pos        int;
        parm       text = '''';

    BEGIN

        tmp_str := multistr;
        -- skip over the leading params
        WHILE (par_count < parnum)
          LOOP
            -- next separator
            pos = position(sep in tmp_str);
            if (pos < 1) then
               return null::text;
            end if;
            pos := pos + char_length(sep);
            tmp_str := substring(tmp_str from pos);
            par_count := par_count + 1;
        END LOOP;

        -- extract the parameter.
        WHILE (par_count = parnum)
          LOOP
            pos = position(sep in tmp_str);
            if (pos < 1) then
              parm := tmp_str;
            else
              parm := substring(tmp_str, 1, pos-1);
            end if;
            if ( char_length(parm) = 0) then
              return null::text;
            else
              return parm;
            end if;
        END LOOP;

        return null::text;
    END;
' LANGUAGE 'plpgsql';

--
--
--
-- Name: mtcl_mtcl__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mtcl_mtcl__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mtcl_mtcl__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mtcl_mtcl__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtcl_mtcl__sequence_seq" to PUBLIC;
GRANT ALL on "mtcl_mtcl__sequence_seq" to "source";

--
--
--
-- Name: mtcl Type: TABLE Owner: source
--

CREATE TABLE "mtcl" (
	"mtcl_access" text DEFAULT '2'::text NOT NULL,
	"mtcl_name" text DEFAULT 'NAME'::text NOT NULL,
	"mtcl_title" text DEFAULT 'TITLE'::text NOT NULL,
	"mtcl_group" text,
	"mtcl_matrix_order" integer,
	"mtcl_order_by" text,
	"mtcl_group_by" text,
	"mtcl_primary" text,
	"mtcl_userkey" text,
	"mtcl_userlabel" text,
	"mtcl_query_limit" integer DEFAULT 200,
	"mtcl_query_offset" integer DEFAULT 0,
	"mtcl_extras" text,
	"mtcl__sequence" integer DEFAULT nextval('"mtcl_mtcl__sequence_seq"'::text) NOT NULL,
	"mtcl__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mtcl__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mtcl__status" character(1) DEFAULT 'A' NOT NULL,
	Constraint "mtcl_pkey" Primary Key ("mtcl_name")
);

--
--
--
-- Name: mtcl Type: ACL Owner: 
--

REVOKE ALL on "mtcl" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtcl" to PUBLIC;
GRANT ALL on "mtcl" to "source";

--
--
--
-- Name: mtat_mtat__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mtat_mtat__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mtat_mtat__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mtat_mtat__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtat_mtat__sequence_seq" to PUBLIC;
GRANT ALL on "mtat_mtat__sequence_seq" to "source";

--
--
--
-- Name: mtat Type: TABLE Owner: source
--

CREATE TABLE "mtat" (
	"mtat_access" text DEFAULT '31'::text NOT NULL,
	"mtat_name" text DEFAULT 'NAME'::text NOT NULL,
	"mtat_type" text DEFAULT 'text'::text NOT NULL,
	"mtat_length" integer DEFAULT 1 NOT NULL,
	"mtat_attributes" text,
	"mtat_operator" text DEFAULT '='::text NOT NULL,
	"mtat_title" text DEFAULT 'TITLE'::text NOT NULL,
	"mtat_class_name" text DEFAULT '-'::text NOT NULL,
	"mtat_displen" integer DEFAULT 10 NOT NULL,
	"mtat_browse_order" integer DEFAULT 500 NOT NULL,
	"mtat_view_order" integer DEFAULT 500 NOT NULL,
	"mtat_input_method" text,
	"mtat_default" text,
	"mtat_htmltagatt" text,
	"mtat__sequence" integer DEFAULT nextval('"mtat_mtat__sequence_seq"'::text) NOT NULL,
	"mtat__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mtat__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mtat__status" character(1) DEFAULT 'A' NOT NULL,
	Constraint "mtat_pkey" Primary Key ("mtat_name")
);

--
--
--
-- Name: mtat Type: ACL Owner: 
--

REVOKE ALL on "mtat" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtat" to PUBLIC;
GRANT ALL on "mtat" to "source";

--
--
--
-- Name: mtfn_mtfn__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mtfn_mtfn__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mtfn_mtfn__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mtfn_mtfn__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtfn_mtfn__sequence_seq" to PUBLIC;
GRANT ALL on "mtfn_mtfn__sequence_seq" to "source";

--
--
--
-- Name: mtfn Type: TABLE Owner: source
--

CREATE TABLE "mtfn" (
	"mtfn_title" text DEFAULT 'TITLE'::text NOT NULL,
	"mtfn_master_class" text DEFAULT '-'::text NOT NULL,
	"mtfn_key" text DEFAULT '-'::text NOT NULL,
	"mtfn_other_class" text DEFAULT '-'::text NOT NULL,
	"mtfn_join" text DEFAULT '-'::text NOT NULL,
	"mtfn_view" text DEFAULT '-'::text NOT NULL,
	"mtfn__sequence" integer DEFAULT nextval('"mtfn_mtfn__sequence_seq"'::text) NOT NULL,
	"mtfn__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mtfn__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mtfn__status" character(1) DEFAULT 'A' NOT NULL,
	Constraint "mtfn_pkey" Primary Key ("mtfn__sequence")
);

--
--
--
-- Name: mtfn Type: ACL Owner: 
--

REVOKE ALL on "mtfn" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtfn" to PUBLIC;
GRANT ALL on "mtfn" to "source";

--
--
--
-- Name: mtrl_mtrl__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mtrl_mtrl__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mtrl_mtrl__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mtrl_mtrl__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtrl_mtrl__sequence_seq" to PUBLIC;
GRANT ALL on "mtrl_mtrl__sequence_seq" to "source";

--
--
--
-- Name: mtrl Type: TABLE Owner: source
--

CREATE TABLE "mtrl" (
	"mtrl_title" text DEFAULT '-'::text NOT NULL,
	"mtrl_master_class" text DEFAULT '-'::text NOT NULL,
	"mtrl_key" text DEFAULT '-'::text NOT NULL,
	"mtrl_other_class" text DEFAULT '-'::text NOT NULL,
	"mtrl_join" text DEFAULT '-'::text NOT NULL,
	"mtrl__sequence" integer DEFAULT nextval('"mtrl_mtrl__sequence_seq"'::text) NOT NULL,
	"mtrl__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mtrl__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mtrl__status" character(1) DEFAULT 'A' NOT NULL,
	Constraint "mtrl_pkey" Primary Key ("mtrl__sequence")
);

--
--
--
-- Name: mtrl Type: ACL Owner: 
--

REVOKE ALL on "mtrl" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtrl" to PUBLIC;
GRANT ALL on "mtrl" to "source";

--
--
--
-- Name: form_form__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "form_form__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: form Type: TABLE Owner: source
--

CREATE TABLE "form" (
	"form_code" text NOT NULL,
	"form_desc" text DEFAULT 'New Report'::text,
	"form_classname" text,
	"form_page_attribute" text,
	"form_includes" text,
	"form_pagesize" integer DEFAULT 0 NOT NULL,
	"form_orientation" integer DEFAULT 0 NOT NULL,
	"form_mg_top" integer DEFAULT 10 NOT NULL,
	"form_mg_bottom" integer DEFAULT 10 NOT NULL,
	"form_mg_left" integer DEFAULT 40 NOT NULL,
	"form_mg_right" integer DEFAULT 40 NOT NULL,
	"form_rh_height" integer DEFAULT 0 NOT NULL,
	"form_rh_frequency" integer DEFAULT 0 NOT NULL,
	"form_rf_height" integer DEFAULT 0 NOT NULL,
	"form_rf_frequency" integer DEFAULT 0 NOT NULL,
	"form_ph_height" integer DEFAULT 45 NOT NULL,
	"form_ph_frequency" integer DEFAULT 1 NOT NULL,
	"form_pf_height" integer DEFAULT 35 NOT NULL,
	"form_pf_frequency" integer DEFAULT 1 NOT NULL,
	"form_dt_height" integer DEFAULT 30 NOT NULL,
	"form__sequence" integer DEFAULT nextval('"form_form__sequence_seq"'::text) NOT NULL,
	"form__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"form__user_entry" text DEFAULT "current_user"() NOT NULL,
	"form__status" character(1) DEFAULT 'A'::text NOT NULL,
	Constraint "form_pkey" Primary Key ("form_code")
);

--
--
--
-- Name: form Type: ACL Owner: 
--

REVOKE ALL on "form" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "form" to PUBLIC;
GRANT ALL on "form" to "source";

--
--
--
-- Name: fmdt_fmdt__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "fmdt_fmdt__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: fmdt Type: TABLE Owner: source
--

CREATE TABLE "fmdt" (
	"fmdt_form_code" text NOT NULL,
	"fmdt_desc" text DEFAULT 'New Item'::text,
	"fmdt_field_type" integer DEFAULT 0 NOT NULL,
	"fmdt_section" integer DEFAULT 1,
	"fmdt_text" text,
	"fmdt_x_coord" integer DEFAULT 0 NOT NULL,
	"fmdt_y_coord" integer DEFAULT 0 NOT NULL,
	"fmdt_width" integer DEFAULT 0 NOT NULL,
	"fmdt_height" integer DEFAULT 12 NOT NULL,
	"fmdt_bg_colour" text DEFAULT '255,255,255'::text NOT NULL,
	"fmdt_fg_colour" text DEFAULT '0,0,0'::text NOT NULL,
	"fmdt_bd_colour" text DEFAULT '0,0,0'::text NOT NULL,
	"fmdt_bd_width" integer DEFAULT 1 NOT NULL,
	"fmdt_bd_style" integer DEFAULT 0 NOT NULL,
	"fmdt_ft_family" text DEFAULT 'Helvetica'::text NOT NULL,
	"fmdt_ft_size" integer DEFAULT 8 NOT NULL,
	"fmdt_ft_weight" integer DEFAULT 25 NOT NULL,
	"fmdt_ft_italic" integer DEFAULT 0 NOT NULL,
	"fmdt_hz_align" integer DEFAULT 0 NOT NULL,
	"fmdt_vt_align" integer DEFAULT 2 NOT NULL,
	"fmdt_word_wrap" integer DEFAULT 0 NOT NULL,
	"fmdt_data_type" integer DEFAULT 0 NOT NULL,
	"fmdt_date_format" integer DEFAULT 7 NOT NULL,
	"fmdt_precision" integer DEFAULT 0 NOT NULL,
	"fmdt_currency" integer DEFAULT 36 NOT NULL,
	"fmdt_neg_colour" text DEFAULT '255,0,0'::text NOT NULL,
	"fmdt_comma_sep" integer DEFAULT 0 NOT NULL,
	"fmdt__sequence" integer DEFAULT nextval('"fmdt_fmdt__sequence_seq"'::text) NOT NULL,
	"fmdt__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"fmdt__user_entry" text DEFAULT "current_user"() NOT NULL,
	"fmdt__status" character(1) DEFAULT 'A'::text NOT NULL,
	Constraint "fmdt_pkey" Primary Key ("fmdt__sequence")
);

--
--
--
-- Name: fmdt Type: ACL Owner: 
--

REVOKE ALL on "fmdt" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "fmdt" to PUBLIC;
GRANT ALL on "fmdt" to "source";

--
--
--
-- Name: mtsv Type: VIEW Owner: source
--

CREATE VIEW "mtsv" as SELECT byteaparam(pg_trigger.tgargs, 0) AS mtsv_name, byteaparam(pg_trigger.tgargs, 1) AS mtsv_master_class, byteaparam(pg_trigger.tgargs, 4) AS mtsv_key, byteaparam(pg_trigger.tgargs, 2) AS mtsv_other_class, byteaparam(pg_trigger.tgargs, 5) AS mtsv_join, pg_trigger.oid AS mtsv__sequence, '08/10/2001 15:23:14.00 EST'::"timestamp" AS mtsv__timestamp, "current_user"() AS mtsv__user_entry, 'V'::bpchar AS mtsv__status FROM pg_trigger WHERE (((pg_trigger.tgtype = 9) AND (pg_trigger.tgnargs = 6)) AND (pg_trigger.tgisconstraint = 't'::bool));

--
--
--
-- Name: "mtcl_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "mtcl_insert_row" () RETURNS integer AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    tmp_mtcl__sequence mtcl.mtcl__sequence%TYPE;

    BEGIN

         -- get a mtcl__sequence
         select nextval(''mtcl_mtcl__sequence_seq'')
         into tmp_mtcl__sequence;

         -- add the new row
         insert into mtcl( mtcl_name, mtcl__sequence )
                   values( tmp_mtcl__sequence::text, tmp_mtcl__sequence);

    return tmp_mtcl__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "mtat_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "mtat_insert_row" () RETURNS integer AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    tmp_mtat__sequence mtat.mtat__sequence%TYPE;

    BEGIN

         -- get a mtat__sequence
         select nextval(''mtat_mtat__sequence_seq'')
         into tmp_mtat__sequence;

         -- add the new row
         insert into mtat( mtat_name, mtat__sequence )
                   values( tmp_mtat__sequence::text, tmp_mtat__sequence);

    return tmp_mtat__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "mtfn_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "mtfn_tr_before" () RETURNS opaque AS 'DECLARE
    rec_mtcl mtcl%ROWTYPE;
    rec_mtat mtat%ROWTYPE;

    BEGIN

    -- check/set mtfn_master_class

    select *
    into   rec_mtcl
    from   mtcl
    where  mtcl_name = new.mtfn_master_class;

    if ( not found ) then
      if ( new.mtfn_master_class = ''-'' ) then
        RAISE NOTICE ''inserting master class record for <%>'', new.mtfn_master_class;
        insert into mtcl(mtcl_name) values(new.mtfn_master_class);
      else
        RAISE EXCEPTION ''The TABLE <%> does not exist in the MTCL table'', new.mtfn_master_class;
        return null;
      end if;
    end if;

    -- check/set mtfn_other_class

    select *
    into   rec_mtcl
    from   mtcl
    where  mtcl_name = new.mtfn_other_class;

    if ( not found ) then
      if ( new.mtfn_other_class = ''-'' ) then
        RAISE NOTICE ''inserting other class record for <%>'', new.mtfn_other_class;
        insert into mtcl(mtcl_name) values(new.mtfn_other_class);
      else
        RAISE EXCEPTION ''The TABLE <%> does not exist in the MTCL table'', new.mtfn_other_class;
        return null;
      end if;
    end if;

    -- check/set mtfn_key

    select *
    into   rec_mtat
    from   mtat
    where  mtat_name = new.mtfn_key;

    if ( not found ) then
      if ( new.mtfn_key = ''-'' ) then
        RAISE NOTICE ''inserting attribute record for <%>'', new.mtfn_key;
        insert into mtat(mtat_name, mtat_class_name) values(new.mtfn_key, new.mtfn_master_class);
      else
        RAISE EXCEPTION ''The ATTRIBUTE <%> does not exist in the MTAT table'', new.mtfn_key;
        return null;
      end if;
    end if;


    -- check/set mtfn_join

    select *
    into   rec_mtat
    from   mtat
    where  mtat_name = new.mtfn_join;

    if ( not found ) then
      if ( new.mtfn_join = ''-'' ) then
        RAISE NOTICE ''inserting attribute record for <%>'', new.mtfn_join;
        insert into mtat(mtat_name, mtat_class_name) values(new.mtfn_join, new.mtfn_other_class);
      else
        RAISE EXCEPTION ''The ATTRIBUTE <%> does not exist in the MTAT table'', new.mtfn_join;
        return null;
      end if;
    end if;

    -- check/set mtfn_view

    select *
    into   rec_mtat
    from   mtat
    where  mtat_name = new.mtfn_view;

    if ( not found ) then
      if ( new.mtfn_view = ''-'' ) then
        RAISE NOTICE ''inserting attribute record for <%>'', new.mtfn_view;
        insert into mtat(mtat_name, mtat_class_name) values(new.mtfn_view, new.mtfn_other_class);
      else
        RAISE EXCEPTION ''The ATTRIBUTE <%> does not exist in the MTAT table'', new.mtfn_view;
        return null;
      end if;
    end if;


    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "mtrl_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "mtrl_tr_before" () RETURNS opaque AS 'DECLARE
    rec_mtcl mtcl%ROWTYPE;
    rec_mtat mtat%ROWTYPE;

    BEGIN

    -- check/set mtrl_master_class

    select *
    into   rec_mtcl
    from   mtcl
    where  mtcl_name = new.mtrl_master_class;

    if ( not found ) then
      if ( new.mtrl_master_class = ''-'' ) then
        RAISE NOTICE ''inserting master class record for <%>'', new.mtrl_master_class;
        insert into mtcl(mtcl_name) values(new.mtrl_master_class);
      else
        RAISE EXCEPTION ''The TABLE <%> does not exist in the MTCL table'', new.mtrl_master_class;
        return null;
      end if;
    end if;

    -- check/set mtrl_other_class

    select *
    into   rec_mtcl
    from   mtcl
    where  mtcl_name = new.mtrl_other_class;

    if ( not found ) then
      if ( new.mtrl_other_class = ''-'' ) then
        RAISE NOTICE ''inserting other class record for <%>'', new.mtrl_other_class;
        insert into mtcl(mtcl_name) values(new.mtrl_other_class);
      else
        RAISE EXCEPTION ''The TABLE <%> does not exist in the MTCL table'', new.mtrl_other_class;
        return null;
      end if;
    end if;

    -- check/set mtrl_key

    select *
    into   rec_mtat
    from   mtat
    where  mtat_name = new.mtrl_key;

    if ( not found ) then
      if ( new.mtrl_key = ''-'' ) then
        RAISE NOTICE ''inserting attribute record for <%>'', new.mtrl_key;
        insert into mtat(mtat_name, mtat_class_name) values(new.mtrl_key, new.mtrl_master_class);
      else
        RAISE EXCEPTION ''The ATTRIBUTE <%> does not exist in the MTAT table'', new.mtrl_key;
        return null;
      end if;
    end if;


    -- check/set mtrl_join

    select *
    into   rec_mtat
    from   mtat
    where  mtat_name = new.mtrl_join;

    if ( not found ) then
      if ( new.mtrl_join = ''-'' ) then
        RAISE NOTICE ''inserting attribute record for <%>'', new.mtrl_join;
        insert into mtat(mtat_name, mtat_class_name) values(new.mtrl_join, new.mtrl_other_class);
      else
        RAISE EXCEPTION ''The ATTRIBUTE <%> does not exist in the MTAT table'', new.mtrl_join;
        return null;
      end if;
    end if;


    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "form_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "form_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( new.form_code is null ) then
      new.form_code = new.form__sequence::text;
    end if;

    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: accl_accl__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "accl_accl__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: accl_accl__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "accl_accl__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "accl_accl__sequence_seq" to PUBLIC;
GRANT ALL on "accl_accl__sequence_seq" to "source";

--
--
--
-- Name: accl Type: TABLE Owner: source
--

CREATE TABLE "accl" (
	"accl_code" text,
	"accl_desc" text,
	"accl__sequence" integer DEFAULT nextval('"accl_accl__sequence_seq"'::text) NOT NULL,
	"accl__timestamp" timestamp with time zone DEFAULT now(),
	"accl__user_entry" text DEFAULT "current_user"(),
	"accl__status" character(1) DEFAULT 'N'::text,
	Constraint "accl_pkey" Primary Key ("accl__sequence")
);

--
--
--
-- Name: accl Type: ACL Owner: 
--

REVOKE ALL on "accl" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "accl" to PUBLIC;
GRANT ALL on "accl" to "source";

--
--
--
-- Name: bank_bank__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "bank_bank__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: bank_bank__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "bank_bank__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "bank_bank__sequence_seq" to PUBLIC;
GRANT ALL on "bank_bank__sequence_seq" to "source";

--
--
--
-- Name: bank Type: TABLE Owner: source
--

CREATE TABLE "bank" (
	"bank_code" text NOT NULL,
	"bank_name" text,
	"bank_address" text,
	"bank_suburb" text,
	"bank_state" text,
	"bank_postcode" text,
	"bank_phone" text,
	"bank_bank" text,
	"bank_branch" text,
	"bank_account" text,
	"bank__sequence" integer DEFAULT nextval('"bank_bank__sequence_seq"'::text) NOT NULL,
	"bank__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"bank__user_entry" text DEFAULT "current_user"() NOT NULL,
	"bank__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "bank_pkey" Primary Key ("bank_code")
);

--
--
--
-- Name: bank Type: ACL Owner: 
--

REVOKE ALL on "bank" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "bank" to PUBLIC;
GRANT ALL on "bank" to "source";

--
--
--
-- Name: cash_cash__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "cash_cash__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: cash_cash__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "cash_cash__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "cash_cash__sequence_seq" to PUBLIC;
GRANT ALL on "cash_cash__sequence_seq" to "source";

--
--
--
-- Name: cash Type: TABLE Owner: source
--

CREATE TABLE "cash" (
	"cash_paym__sequence" integer DEFAULT 0 NOT NULL,
	"cash_bank_code" text DEFAULT '-'::text NOT NULL,
	"cash_date" timestamp with time zone,
	"cash_amount" numeric(12,2) DEFAULT '0.00'::"numeric",
	"cash_text" text,
	"cash__sequence" integer DEFAULT nextval('"cash_cash__sequence_seq"'::text) NOT NULL,
	"cash__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"cash__user_entry" text DEFAULT "current_user"() NOT NULL,
	"cash__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "cash_pkey" Primary Key ("cash__sequence")
);

--
--
--
-- Name: cash Type: ACL Owner: 
--

REVOKE ALL on "cash" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "cash" to PUBLIC;
GRANT ALL on "cash" to "source";

--
--
--
-- Name: clsp_clsp__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "clsp_clsp__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: clsp_clsp__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "clsp_clsp__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "clsp_clsp__sequence_seq" to PUBLIC;
GRANT ALL on "clsp_clsp__sequence_seq" to "source";

--
--
--
-- Name: clsp Type: TABLE Owner: source
--

CREATE TABLE "clsp" (
	"clsp_code" text,
	"clsp_desc" text,
	"clsp__sequence" integer DEFAULT nextval('"clsp_clsp__sequence_seq"'::text) NOT NULL,
	"clsp__timestamp" timestamp with time zone DEFAULT now(),
	"clsp__user_entry" text DEFAULT "current_user"(),
	"clsp__status" character(1) DEFAULT 'N'::text,
	Constraint "clsp_pkey" Primary Key ("clsp__sequence")
);

--
--
--
-- Name: clsp Type: ACL Owner: 
--

REVOKE ALL on "clsp" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "clsp" to PUBLIC;
GRANT ALL on "clsp" to "source";

--
--
--
-- Name: clst_clst__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "clst_clst__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: clst_clst__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "clst_clst__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "clst_clst__sequence_seq" to PUBLIC;
GRANT ALL on "clst_clst__sequence_seq" to "source";

--
--
--
-- Name: clst Type: TABLE Owner: source
--

CREATE TABLE "clst" (
	"clst_serv_code_parent" text,
	"clst_serv_code_child" text,
	"clst_feet_code" text,
	"clst__sequence" integer DEFAULT nextval('"clst_clst__sequence_seq"'::text) NOT NULL,
	"clst__timestamp" timestamp with time zone DEFAULT now(),
	"clst__user_entry" text DEFAULT "current_user"(),
	"clst__status" character(1) DEFAULT 'N'::text,
	Constraint "clst_pkey" Primary Key ("clst__sequence")
);

--
--
--
-- Name: clst Type: ACL Owner: 
--

REVOKE ALL on "clst" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "clst" to PUBLIC;
GRANT ALL on "clst" to "source";

--
--
--
-- Name: cnty_cnty__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "cnty_cnty__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: cnty_cnty__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "cnty_cnty__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "cnty_cnty__sequence_seq" to PUBLIC;
GRANT ALL on "cnty_cnty__sequence_seq" to "source";

--
--
--
-- Name: cnty Type: TABLE Owner: source
--

CREATE TABLE "cnty" (
	"cnty_code" text,
	"cnty_desc" text,
	"cnty__sequence" integer DEFAULT nextval('"cnty_cnty__sequence_seq"'::text) NOT NULL,
	"cnty__timestamp" timestamp with time zone DEFAULT now(),
	"cnty__user_entry" text DEFAULT "current_user"(),
	"cnty__status" character(1) DEFAULT 'N'::text,
	Constraint "cnty_pkey" Primary Key ("cnty__sequence")
);

--
--
--
-- Name: cnty Type: ACL Owner: 
--

REVOKE ALL on "cnty" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "cnty" to PUBLIC;
GRANT ALL on "cnty" to "source";

--
--
--
-- Name: conf_conf__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "conf_conf__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: conf_conf__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "conf_conf__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "conf_conf__sequence_seq" to PUBLIC;
GRANT ALL on "conf_conf__sequence_seq" to "source";

--
--
--
-- Name: conf Type: TABLE Owner: source
--

CREATE TABLE "conf" (
	"conf_code" text DEFAULT '-'::text NOT NULL,
	"conf_desc" text,
	"conf_value" text,
	"conf_type" integer DEFAULT 0 NOT NULL,
	"conf_scope" integer,
	"conf_access" integer,
	"conf__sequence" integer DEFAULT nextval('"conf_conf__sequence_seq"'::text) NOT NULL,
	"conf__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"conf__user_entry" text DEFAULT "current_user"() NOT NULL,
	"conf__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "conf_pkey" Primary Key ("conf_code")
);

--
--
--
-- Name: conf Type: ACL Owner: 
--

REVOKE ALL on "conf" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "conf" to PUBLIC;
GRANT ALL on "conf" to "source";

--
--
--
-- Name: cred_cred__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "cred_cred__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: cred_cred__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "cred_cred__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "cred_cred__sequence_seq" to PUBLIC;
GRANT ALL on "cred_cred__sequence_seq" to "source";

--
--
--
-- Name: cred Type: TABLE Owner: source
--

CREATE TABLE "cred" (
	"cred_paym__sequence" integer NOT NULL,
	"cred_invc__sequence" integer NOT NULL,
	"cred_amount" numeric(12,2) DEFAULT '0.00'::"numeric",
	"cred_gst_amount" numeric(12,2) DEFAULT '0.00'::"numeric",
	"cred__sequence" integer DEFAULT nextval('"cred_cred__sequence_seq"'::text) NOT NULL,
	"cred__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"cred__user_entry" text DEFAULT "current_user"() NOT NULL,
	"cred__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "cred_pkey" Primary Key ("cred__sequence")
);

--
--
--
-- Name: cred Type: ACL Owner: 
--

REVOKE ALL on "cred" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "cred" to PUBLIC;
GRANT ALL on "cred" to "source";

--
--
--
-- Name: diag_diag__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "diag_diag__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: diag_diag__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "diag_diag__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "diag_diag__sequence_seq" to PUBLIC;
GRANT ALL on "diag_diag__sequence_seq" to "source";

--
--
--
-- Name: diag Type: TABLE Owner: source
--

CREATE TABLE "diag" (
	"diag_epsdserl" integer,
	"diag_type" text,
	"diag_icd9" text,
	"diag_date_start" timestamp with time zone,
	"diag_date_end" timestamp with time zone,
	"diag_desc" text,
	"diag__sequence" integer DEFAULT nextval('"diag_diag__sequence_seq"'::text) NOT NULL,
	"diag__timestamp" timestamp with time zone DEFAULT now(),
	"diag__user_entry" text DEFAULT "current_user"(),
	"diag__status" character(1) DEFAULT 'N'::text,
	Constraint "diag_pkey" Primary Key ("diag__sequence")
);

--
--
--
-- Name: diag Type: ACL Owner: 
--

REVOKE ALL on "diag" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "diag" to PUBLIC;
GRANT ALL on "diag" to "source";

--
--
--
-- Name: empl_empl__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "empl_empl__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: empl_empl__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "empl_empl__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "empl_empl__sequence_seq" to PUBLIC;
GRANT ALL on "empl_empl__sequence_seq" to "source";

--
--
--
-- Name: empl Type: TABLE Owner: source
--

CREATE TABLE "empl" (
	"empl_code" text NOT NULL,
	"empl_name" text,
	"empl_address" text,
	"empl_suburb" text,
	"empl_postcode" text,
	"empl_state" text,
	"empl__sequence" integer DEFAULT nextval('"empl_empl__sequence_seq"'::text) NOT NULL,
	"empl__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"empl__user_entry" text DEFAULT "current_user"() NOT NULL,
	"empl__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "empl_pkey" Primary Key ("empl_code")
);

--
--
--
-- Name: empl Type: ACL Owner: 
--

REVOKE ALL on "empl" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "empl" to PUBLIC;
GRANT ALL on "empl" to "source";

--
--
--
-- Name: epsd_epsd__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "epsd_epsd__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: epsd_epsd__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "epsd_epsd__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "epsd_epsd__sequence_seq" to PUBLIC;
GRANT ALL on "epsd_epsd__sequence_seq" to "source";

--
--
--
-- Name: epsd Type: TABLE Owner: source
--

CREATE TABLE "epsd" (
	"epsd_admit_date" timestamp with time zone,
	"epsd_admit_criteria" character(1),
	"epsd_admit_type" text,
	"epsd_admit_source" text,
	"epsd_neonate_weight" smallint,
	"epsd_trans_source" text,
	"epsd_healthfund" text,
	"epsd_ins_level" text,
	"epsd_speciality" text,
	"epsd_lvday_month" smallint,
	"epsd_lvday_finyr" smallint,
	"epsd_lvday_total" smallint,
	"epsd_sepn_date" timestamp with time zone,
	"epsd_sepn_type" text,
	"epsd_sepn_transfer" text,
	"epsd_re_admit" text,
	"epsd_user_flag_sepn" text,
	"epsd_study" text,
	"epsd_user_flag_diag" text,
	"epsd_patn__sequence" integer,
	"epsd__sequence" integer DEFAULT nextval('"epsd_epsd__sequence_seq"'::text) NOT NULL,
	"epsd__timestamp" timestamp with time zone DEFAULT now(),
	"epsd__user_entry" text DEFAULT "current_user"(),
	"epsd__status" character(1) DEFAULT 'N'::text,
	Constraint "epsd_pkey" Primary Key ("epsd__sequence")
);

--
--
--
-- Name: epsd Type: ACL Owner: 
--

REVOKE ALL on "epsd" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "epsd" to PUBLIC;
GRANT ALL on "epsd" to "source";

--
--
--
-- Name: feeb_feeb__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "feeb_feeb__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: feeb_feeb__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "feeb_feeb__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "feeb_feeb__sequence_seq" to PUBLIC;
GRANT ALL on "feeb_feeb__sequence_seq" to "source";

--
--
--
-- Name: feeb Type: TABLE Owner: source
--

CREATE TABLE "feeb" (
	"feeb_serv_code" text DEFAULT '-'::text NOT NULL,
	"feeb_feet_code" text DEFAULT '-'::text NOT NULL,
	"feeb_amount" numeric(12,2) DEFAULT '0.00'::"numeric",
	"feeb__sequence" integer DEFAULT nextval('"feeb_feeb__sequence_seq"'::text) NOT NULL,
	"feeb__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"feeb__user_entry" text DEFAULT "current_user"() NOT NULL,
	"feeb__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "feeb_pkey" Primary Key ("feeb__sequence")
);

--
--
--
-- Name: feeb Type: ACL Owner: 
--

REVOKE ALL on "feeb" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "feeb" to PUBLIC;
GRANT ALL on "feeb" to "source";

--
--
--
-- Name: feet_feet__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "feet_feet__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: feet_feet__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "feet_feet__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "feet_feet__sequence_seq" to PUBLIC;
GRANT ALL on "feet_feet__sequence_seq" to "source";

--
--
--
-- Name: feet Type: TABLE Owner: source
--

CREATE TABLE "feet" (
	"feet_code" text NOT NULL,
	"feet_desc" text,
	"feet__sequence" integer DEFAULT nextval('"feet_feet__sequence_seq"'::text) NOT NULL,
	"feet__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"feet__user_entry" text DEFAULT "current_user"() NOT NULL,
	"feet__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "feet_pkey" Primary Key ("feet_code")
);

--
--
--
-- Name: feet Type: ACL Owner: 
--

REVOKE ALL on "feet" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "feet" to PUBLIC;
GRANT ALL on "feet" to "source";

--
--
--
-- Name: hlfd_hlfd__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "hlfd_hlfd__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: hlfd_hlfd__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "hlfd_hlfd__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "hlfd_hlfd__sequence_seq" to PUBLIC;
GRANT ALL on "hlfd_hlfd__sequence_seq" to "source";

--
--
--
-- Name: hlfd Type: TABLE Owner: source
--

CREATE TABLE "hlfd" (
	"hlfd_code" text NOT NULL,
	"hlfd_group" text,
	"hlfd_desc" text,
	"hlfd__sequence" integer DEFAULT nextval('"hlfd_hlfd__sequence_seq"'::text) NOT NULL,
	"hlfd__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"hlfd__user_entry" text DEFAULT "current_user"() NOT NULL,
	"hlfd__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "hlfd_pkey" Primary Key ("hlfd_code")
);

--
--
--
-- Name: hlfd Type: ACL Owner: 
--

REVOKE ALL on "hlfd" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "hlfd" to PUBLIC;
GRANT ALL on "hlfd" to "source";

--
--
--
-- Name: icd9_icd9__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "icd9_icd9__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: icd9_icd9__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "icd9_icd9__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "icd9_icd9__sequence_seq" to PUBLIC;
GRANT ALL on "icd9_icd9__sequence_seq" to "source";

--
--
--
-- Name: icd9 Type: TABLE Owner: source
--

CREATE TABLE "icd9" (
	"icd9_codetype" character(1),
	"icd9_code" text,
	"icd9_age_edit" character(1),
	"icd9_low_age" smallint,
	"icd9_high_age" smallint,
	"icd9_sex_edit" character(1),
	"icd9_code_edit" character(1),
	"icd9_area_edit" character(1),
	"icd9_digit_5" text,
	"icd9_desc" text,
	"icd9__sequence" integer DEFAULT nextval('"icd9_icd9__sequence_seq"'::text) NOT NULL,
	"icd9__timestamp" timestamp with time zone DEFAULT now(),
	"icd9__user_entry" text DEFAULT "current_user"(),
	"icd9__status" character(1) DEFAULT 'N'::text,
	Constraint "icd9_pkey" Primary Key ("icd9__sequence")
);

--
--
--
-- Name: icd9 Type: ACL Owner: 
--

REVOKE ALL on "icd9" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "icd9" to PUBLIC;
GRANT ALL on "icd9" to "source";

--
--
--
-- Name: inst_inst__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "inst_inst__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: inst_inst__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "inst_inst__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "inst_inst__sequence_seq" to PUBLIC;
GRANT ALL on "inst_inst__sequence_seq" to "source";

--
--
--
-- Name: inst Type: TABLE Owner: source
--

CREATE TABLE "inst" (
	"inst_code" text,
	"inst_desc" text,
	"inst_addr" text,
	"inst_suburb" text,
	"inst_postc" text,
	"inst_cont" text,
	"inst__sequence" integer DEFAULT nextval('"inst_inst__sequence_seq"'::text) NOT NULL,
	"inst__timestamp" timestamp with time zone DEFAULT now(),
	"inst__user_entry" text DEFAULT "current_user"(),
	"inst__status" character(1) DEFAULT 'N'::text,
	Constraint "inst_pkey" Primary Key ("inst__sequence")
);

--
--
--
-- Name: inst Type: ACL Owner: 
--

REVOKE ALL on "inst" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "inst" to PUBLIC;
GRANT ALL on "inst" to "source";

--
--
--
-- Name: invc_invc__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "invc_invc__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: invc_invc__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "invc_invc__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "invc_invc__sequence_seq" to PUBLIC;
GRANT ALL on "invc_invc__sequence_seq" to "source";

--
--
--
-- Name: invc Type: TABLE Owner: source
--

CREATE TABLE "invc" (
	"invc_dbtr_code" text DEFAULT '-'::text NOT NULL,
	"invc_bank_code" text DEFAULT '-' NOT NULL,
	"invc_prov_code" text DEFAULT '-'::text NOT NULL,
	"invc_patn__sequence" integer DEFAULT 0 NOT NULL,
	"invc_empl_code" text DEFAULT '-'::text NOT NULL,
	"invc_feet_code" text DEFAULT '-'::text NOT NULL,
	"invc_rfdr_code" text DEFAULT '-'::text NOT NULL,
	"invc_rfdr_date" timestamp with time zone,
	"invc_rfdr_period" text,
	"invc_date_created" timestamp with time zone DEFAULT now(),
	"invc_date_printed" timestamp with time zone,
	"invc_date_reprint" timestamp with time zone,
	"invc_amount" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"invc_paid_amount" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"invc_gst_amount" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"invc_paid_gst_amount" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"invc__sequence" integer DEFAULT nextval('"invc_invc__sequence_seq"'::text) NOT NULL,
	"invc__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"invc__user_entry" text DEFAULT "current_user"() NOT NULL,
	"invc__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "invc_pkey" Primary Key ("invc__sequence")
);

--
--
--
-- Name: invc Type: ACL Owner: 
--

REVOKE ALL on "invc" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "invc" to PUBLIC;
GRANT ALL on "invc" to "source";

--
--
--
-- Name: labl_labl__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "labl_labl__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: labl_labl__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "labl_labl__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "labl_labl__sequence_seq" to PUBLIC;
GRANT ALL on "labl_labl__sequence_seq" to "source";

--
--
--
-- Name: labl Type: TABLE Owner: source
--

CREATE TABLE "labl" (
	"labl_id" text,
	"labl_subtype" text,
	"labl_text_label" text,
	"labl_class_name" text,
	"labl_attribute_name" text,
	"labl_row" integer,
	"labl_column" integer,
	"labl__sequence" integer DEFAULT nextval('"labl_labl__sequence_seq"'::text) NOT NULL,
	"labl__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"labl__user_entry" text DEFAULT "current_user"() NOT NULL,
	"labl__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "labl_pkey" Primary Key ("labl__sequence")
);

--
--
--
-- Name: labl Type: ACL Owner: 
--

REVOKE ALL on "labl" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "labl" to PUBLIC;
GRANT ALL on "labl" to "source";

--
--
--
-- Name: lthd_lthd__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "lthd_lthd__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: lthd_lthd__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "lthd_lthd__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "lthd_lthd__sequence_seq" to PUBLIC;
GRANT ALL on "lthd_lthd__sequence_seq" to "source";

--
--
--
-- Name: lthd Type: TABLE Owner: source
--

CREATE TABLE "lthd" (
	"lthd_prov_code" text,
	"lthd_target_id" text,
	"lthd_order" integer,
	"lthd_type" text,
	"lthd_data" text,
	"lthd_x_coord" integer,
	"lthd_y_coord" integer,
	"lthd_scale" numeric(3,1),
	"lthd_font" text,
	"lthd_size" numeric(4,1),
	"lthd_align" character(1),
	"lthd__sequence" integer DEFAULT nextval('"lthd_lthd__sequence_seq"'::text) NOT NULL,
	"lthd__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"lthd__user_entry" text DEFAULT "current_user"() NOT NULL,
	"lthd__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "lthd_pkey" Primary Key ("lthd__sequence")
);

--
--
--
-- Name: lthd Type: ACL Owner: 
--

REVOKE ALL on "lthd" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "lthd" to PUBLIC;
GRANT ALL on "lthd" to "source";

--
--
--
-- Name: mdaf_mdaf__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mdaf_mdaf__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mdaf_mdaf__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mdaf_mdaf__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mdaf_mdaf__sequence_seq" to PUBLIC;
GRANT ALL on "mdaf_mdaf__sequence_seq" to "source";

--
--
--
-- Name: mdaf Type: TABLE Owner: source
--

CREATE TABLE "mdaf" (
	"mdaf_patn__sequence" integer,
	"mdaf_prov_code" text,
	"mdaf_rfdr_code" text,
	"mdaf_date_created" timestamp with time zone,
	"mdaf_user_created" text,
	"mdaf_assign" text,
	"mdaf_date_printed" timestamp with time zone,
	"mdaf_mdbt__sequence" integer,
	"mdaf__sequence" integer DEFAULT nextval('"mdaf_mdaf__sequence_seq"'::text) NOT NULL,
	"mdaf__timestamp" timestamp with time zone DEFAULT now(),
	"mdaf__user_entry" text DEFAULT "current_user"(),
	"mdaf__status" character(1) DEFAULT 'N'::text,
	Constraint "mdaf_pkey" Primary Key ("mdaf__sequence")
);

--
--
--
-- Name: mdaf Type: ACL Owner: 
--

REVOKE ALL on "mdaf" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mdaf" to PUBLIC;
GRANT ALL on "mdaf" to "source";

--
--
--
-- Name: mdbt_mdbt__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mdbt_mdbt__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mdbt_mdbt__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mdbt_mdbt__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mdbt_mdbt__sequence_seq" to PUBLIC;
GRANT ALL on "mdbt_mdbt__sequence_seq" to "source";

--
--
--
-- Name: mdbt Type: TABLE Owner: source
--

CREATE TABLE "mdbt" (
	"mdbt_prov_code" character(4),
	"mdbt_first_assign" character(8),
	"mdbt_last_assign" character(8),
	"mdbt_batch_code" character(8),
	"mdbt_batch_count" integer,
	"mdbt_batch_amount" numeric(12,2),
	"mdbt_date_created" timestamp with time zone,
	"mdbt_time_created" character(5),
	"mdbt_user_created" character(12),
	"mdbt_date_sent" timestamp with time zone,
	"mdbt_time_sent" character(5),
	"mdbt__sequence" integer DEFAULT nextval('"mdbt_mdbt__sequence_seq"'::text) NOT NULL,
	"mdbt__timestamp" timestamp with time zone DEFAULT now(),
	"mdbt__user_entry" text DEFAULT "current_user"(),
	"mdbt__status" character(1) DEFAULT 'N'::text,
	Constraint "mdbt_pkey" Primary Key ("mdbt__sequence")
);

--
--
--
-- Name: mdbt Type: ACL Owner: 
--

REVOKE ALL on "mdbt" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mdbt" to PUBLIC;
GRANT ALL on "mdbt" to "source";

--
--
--
-- Name: mdcr_mdcr__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mdcr_mdcr__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mdcr_mdcr__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mdcr_mdcr__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mdcr_mdcr__sequence_seq" to PUBLIC;
GRANT ALL on "mdcr_mdcr__sequence_seq" to "source";

--
--
--
-- Name: mdcr Type: TABLE Owner: source
--

CREATE TABLE "mdcr" (
	"mdcr_paym__sequence" integer NOT NULL,
	"mdcr_svpf__sequence" integer NOT NULL,
	"mdcr_amount" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"mdcr__sequence" integer DEFAULT nextval('"mdcr_mdcr__sequence_seq"'::text) NOT NULL,
	"mdcr__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mdcr__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mdcr__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "mdcr_pkey" Primary Key ("mdcr__sequence")
);

--
--
--
-- Name: mdcr Type: ACL Owner: 
--

REVOKE ALL on "mdcr" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mdcr" to PUBLIC;
GRANT ALL on "mdcr" to "source";

--
--
--
-- Name: note_note__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "note_note__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: note_note__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "note_note__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "note_note__sequence_seq" to PUBLIC;
GRANT ALL on "note_note__sequence_seq" to "source";

--
--
--
-- Name: note Type: TABLE Owner: source
--

CREATE TABLE "note" (
	"note_patn__sequence" integer,
	"note_desc" text,
	"note__sequence" integer DEFAULT nextval('"note_note__sequence_seq"'::text) NOT NULL,
	"note__timestamp" timestamp with time zone DEFAULT now(),
	"note__user_entry" text DEFAULT "current_user"(),
	"note__status" character(1) DEFAULT 'N'::text,
	Constraint "note_pkey" Primary Key ("note__sequence")
);

--
--
--
-- Name: note Type: ACL Owner: 
--

REVOKE ALL on "note" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "note" to PUBLIC;
GRANT ALL on "note" to "source";

--
--
--
-- Name: paym_paym__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "paym_paym__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: paym_paym__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "paym_paym__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "paym_paym__sequence_seq" to PUBLIC;
GRANT ALL on "paym_paym__sequence_seq" to "source";

--
--
--
-- Name: paym Type: TABLE Owner: source
--

CREATE TABLE "paym" (
	"paym_date_entry" timestamp with time zone DEFAULT now() NOT NULL,
	"paym_user_entry" text DEFAULT "current_user"() NOT NULL,
	"paym_site_entry" text,
	"paym_amount" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"paym_tdtp_code" text DEFAULT '-'::text NOT NULL,
	"paym_drawer" text,
	"paym_bank" text,
	"paym_branch" text,
	"paym_bkdp__sequence" integer DEFAULT 0 NOT NULL,
	"paym__sequence" integer DEFAULT nextval('"paym_paym__sequence_seq"'::text) NOT NULL,
	"paym__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"paym__user_entry" text DEFAULT "current_user"() NOT NULL,
	"paym__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "paym_pkey" Primary Key ("paym__sequence")
);

--
--
--
-- Name: paym Type: ACL Owner: 
--

REVOKE ALL on "paym" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "paym" to PUBLIC;
GRANT ALL on "paym" to "source";

--
--
--
-- Name: prnt_prnt__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "prnt_prnt__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: prnt_prnt__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "prnt_prnt__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "prnt_prnt__sequence_seq" to PUBLIC;
GRANT ALL on "prnt_prnt__sequence_seq" to "source";

--
--
--
-- Name: prnt Type: TABLE Owner: source
--

CREATE TABLE "prnt" (
	"prnt_type" integer,
	"prnt_access" integer,
	"prnt_name" text NOT NULL,
	"prnt_desc" text,
	"prnt_command" text,
	"prnt__sequence" integer DEFAULT nextval('"prnt_prnt__sequence_seq"'::text) NOT NULL,
	"prnt__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"prnt__user_entry" text DEFAULT "current_user"() NOT NULL,
	"prnt__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "prnt_pkey" Primary Key ("prnt_name")
);

--
--
--
-- Name: prnt Type: ACL Owner: 
--

REVOKE ALL on "prnt" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "prnt" to PUBLIC;
GRANT ALL on "prnt" to "source";

--
--
--
-- Name: prov_prov__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "prov_prov__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: prov_prov__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "prov_prov__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "prov_prov__sequence_seq" to PUBLIC;
GRANT ALL on "prov_prov__sequence_seq" to "source";

--
--
--
-- Name: prov Type: TABLE Owner: source
--

CREATE TABLE "prov" (
	"prov_code" text NOT NULL,
	"prov_provider_num" text,
	"prov_name" text,
	"prov_address" text,
	"prov_suburb" text,
	"prov_state" text,
	"prov_postcode" text,
	"prov_salutation" text,
	"prov_phone" text,
	"prov_bank_code" text DEFAULT '-' NOT NULL,
	"prov__sequence" integer DEFAULT nextval('"prov_prov__sequence_seq"'::text) NOT NULL,
	"prov__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"prov__user_entry" text DEFAULT "current_user"() NOT NULL,
	"prov__status" character(1) DEFAULT 'N'::text NOT NULL,
	"prov_colour" text,
	Constraint "prov_pkey" Primary Key ("prov_code")
);

--
--
--
-- Name: prov Type: ACL Owner: 
--

REVOKE ALL on "prov" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "prov" to PUBLIC;
GRANT ALL on "prov" to "source";

--
--
--
-- Name: pyas_pyas__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "pyas_pyas__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: pyas_pyas__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "pyas_pyas__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "pyas_pyas__sequence_seq" to PUBLIC;
GRANT ALL on "pyas_pyas__sequence_seq" to "source";

--
--
--
-- Name: pyas Type: TABLE Owner: source
--

CREATE TABLE "pyas" (
	"pyas_paym__sequence" integer NOT NULL,
	"pyas_svpf__sequence" integer NOT NULL,
	"pyas_amount" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"pyas__sequence" integer DEFAULT nextval('"pyas_pyas__sequence_seq"'::text) NOT NULL,
	"pyas__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"pyas__user_entry" text DEFAULT "current_user"() NOT NULL,
	"pyas__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "pyas_pkey" Primary Key ("pyas__sequence")
);

--
--
--
-- Name: pyas Type: ACL Owner: 
--

REVOKE ALL on "pyas" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "pyas" to PUBLIC;
GRANT ALL on "pyas" to "source";

--
--
--
-- Name: rfdr_rfdr__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "rfdr_rfdr__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: rfdr_rfdr__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "rfdr_rfdr__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "rfdr_rfdr__sequence_seq" to PUBLIC;
GRANT ALL on "rfdr_rfdr__sequence_seq" to "source";

--
--
--
-- Name: rfdr Type: TABLE Owner: source
--

CREATE TABLE "rfdr" (
	"rfdr_code" text NOT NULL,
	"rfdr_name" text,
	"rfdr_street" text,
	"rfdr_suburb" text,
	"rfdr_postcode" text,
	"rfdr_state" text,
	"rfdr_provider" text,
	"rfdr_phone" text,
	"rfdr_salutation" text,
	"rfdr_index" text,
	"rfdr__sequence" integer DEFAULT nextval('"rfdr_rfdr__sequence_seq"'::text) NOT NULL,
	"rfdr__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"rfdr__user_entry" text DEFAULT "current_user"() NOT NULL,
	"rfdr__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "rfdr_pkey" Primary Key ("rfdr_code")
);

--
--
--
-- Name: rfdr Type: ACL Owner: 
--

REVOKE ALL on "rfdr" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "rfdr" to PUBLIC;
GRANT ALL on "rfdr" to "source";

--
--
--
-- Name: serv_serv__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "serv_serv__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: serv_serv__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "serv_serv__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "serv_serv__sequence_seq" to PUBLIC;
GRANT ALL on "serv_serv__sequence_seq" to "source";

--
--
--
-- Name: serv Type: TABLE Owner: source
--

CREATE TABLE "serv" (
	"serv_code" text NOT NULL,
	"serv_value" integer DEFAULT 1 NOT NULL,
	"serv_gst_percentage" integer DEFAULT 0,
	"serv_desc" text,
	"serv__sequence" integer DEFAULT nextval('"serv_serv__sequence_seq"'::text) NOT NULL,
	"serv__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"serv__user_entry" text DEFAULT "current_user"() NOT NULL,
	"serv__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "serv_pkey" Primary Key ("serv_code")
);

--
--
--
-- Name: serv Type: ACL Owner: 
--

REVOKE ALL on "serv" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "serv" to PUBLIC;
GRANT ALL on "serv" to "source";

--
--
--
-- Name: stts_stts__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "stts_stts__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: stts_stts__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "stts_stts__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "stts_stts__sequence_seq" to PUBLIC;
GRANT ALL on "stts_stts__sequence_seq" to "source";

--
--
--
-- Name: stts Type: TABLE Owner: source
--

CREATE TABLE "stts" (
	"stts_epsdserl" integer,
	"stts_start_date" timestamp with time zone,
	"stts_account_class" text,
	"stts_accom_type" text,
	"stts_care_type" text,
	"stts__sequence" integer DEFAULT nextval('"stts_stts__sequence_seq"'::text) NOT NULL,
	"stts__timestamp" timestamp with time zone DEFAULT now(),
	"stts__user_entry" text DEFAULT "current_user"(),
	"stts__status" character(1) DEFAULT 'N'::text,
	Constraint "stts_pkey" Primary Key ("stts__sequence")
);

--
--
--
-- Name: stts Type: ACL Owner: 
--

REVOKE ALL on "stts" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "stts" to PUBLIC;
GRANT ALL on "stts" to "source";

--
--
--
-- Name: svpf_svpf__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "svpf_svpf__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: svpf_svpf__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "svpf_svpf__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "svpf_svpf__sequence_seq" to PUBLIC;
GRANT ALL on "svpf_svpf__sequence_seq" to "source";

--
--
--
-- Name: svpf Type: TABLE Owner: source
--

CREATE TABLE "svpf" (
	"svpf_date_service" timestamp with time zone DEFAULT now() NOT NULL,
	"svpf_serv_code" text DEFAULT '-'::text NOT NULL,
	"svpf_percentage" integer DEFAULT 100 NOT NULL,
	"svpf_desc" text,
	"svpf_amount" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"svpf_gst_amount" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"svpf_invc__sequence" integer DEFAULT 0 NOT NULL,
	"svpf_mdaf__sequence" integer DEFAULT 0 NOT NULL,
	"svpf_patn__sequence" integer DEFAULT 0 NOT NULL,
	"svpf__sequence" integer DEFAULT nextval('"svpf_svpf__sequence_seq"'::text) NOT NULL,
	"svpf__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"svpf__user_entry" text DEFAULT "current_user"() NOT NULL,
	"svpf__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "svpf_pkey" Primary Key ("svpf__sequence")
);

--
--
--
-- Name: svpf Type: ACL Owner: 
--

REVOKE ALL on "svpf" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "svpf" to PUBLIC;
GRANT ALL on "svpf" to "source";

--
--
--
-- Name: tdtp_tdtp__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "tdtp_tdtp__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: tdtp_tdtp__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "tdtp_tdtp__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "tdtp_tdtp__sequence_seq" to PUBLIC;
GRANT ALL on "tdtp_tdtp__sequence_seq" to "source";

--
--
--
-- Name: tdtp Type: TABLE Owner: source
--

CREATE TABLE "tdtp" (
	"tdtp_code" text NOT NULL,
	"tdtp_list" text DEFAULT 'Cheques'::text NOT NULL,
	"tdtp_subtotal" text DEFAULT 'Cheques and Cash'::text NOT NULL,
	"tdtp_desc" text,
	"tdtp_entity" text,
	"tdtp_location" text,
	"tdtp__sequence" integer DEFAULT nextval('"tdtp_tdtp__sequence_seq"'::text) NOT NULL,
	"tdtp__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"tdtp__user_entry" text DEFAULT "current_user"() NOT NULL,
	"tdtp__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "tdtp_pkey" Primary Key ("tdtp_code")
);

--
--
--
-- Name: tdtp Type: ACL Owner: 
--

REVOKE ALL on "tdtp" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "tdtp" to PUBLIC;
GRANT ALL on "tdtp" to "source";

--
--
--
-- Name: "conf_integer" (text) Type: FUNCTION Owner: source
--

CREATE FUNCTION "conf_integer" (text) RETURNS integer AS 'DECLARE
    tmp_conf_code ALIAS for $1;
    period integer;

    BEGIN

    select  conf_value
    into    period
    from    conf
    where   conf_code = tmp_conf_code;

    if ( not found ) then
      period = 0;
    end if;

    return period;
      
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "short_date" (timestamp with time zone) Type: FUNCTION Owner: source
--

CREATE FUNCTION "short_date" (timestamp with time zone) RETURNS text AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    arg_ts alias for $1;

    BEGIN

        return to_char(arg_ts,''DD-MM-YYYY'');
      
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "get_paym_total" (integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "get_paym_total" (integer) RETURNS numeric AS 'DECLARE
        tmp_paym_number alias for $1;
        tmp_paym_total paym.paym_amount%TYPE;

    BEGIN

    
      select coalesce( sum(cred_amount + cred_gst_amount), ''0.00''::numeric )
      into   tmp_paym_total
      from   cred
      where  cred_paym__sequence = tmp_paym_number;

      return tmp_paym_total;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "set_paym_total" (integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "set_paym_total" (integer) RETURNS numeric AS 'DECLARE
        tmp_paym_number alias for $1;
        tmp_paym_total paym.paym_amount%TYPE;

    BEGIN

      tmp_paym_total = get_paym_total( tmp_paym_number );
      update  paym
      set     paym_amount = tmp_paym_total
      where   paym__sequence = tmp_paym_number;

      return tmp_paym_total;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "rfdr_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "rfdr_insert_row" () RETURNS integer AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    tmp_rfdr__sequence rfdr.rfdr__sequence%TYPE;

    BEGIN

         -- get a rfdr__sequence
         select nextval(''rfdr_rfdr__sequence_seq'')
         into tmp_rfdr__sequence;

         -- add the new row
         insert into rfdr( rfdr_code, rfdr__sequence )
                   values( tmp_rfdr__sequence::text, tmp_rfdr__sequence);

    return tmp_rfdr__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "tdtp_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "tdtp_insert_row" () RETURNS integer AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    tmp_tdtp__sequence tdtp.tdtp__sequence%TYPE;

    BEGIN

         -- get a tdtp__sequence
         select nextval(''tdtp_tdtp__sequence_seq'')
         into tmp_tdtp__sequence;

         -- add the new row
         insert into tdtp( tdtp_code, tdtp__sequence )
                   values( tmp_tdtp__sequence::text, tmp_tdtp__sequence);

    return tmp_tdtp__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "bank_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "bank_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( new.bank_code is null ) then
      new.bank_code = new.bank__sequence::text;
    end if;

    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "feet_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "feet_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( new.feet_code is null ) then
      new.feet_code = new.feet__sequence::text;
    end if;

    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "hlfd_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "hlfd_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( new.hlfd_code is null ) then
      new.hlfd_code = new.hlfd__sequence::text;
    end if;

    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: pmsc Type: VIEW Owner: source
--

CREATE VIEW "pmsc" as SELECT cred.cred_invc__sequence AS pmsc_invc__sequence, cred.cred_paym__sequence AS pmsc_paym__sequence, (cred.cred_amount + cred.cred_gst_amount) AS pmsc_total_amount, cred.cred_amount AS pmsc_amount, cred.cred_gst_amount AS pmsc_gst_amount, to_char(cred.cred__timestamp, 'YYYY-MM'::text) AS pmsc_month, cred.cred__sequence AS pmsc__sequence, '10/10/2001 12:57:53.00 EST'::"timestamp" AS pmsc__timestamp, "current_user"() AS pmsc__user_entry, 'N'::text AS pmsc__status FROM cred;

--
--
--
-- Name: pmsc Type: ACL Owner: 
--

REVOKE ALL on "pmsc" from PUBLIC;
GRANT SELECT on "pmsc" to PUBLIC;
GRANT ALL on "pmsc" to "source";

--
--
--
-- Name: pmsp Type: VIEW Owner: source
--

CREATE VIEW "pmsp" as SELECT pmsc.pmsc_month AS pmsp_month, sum(pmsc.pmsc_amount) AS pmsp_amount, sum(pmsc.pmsc_gst_amount) AS pmsp_gst_amount, sum(pmsc.pmsc_total_amount) AS pmsp_total_amount, count(*) AS pmsp_count, max(pmsc.pmsc__sequence) AS pmsp__sequence, '10/10/2001 12:57:56.00 EST'::"timestamp" AS pmsp__timestamp, "current_user"() AS pmsp__user_entry, 'N'::text AS pmsp__status FROM pmsc GROUP BY pmsc.pmsc_month;

--
--
--
-- Name: pmsp Type: ACL Owner: 
--

REVOKE ALL on "pmsp" from PUBLIC;
GRANT SELECT on "pmsp" to PUBLIC;
GRANT ALL on "pmsp" to "source";

--
--
--
-- Name: ssms Type: VIEW Owner: source
--

CREATE VIEW "ssms" as SELECT svpf.svpf_serv_code AS ssms_serv_code, (svpf.svpf_amount + svpf.svpf_gst_amount) AS ssms_total_amount, svpf.svpf_amount AS ssms_amount, svpf.svpf_gst_amount AS ssms_gst_amount, to_char(svpf.svpf_date_service, 'YYYY-MM'::text) AS ssms_month, svpf.svpf_date_service AS ssms_date_service, svpf.svpf__sequence AS ssms__sequence, '10/10/2001 12:57:59.00 EST'::"timestamp" AS ssms__timestamp, "current_user"() AS ssms__user_entry, 'N'::text AS ssms__status FROM svpf;

--
--
--
-- Name: ssms Type: ACL Owner: 
--

REVOKE ALL on "ssms" from PUBLIC;
GRANT SELECT on "ssms" to PUBLIC;
GRANT ALL on "ssms" to "source";

--
--
--
-- Name: ssmp Type: VIEW Owner: source
--

CREATE VIEW "ssmp" as SELECT ssms.ssms_month AS ssmp_month, sum(ssms.ssms_amount) AS ssmp_amount, sum(ssms.ssms_gst_amount) AS ssmp_gst_amount, sum(ssms.ssms_total_amount) AS ssmp_total_amount, count(*) AS ssmp_count, max(ssms.ssms__sequence) AS ssmp__sequence, '10/10/2001 12:58:02.00 EST'::"timestamp" AS ssmp__timestamp, "current_user"() AS ssmp__user_entry, 'N'::text AS ssmp__status FROM ssms GROUP BY ssms.ssms_month;

--
--
--
-- Name: ssmp Type: ACL Owner: 
--

REVOKE ALL on "ssmp" from PUBLIC;
GRANT SELECT on "ssmp" to PUBLIC;
GRANT ALL on "ssmp" to "source";

--
--
--
-- Name: ssmc Type: VIEW Owner: source
--

CREATE VIEW "ssmc" as SELECT ssms.ssms_month AS ssmc_month, ssms.ssms_serv_code AS ssmc_serv_code, sum(ssms.ssms_amount) AS ssmc_amount, sum(ssms.ssms_gst_amount) AS ssmc_gst_amount, sum(ssms.ssms_total_amount) AS ssmc_total_amount, count(*) AS ssmc_count, max(ssms.ssms__sequence) AS ssmc__sequence, '10/10/2001 12:58:05.00 EST'::"timestamp" AS ssmc__timestamp, "current_user"() AS ssmc__user_entry, 'N'::text AS ssmc__status FROM ssms GROUP BY ssms.ssms_month, ssms.ssms_serv_code;

--
--
--
-- Name: ssmc Type: ACL Owner: 
--

REVOKE ALL on "ssmc" from PUBLIC;
GRANT SELECT on "ssmc" to PUBLIC;
GRANT ALL on "ssmc" to "source";

--
--
--
-- Name: "bkdp_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "bkdp_insert_row" () RETURNS integer AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    tmp_bkdp__sequence bkdp.bkdp__sequence%TYPE;

    BEGIN

         -- get a bkdp__sequence
         select nextval(''bkdp_bkdp__sequence_seq'')
         into tmp_bkdp__sequence;

         -- add the new row
         insert into bkdp( bkdp__sequence )
                   values( tmp_bkdp__sequence);

         update paym
         set    paym_bkdp__sequence = tmp_bkdp__sequence
         where  paym_bkdp__sequence = 0
         and    (select count(*)
                 from   cred
                 where  cred_paym__sequence = paym.paym__sequence) > 0;

         update bkdp
         set    bkdp_desc = ''''
         where  bkdp__sequence = tmp_bkdp__sequence;
         

    return tmp_bkdp__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: bkdp_bkdp__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "bkdp_bkdp__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: bkdp_bkdp__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "bkdp_bkdp__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "bkdp_bkdp__sequence_seq" to PUBLIC;
GRANT ALL on "bkdp_bkdp__sequence_seq" to "source";

--
--
--
-- Name: bkdp Type: TABLE Owner: source
--

CREATE TABLE "bkdp" (
	"bkdp_date_created" timestamp with time zone DEFAULT now(),
	"bkdp_date_printed" timestamp with time zone,
	"bkdp_user_printed" text DEFAULT "current_user"(),
	"bkdp_bank_code" text DEFAULT '-' NOT NULL,
	"bkdp_desc" text DEFAULT 'New Batch'::text,
	"bkdp_amount" numeric(12,2) DEFAULT '0.00'::"numeric",
	"bkdp__sequence" integer DEFAULT nextval('"bkdp_bkdp__sequence_seq"'::text) NOT NULL,
	"bkdp__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"bkdp__user_entry" text DEFAULT "current_user"() NOT NULL,
	"bkdp__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "bkdp_pkey" Primary Key ("bkdp__sequence")
);

--
--
--
-- Name: bkdp Type: ACL Owner: 
--

REVOKE ALL on "bkdp" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "bkdp" to PUBLIC;
GRANT ALL on "bkdp" to "source";

--
--
--
-- Name: "empl_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "empl_insert_row" () RETURNS integer AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    tmp_empl__sequence empl.empl__sequence%TYPE;

    BEGIN

         -- get a empl__sequence
         select nextval(''empl_empl__sequence_seq'')
         into tmp_empl__sequence;

         -- add the new row
         insert into empl( empl_code, empl__sequence )
                   values( tmp_empl__sequence::text, tmp_empl__sequence);

    return tmp_empl__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "svpf_fixdesc" (integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "svpf_fixdesc" (integer) RETURNS integer AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    tmp_svpf__sequence ALIAS for $1;
    tmp_svpf_desc svpf.svpf_desc%TYPE;

    BEGIN

      select svpf_desc || '' '' || serv_desc
      into   tmp_svpf_desc
      from   svpf, serv
      where  svpf__sequence = tmp_svpf__sequence
      and    svpf_serv_code = serv.serv_code;

      update svpf
      set    svpf_desc = trim(both '' '' from tmp_svpf_desc)
      where  svpf__sequence = tmp_svpf__sequence;

    return tmp_svpf__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: fept Type: VIEW Owner: source
--

CREATE VIEW "fept" as SELECT feeb.feeb_feet_code AS fept_feet_code, feeb.feeb_serv_code AS fept_serv_code, serv.serv_gst_percentage AS fept_gst_percentage, feeb.feeb_amount AS fept_amount, to_char(((feeb.feeb_amount * "numeric"(serv.serv_gst_percentage)) / '100.00'::"numeric"), '00.00'::text) AS fept_gst_amount, serv.serv_desc AS fept_desc, feeb.feeb__sequence AS fept__sequence, '18/10/2001 12:09:19.00 EST'::"timestamp" AS fept__timestamp, "current_user"() AS fept__user_entry, 'N'::text AS fept__status FROM feeb, serv WHERE (serv.serv_code = feeb.feeb_serv_code);

--
--
--
-- Name: fept Type: ACL Owner: 
--

REVOKE ALL on "fept" from PUBLIC;
GRANT SELECT on "fept" to PUBLIC;
GRANT ALL on "fept" to "source";

--
--
--
-- Name: "quarter_date" (timestamp with time zone) Type: FUNCTION Owner: source
--

CREATE FUNCTION "quarter_date" (timestamp with time zone) RETURNS text AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    arg_ts alias for $1;

    BEGIN

        return extract(year from arg_ts::timestamp)||''-Q''||extract(quarter from arg_ts);
      
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "serv_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "serv_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( new.serv_code is null ) then
      new.serv_code = new.serv__sequence::text;
    end if;

    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "fn_serv_ckdel" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_serv_ckdel" () RETURNS opaque AS '
    DECLARE
      tmp_svpf_count integer;
    BEGIN
    -- check for dependents
   
    select into tmp_svpf_count count(*)
    from   svpf
    where  svpf_serv_code = old.serv_code;
    
    if ( TG_OP = ''DELETE'' ) then
       if tmp_svpf_count > 0  then
         RAISE EXCEPTION ''The Service Code % has % dependent services recorded, so cannot be deleted'',
                old.serv_code, tmp_svpf_count;
       end if;
       return old;
    end if;

    if ( TG_OP = ''UPDATE'' ) then
       if ( tmp_svpf_count > 0  and new.serv_code <> old.serv_code ) then
         RAISE EXCEPTION ''The Service Code % has % dependent services recorded, so cannot be changed'',
                old.serv_code, tmp_svpf_count;
       end if;
    end if;

    return new;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "crep_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "crep_insert_row" () RETURNS integer AS '
    DECLARE
                rec_crep crep%ROWTYPE;
                tmp_cred__sequence cred.cred__sequence%TYPE; 
                rec_invc invc%ROWTYPE;
                rec_cred cred%ROWTYPE;
                rec_paym paym%ROWTYPE;
                
    BEGIN

         -- Do not know invoice yet, so use 0 
         if ( rec_crep.crep_invc__sequence is null ) then
           -- new invoice = 0 to trigger
           rec_crep.crep_invc__sequence := 0;
            select  *
            into    rec_invc
            from    invc
            where   invc__sequence = rec_crep.crep_invc__sequence;
            -- if not found create a dummy to temporarily satisfy constraints
            if ( not found ) then
              insert into invc(invc__sequence) values(0);
            end if;
         end if;

         -- Do not know payment yet, so use 0 
         if ( rec_crep.crep_paym__sequence is null ) then
           -- new payment = 0 to trigger
           rec_crep.crep_paym__sequence := 0;
            select  *
            into    rec_paym
            from    paym
            where   paym__sequence = rec_crep.crep_paym__sequence;
            -- if not found create a dummy to temporarily satisfy constraints
            if ( not found ) then
              insert into paym(paym__sequence) values(0);
            end if;
         end if;

         -- set to non-null
         if ( rec_crep.crep_cred_amount is null ) then
            rec_crep.crep_cred_amount := 0.0;
         end if;

         -- set to non-null
         if ( rec_crep.crep_cred_gst_amount is null ) then
            rec_crep.crep_cred_gst_amount := 0.0;
         end if;


         -- get a cred__sequence
         select nextval(''cred_cred__sequence_seq'')
         into tmp_cred__sequence;
         -- add the cred record 
         insert into cred(
                     cred_paym__sequence,
                     cred_invc__sequence,
                     cred_amount,
                     cred_gst_amount,
                     cred__sequence)
               values(
                     rec_crep.crep_paym__sequence,
                     rec_crep.crep_invc__sequence,
                     rec_crep.crep_cred_amount,
                     rec_crep.crep_cred_gst_amount,
                     tmp_cred__sequence);

    return tmp_cred__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: docs_docs__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "docs_docs__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: docs_docs__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "docs_docs__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "docs_docs__sequence_seq" to PUBLIC;
GRANT ALL on "docs_docs__sequence_seq" to "source";

--
--
--
-- Name: docs Type: TABLE Owner: source
--

CREATE TABLE "docs" (
	"docs_patn__sequence" integer,
	"docs_url" text,
	"docs_title" text DEFAULT 'UNNAMED'::text NOT NULL,
	"docs__sequence" integer DEFAULT nextval('"docs_docs__sequence_seq"'::text) NOT NULL,
	"docs__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"docs__user_entry" text DEFAULT "current_user"() NOT NULL,
	"docs__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "docs_pkey" Primary Key ("docs__sequence")
);

--
--
--
-- Name: docs Type: ACL Owner: 
--

REVOKE ALL on "docs" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "docs" to PUBLIC;
GRANT ALL on "docs" to "source";

--
--
--
-- Name: "crev_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "crev_insert_row" () RETURNS integer AS '
    DECLARE
                rec_crev crev%ROWTYPE;
                tmp_paym__sequence paym.paym__sequence%TYPE; 
                tmp_cred__sequence cred.cred__sequence%TYPE; 
                rec_invc invc%ROWTYPE;
                rec_cred cred%ROWTYPE;
                rec_paym paym%ROWTYPE;
                
    BEGIN

         -- Do not know invoice yet, so use 0 
         if ( rec_crev.crev_invc__sequence is null ) then
           -- new invoice = 0 to trigger
           rec_crev.crev_invc__sequence := 0;
            select  *
            into    rec_invc
            from    invc
            where   invc__sequence = rec_crev.crev_invc__sequence;
            -- if not found create a dummy to temporarily satisfy constraints
            if ( not found ) then
              insert into invc(invc__sequence) values(0);
            end if;
         end if;

         -- set defaults
         if ( rec_crev.crev_date_entry is null ) then
            rec_crev.crev_date_entry := now();
         end if;

         if ( rec_crev.crev_user_entry is null ) then
            rec_crev.crev_user_entry := getpgusername();
         end if;

         if ( rec_crev.crev_site_entry is null ) then
            rec_crev.crev_site_entry := ''-'';
         end if;

            -- set to non-null
         if ( rec_crev.crev_paym_amount is null ) then
            rec_crev.crev_paym_amount := 0.0;
         end if;

         if ( rec_crev.crev_tdtp_code is null ) then
            rec_crev.crev_tdtp_code := ''-'';
         end if;

         -- set to non-null
         if ( rec_crev.crev_cred_amount is null ) then
            rec_crev.crev_cred_amount := 0.0;
         end if;

         -- set to non-null
         if ( rec_crev.crev_cred_gst_amount is null ) then
            rec_crev.crev_cred_gst_amount := 0.0;
         end if;

         -- get a paym__sequence
         select nextval(''paym_paym__sequence_seq'')
         into tmp_paym__sequence;


        --
        -- Debugging
        --
        RAISE NOTICE ''OUT->%/%/%/%/%/%/%/%/%/%/%/%/'',
                     rec_crev.crev_date_entry,
                     rec_crev.crev_user_entry,
                     rec_crev.crev_site_entry,
                     rec_crev.crev_paym_amount,
                     rec_crev.crev_tdtp_code,
                     rec_crev.crev_drawer,
                     rec_crev.crev_bank,
                     rec_crev.crev_branch,
                     tmp_paym__sequence,
                     rec_crev.crev_invc__sequence,
                     rec_crev.crev_cred_amount,
                     rec_crev.crev_cred_gst_amount;

         -- add the paym record
         insert into paym(
                     paym_date_entry,
                     paym_user_entry,
                     paym_site_entry,
                     paym_amount,
                     paym_tdtp_code,
                     paym_drawer,
                     paym_bank,
                     paym_branch,
                     paym__sequence)
              values(
                     rec_crev.crev_date_entry,
                     rec_crev.crev_user_entry,
                     rec_crev.crev_site_entry,
                     rec_crev.crev_paym_amount,
                     rec_crev.crev_tdtp_code,
                     rec_crev.crev_drawer,
                     rec_crev.crev_bank,
                     rec_crev.crev_branch,
                     tmp_paym__sequence);

         -- get a cred__sequence
         select nextval(''cred_cred__sequence_seq'')
         into tmp_cred__sequence;
         -- add the cred record 
         insert into cred(
                     cred_paym__sequence,
                     cred_invc__sequence,
                     cred_amount,
                     cred_gst_amount,
                     cred__sequence)
               values(
                     tmp_paym__sequence,
                     rec_crev.crev_invc__sequence,
                     rec_crev.crev_cred_amount,
                     rec_crev.crev_cred_gst_amount,
                     tmp_cred__sequence);

    return tmp_cred__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "disable_triggers" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "disable_triggers" () RETURNS integer AS 'DECLARE
       count integer;

    BEGIN

    EXECUTE ''
       UPDATE pg_class
       SET    reltriggers = 0
       WHERE  relname in (select mtcl_name from mtcl);'';
       GET DIAGNOSTICS count = ROW_COUNT;
       return count;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "enable_triggers" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "enable_triggers" () RETURNS integer AS 'DECLARE
       count integer;

    BEGIN

    EXECUTE ''
       UPDATE pg_class
       SET    reltriggers =  (SELECT count(*)
                              FROM   pg_trigger
                              where  pg_class.oid = tgrelid)
       WHERE  relname in (select mtcl_name from mtcl);'';
       GET DIAGNOSTICS count = ROW_COUNT;
       return count;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "count_triggers" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "count_triggers" () RETURNS text AS 'DECLARE
       count integer;
       tmp_rec record;
       output text;

    BEGIN

    count := 0;
    output := '''';
    for tmp_rec in 
      EXECUTE ''
         SELECT rpad(relname,10) ||
                to_char( reltriggers::integer,99999999) ||
                to_char( count_triggers,99999999) as output
         FROM   pg_class,
                (SELECT tgrelid, count(*) as count_triggers
                 FROM pg_trigger
                 GROUP BY tgrelid) as realtriggers
         WHERE  pg_class.oid = realtriggers.tgrelid 
         AND   relname in (select mtcl_name from mtcl)
         ORDER BY relname;''

      LOOP
        output := output || ''
'' || tmp_rec.output;
        count := count + 1;
      END LOOP;

    -- GET DIAGNOSTICS count = ROW_COUNT;
    return output;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: patf_patf__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "patf_patf__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: patf_patf__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "patf_patf__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "patf_patf__sequence_seq" to PUBLIC;
GRANT ALL on "patf_patf__sequence_seq" to "source";

--
--
--
-- Name: patf Type: TABLE Owner: source
--

CREATE TABLE "patf" (
	"patf_code" text NOT NULL,
	"patf_desc" text,
	"patf__sequence" integer DEFAULT nextval('"patf_patf__sequence_seq"'::text) NOT NULL,
	"patf__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"patf__user_entry" text DEFAULT "current_user"() NOT NULL,
	"patf__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "patf_pkey" Primary Key ("patf_code")
);

--
--
--
-- Name: patf Type: ACL Owner: 
--

REVOKE ALL on "patf" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "patf" to PUBLIC;
GRANT ALL on "patf" to "source";

--
--
--
-- Name: patn_patn__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "patn_patn__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: patn_patn__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "patn_patn__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "patn_patn__sequence_seq" to PUBLIC;
GRANT ALL on "patn_patn__sequence_seq" to "source";

--
--
--
-- Name: patn Type: TABLE Owner: source
--

CREATE TABLE "patn" (
	"patn_flno" text,
	"patn_psnam" text,
	"patn_fsnam" text,
	"patn_title" text,
	"patn_dob" timestamp with time zone,
	"patn_address" text,
	"patn_suburb" text,
	"patn_state" text DEFAULT 'Victoria'::text,
	"patn_postcode" text,
	"patn_phone" text,
	"patn_hlfd_code" text,
	"patn_ins_level" character(1),
	"patn_healthnumb" text,
	"patn_feet_code" text DEFAULT '-'::text NOT NULL,
	"patn_medicare" text,
	"patn_healthcard" text,
	"patn_dbtr_code" text DEFAULT '-'::text NOT NULL,
	"patn_empl_code" text DEFAULT '-'::text NOT NULL,
	"patn_rfdr_code" text DEFAULT '-'::text NOT NULL,
	"patn_ref_date" timestamp with time zone,
	"patn_ref_period" integer,
	"patn_prov_code" text DEFAULT '-'::text NOT NULL,
	"patn_country" text,
	"patn_aboriginality" character(1),
	"patn_sex" character(1),
	"patn_marital" character(1),
	"patn_accl_code" text,
	"patn_accommodation" character(1),
	"patn_care" character(1),
	"patn_patf_code" text DEFAULT '-'::text NOT NULL,
	"patn__sequence" integer DEFAULT nextval('"patn_patn__sequence_seq"'::text) NOT NULL,
	"patn__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"patn__user_entry" text DEFAULT "current_user"() NOT NULL,
	"patn__status" character(1) DEFAULT 'N'::text NOT NULL,
	"patn_last_visit" timestamp with time zone,
	"patn_last_service" timestamp with time zone,
	"patn_amount_outstanding" numeric(12,2),
	Constraint "patn_pkey" Primary Key ("patn__sequence")
);

--
--
--
-- Name: patn Type: ACL Owner: 
--

REVOKE ALL on "patn" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "patn" to PUBLIC;
GRANT ALL on "patn" to "source";

--
--
--
-- Name: "patn_patient_name" (integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "patn_patient_name" (integer) RETURNS text AS 'DECLARE
    arg_patn__sequence alias for $1;
    rec_patn patn%ROWTYPE;
    patient_name text;

    BEGIN
    select coalesce(patn_psnam,'''')  || '', '' || coalesce(patn_fsnam, '''')
    into   patient_name
    from   patn
    where  patn__sequence = arg_patn__sequence;

    if (not found) then
      RAISE EXCEPTION ''Patient not found for ID <%>'', arg_patn__sequence;
      return null;
    end if;
      
    
    return patient_name;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "patn_patient_title_name" (integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "patn_patient_title_name" (integer) RETURNS text AS 'DECLARE
    arg_patn__sequence alias for $1;
    rec_patn patn%ROWTYPE;
    patient_name text;

    BEGIN
    select coalesce(patn_title,'''')  ||
           '' '' || 
           coalesce( substr(patn_fsnam,1,1)||''.'', '''') ||
           coalesce(patn_psnam,'''')
    into   patient_name
    from   patn
    where  patn__sequence = arg_patn__sequence;

    if (not found) then
      RAISE EXCEPTION ''Patient not found for ID <%>'', arg_patn__sequence;
      return null;
    end if;
      
    
    return patient_name;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: surg_surg__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "surg_surg__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: surg_surg__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "surg_surg__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "surg_surg__sequence_seq" to PUBLIC;
GRANT ALL on "surg_surg__sequence_seq" to "source";

--
--
--
-- Name: surg Type: TABLE Owner: source
--

CREATE TABLE "surg" (
	"surg_patn__sequence" integer,
	"surg_diag_codes" text,
	"surg_diagnosis" text,
	"surg_oprn_codes" text,
	"surg_operation" text,
	"surg_oprn_date" timestamp with time zone,
	"surg_oprn_place" text,
	"surg__sequence" integer DEFAULT nextval('"surg_surg__sequence_seq"'::text) NOT NULL,
	"surg__timestamp" timestamp with time zone DEFAULT now(),
	"surg__user_entry" text DEFAULT "current_user"(),
	"surg__status" character(1) DEFAULT 'N'::text,
	Constraint "surg_pkey" Primary Key ("surg__sequence")
);

--
--
--
-- Name: surg Type: ACL Owner: 
--

REVOKE ALL on "surg" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "surg" to PUBLIC;
GRANT ALL on "surg" to "source";

--
--
--
-- Name: surv Type: VIEW Owner: source
--

CREATE VIEW "surv" as SELECT patn.patn_psnam AS surv_psnam, patn.patn_fsnam AS surv_fsnam, short_date(patn.patn_dob) AS surv_dob, surg.surg_diag_codes AS surv_diag_codes, surg.surg_diagnosis AS surv_diagnosis, surg.surg_oprn_codes AS surv_oprn_codes, surg.surg_operation AS surv_operation, surg.surg_oprn_date AS surv_oprn_date, surg.surg_oprn_place AS surv_oprn_place, surg.surg__sequence AS surv__sequence, surg.surg__timestamp AS surv__timestamp, surg.surg__user_entry AS surv__user_entry, surg.surg__status AS surv__status FROM (surg LEFT JOIN patn ON ((surg.surg_patn__sequence = patn.patn__sequence)));

--
--
--
-- Name: surv Type: ACL Owner: 
--

REVOKE ALL on "surv" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "surv" to PUBLIC;
GRANT ALL on "surv" to "source";

--
--
--
-- Name: eftr_eftr__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "eftr_eftr__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: eftr_eftr__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "eftr_eftr__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "eftr_eftr__sequence_seq" to PUBLIC;
GRANT ALL on "eftr_eftr__sequence_seq" to "source";

--
--
--
-- Name: eftr Type: TABLE Owner: source
--

CREATE TABLE "eftr" (
	"eftr_date_created" timestamp with time zone DEFAULT now(),
	"eftr_first__sequence" integer,
	"eftr_last__sequence" integer,
	"eftr__sequence" integer DEFAULT nextval('"eftr_eftr__sequence_seq"'::text) NOT NULL,
	"eftr__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"eftr__user_entry" text DEFAULT "current_user"() NOT NULL,
	"eftr__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "eftr_pkey" Primary Key ("eftr__sequence")
);

--
--
--
-- Name: eftr Type: ACL Owner: 
--

REVOKE ALL on "eftr" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "eftr" to PUBLIC;
GRANT ALL on "eftr" to "source";

--
--
--
-- Name: "eftr_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "eftr_tr_before" () RETURNS opaque AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    tmp_eftr__sequence eftr.eftr__sequence%TYPE;
    min_paym integer;
    max_paym integer;

    BEGIN

         select max(paym__sequence)
         into   max_paym
         from   paym;

         select max(eftr_last__sequence) + 1
         into   min_paym
         from   eftr;

         if ( max_paym is null ) then
            max_paym := 0;
         end if;

         if ( min_paym is null ) then
            min_paym := 0;
         end if;

         if ( max_paym <= min_paym ) then
           RAISE EXCEPTION ''There are no unreported payments'';
           return null;
         end if;

         RAISE NOTICE ''eftr__sequence = %'',new.eftr__sequence;
         new.eftr_first__sequence = min_paym;
         new.eftr_last__sequence = max_paym;
         

    return new;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "patf_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "patf_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( new.patf_code is null ) then
      new.patf_code = new.patf__sequence::text;
    end if;

    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: dbtr_dbtr__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "dbtr_dbtr__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: dbtr_dbtr__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "dbtr_dbtr__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "dbtr_dbtr__sequence_seq" to PUBLIC;
GRANT ALL on "dbtr_dbtr__sequence_seq" to "source";

--
--
--
-- Name: dbtr Type: TABLE Owner: source
--

CREATE TABLE "dbtr" (
	"dbtr_code" text NOT NULL,
	"dbtr_name" text,
	"dbtr_address" text,
	"dbtr_suburb" text,
	"dbtr_postcode" text,
	"dbtr_state" text,
	"dbtr_phone" text,
	"dbtr_group" text,
	"dbtr_last_statement" timestamp with time zone,
	"dbtr_delay_statement" interval DEFAULT '1 month',
	"dbtr__sequence" integer DEFAULT nextval('"dbtr_dbtr__sequence_seq"'::text) NOT NULL,
	"dbtr__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"dbtr__user_entry" text DEFAULT "current_user"() NOT NULL,
	"dbtr__status" character(1) DEFAULT 'N'::text NOT NULL,
	"dbtr_amount_outstanding" numeric(12,2),
	"dbtr_first_statement" interval DEFAULT '40 days',
	Constraint "dbtr_pkey" Primary Key ("dbtr_code")
);

--
--
--
-- Name: dbtr Type: ACL Owner: 
--

REVOKE ALL on "dbtr" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "dbtr" to PUBLIC;
GRANT ALL on "dbtr" to "source";

--
--
--
-- Name: patv Type: VIEW Owner: source
--

CREATE VIEW "patv" as SELECT patn.patn_flno AS patv_flno, patn.patn_psnam AS patv_psnam, patn.patn_fsnam AS patv_fsnam, patn.patn_title AS patv_title, short_date(patn.patn_dob) AS patv_dob, patn.patn_address AS patv_address, patn.patn_suburb AS patv_suburb, patn.patn_state AS patv_state, patn.patn_postcode AS patv_postcode, patn.patn_phone AS patv_phone, patn.patn_hlfd_code AS patv_hlfd_code, hlfd.hlfd_group AS patv_hlfd_group, hlfd.hlfd_desc AS patv_hlfd_desc, patn.patn_ins_level AS patv_ins_level, patn.patn_healthnumb AS patv_healthnumb, patn.patn_feet_code AS patv_feet_code, feet.feet_desc AS patv_feet_desc, patn.patn_medicare AS patv_medicare, patn.patn_healthcard AS patv_healthcard, patn.patn_dbtr_code AS patv_dbtr_code, dbtr.dbtr_name AS patv_dbtr_name, dbtr.dbtr_address AS patv_dbtr_address, dbtr.dbtr_suburb AS patv_dbtr_suburb, dbtr.dbtr_postcode AS patv_dbtr_postcode, dbtr.dbtr_state AS patv_dbtr_state, dbtr.dbtr_phone AS patv_dbtr_phone, patn.patn_empl_code AS patv_empl_code, empl.empl_name AS patv_empl_name, empl.empl_address AS patv_empl_address, empl.empl_suburb AS patv_empl_suburb, empl.empl_postcode AS patv_empl_postcode, empl.empl_state AS patv_empl_state, patn.patn_rfdr_code AS patv_rfdr_code, rfdr.rfdr_name AS patv_rfdr_name, rfdr.rfdr_street AS patv_rfdr_street, rfdr.rfdr_suburb AS patv_rfdr_suburb, rfdr.rfdr_postcode AS patv_rfdr_postcode, rfdr.rfdr_state AS patv_rfdr_state, rfdr.rfdr_provider AS patv_rfdr_provider, rfdr.rfdr_phone AS patv_rfdr_phone, rfdr.rfdr_salutation AS patv_rfdr_salutation, rfdr.rfdr_index AS patv_rfdr_index, short_date(patn.patn_ref_date) AS patv_ref_date, patn.patn_ref_period AS patv_ref_period, patn.patn_prov_code AS patv_prov_code, prov.prov_provider_num AS patv_prov_provider_num, prov.prov_name AS patv_prov_name, prov.prov_address AS patv_prov_address, prov.prov_suburb AS patv_prov_suburb, prov.prov_state AS patv_prov_state, prov.prov_postcode AS patv_prov_postcode, prov.prov_salutation AS patv_prov_salutation, prov.prov_phone AS patv_prov_phone, prov.prov_bank_code AS patv_prov_bank_code, patn.patn_country AS patv_country, patn.patn_aboriginality AS patv_aboriginality, patn.patn_sex AS patv_sex, patn.patn_marital AS patv_marital, patn.patn_accl_code AS patv_accl_code, patn.patn_accommodation AS patv_accommodation, patn.patn_care AS patv_care, patn.patn__sequence AS patv__sequence, patn.patn__timestamp AS patv__timestamp, patn.patn__user_entry AS patv__user_entry, patn.patn__status AS patv__status FROM ((((((patn LEFT JOIN rfdr ON ((patn.patn_rfdr_code = rfdr.rfdr_code))) LEFT JOIN hlfd ON ((patn.patn_hlfd_code = hlfd.hlfd_code))) LEFT JOIN feet ON ((patn.patn_feet_code = feet.feet_code))) LEFT JOIN dbtr ON ((patn.patn_dbtr_code = dbtr.dbtr_code))) LEFT JOIN empl ON ((patn.patn_empl_code = empl.empl_code))) LEFT JOIN prov ON ((patn.patn_prov_code = prov.prov_code)));

--
--
--
-- Name: patv Type: ACL Owner: 
--

REVOKE ALL on "patv" from PUBLIC;
GRANT SELECT on "patv" to PUBLIC;
GRANT ALL on "patv" to "source";

--
--
--
-- Name: gstv Type: VIEW Owner: source
--

CREATE VIEW "gstv" as SELECT cred.cred_paym__sequence AS gstv_cred_paym__sequence, cred.cred_invc__sequence AS gstv_cred_invc__sequence, cred.cred_amount AS gstv_cred_amount, cred.cred_gst_amount AS gstv_cred_gst_amount, paym.paym_date_entry AS gstv_paym_date_entry, paym.paym_user_entry AS gstv_paym_user_entry, paym.paym_site_entry AS gstv_paym_site_entry, paym.paym_amount AS gstv_paym_amount, paym.paym_tdtp_code AS gstv_paym_tdtp_code, paym.paym_drawer AS gstv_paym_drawer, paym.paym_bank AS gstv_paym_bank, paym.paym_branch AS gstv_paym_branch, paym.paym_bkdp__sequence AS gstv_paym_bkdp__sequence, short_date(bkdp.bkdp_date_created) AS gstv_day_date, quarter_date(bkdp.bkdp_date_created) AS gstv_quarter_date, bkdp.bkdp_date_created AS gstv_bkdp_date_created, bkdp.bkdp_date_printed AS gstv_bkdp_date_printed, bkdp.bkdp_user_printed AS gstv_bkdp_user_printed, bkdp.bkdp_bank_code AS gstv_bkdp_bank_code, bkdp.bkdp_desc AS gstv_bkdp_desc, bkdp.bkdp_amount AS gstv_bkdp_amount, invc.invc_dbtr_code AS gstv_invc_dbtr_code, invc.invc_bank_code AS gstv_invc_bank_code, invc.invc_prov_code AS gstv_invc_prov_code, invc.invc_patn__sequence AS gstv_invc_patn__sequence, invc.invc_empl_code AS gstv_invc_empl_code, invc.invc_feet_code AS gstv_invc_feet_code, invc.invc_rfdr_code AS gstv_invc_rfdr_code, invc.invc_rfdr_date AS gstv_invc_rfdr_date, invc.invc_rfdr_period AS gstv_invc_rfdr_period, invc.invc_date_created AS gstv_invc_date_created, invc.invc_date_printed AS gstv_invc_date_printed, invc.invc_date_reprint AS gstv_invc_date_reprint, invc.invc_amount AS gstv_invc_amount, invc.invc_paid_amount AS gstv_invc_paid_amount, invc.invc_gst_amount AS gstv_invc_gst_amount, invc.invc_paid_gst_amount AS gstv_invc_paid_gst_amount, patn.patn_flno AS gstv_patn_flno, patn.patn_psnam AS gstv_patn_psnam, patn.patn_fsnam AS gstv_patn_fsnam, patn.patn_title AS gstv_patn_title, short_date(patn.patn_dob) AS gstv_patn_dob, patn.patn_address AS gstv_patn_address, patn.patn_suburb AS gstv_patn_suburb, patn.patn_state AS gstv_patn_state, patn.patn_postcode AS gstv_patn_postcode, patn.patn_phone AS gstv_patn_phone, patn.patn_dbtr_code AS gstv_dbtr_code, dbtr.dbtr_name AS gstv_dbtr_name, dbtr.dbtr_address AS gstv_dbtr_address, dbtr.dbtr_suburb AS gstv_dbtr_suburb, dbtr.dbtr_postcode AS gstv_dbtr_postcode, dbtr.dbtr_state AS gstv_dbtr_state, dbtr.dbtr_phone AS gstv_dbtr_phone, patn.patn__sequence AS gstv__sequence, patn.patn__timestamp AS gstv__timestamp, patn.patn__user_entry AS gstv__user_entry, patn.patn__status AS gstv__status FROM cred, paym, bkdp, invc, patn, dbtr WHERE ((((((cred.cred_gst_amount <> '0'::"numeric") AND (paym.paym__sequence = cred.cred_paym__sequence)) AND (bkdp.bkdp__sequence = paym.paym_bkdp__sequence)) AND (invc.invc__sequence = cred.cred_invc__sequence)) AND (patn.patn__sequence = invc.invc_patn__sequence)) AND (dbtr.dbtr_code = invc.invc_dbtr_code));

--
--
--
-- Name: gstv Type: ACL Owner: 
--

REVOKE ALL on "gstv" from PUBLIC;
GRANT SELECT on "gstv" to PUBLIC;
GRANT ALL on "gstv" to "source";

--
--
--
-- Name: eftv Type: VIEW Owner: source
--

CREATE VIEW "eftv" as SELECT eftr.eftr__sequence AS eftv_eftr__sequence, paym.paym_bkdp__sequence AS eftv_bkdp__sequence, to_char(paym.paym_date_entry, 'DD-MM-YYYY HH24:MI'::text) AS eftv_date_entry, paym.paym_user_entry AS eftv_user_entry, paym.paym_site_entry AS eftv_site_entry, paym.paym_amount AS eftv_paym_amount, paym.paym_tdtp_code AS eftv_tdtp_code, tdtp.tdtp_list AS eftv_tdtp_list, tdtp.tdtp_subtotal AS eftv_tdtp_subtotal, tdtp.tdtp_desc AS eftv_tdtp_desc, tdtp.tdtp_entity AS eftv_tdtp_entity, tdtp.tdtp_location AS eftv_tdtp_location, paym.paym_drawer AS eftv_drawer, paym.paym_bank AS eftv_bank, paym.paym_branch AS eftv_branch, paym.paym__sequence AS eftv_paym__sequence, cred.cred_invc__sequence AS eftv_invc__sequence, cred.cred_amount AS eftv_cred_amount, cred.cred_gst_amount AS eftv_cred_gst_amount, invc.invc_patn__sequence AS eftv_patn__sequence, patn.patn_psnam AS eftv_patn_psnam, patn.patn_fsnam AS eftv_patn_fsnam, invc.invc_dbtr_code AS eftv_dbtr_code, dbtr.dbtr_name AS eftv_dbtr_name, bank.bank_code AS eftv_bank_code, bank.bank_name AS eftv_bank_name, bank.bank_address AS eftv_bank_address, bank.bank_suburb AS eftv_bank_suburb, bank.bank_state AS eftv_bank_state, bank.bank_postcode AS eftv_bank_postcode, bank.bank_phone AS eftv_bank_phone, bank.bank_bank AS eftv_bank_bank, bank.bank_branch AS eftv_bank_branch, bank.bank_account AS eftv_bank_account, cred.cred__sequence AS eftv__sequence, cred.cred__timestamp AS eftv__timestamp, cred.cred__user_entry AS eftv__user_entry, cred.cred__status AS eftv__status FROM eftr, paym, tdtp, bank, cred, invc, dbtr, patn WHERE (((((((((paym.paym__sequence >= eftr.eftr_first__sequence) AND (paym.paym__sequence <= eftr.eftr_last__sequence)) AND (tdtp.tdtp_list ~* 'directed'::text)) AND (tdtp.tdtp_code = paym.paym_tdtp_code)) AND (cred.cred_paym__sequence = paym.paym__sequence)) AND (invc.invc__sequence = cred.cred_invc__sequence)) AND (patn.patn__sequence = invc.invc_patn__sequence)) AND (dbtr.dbtr_code = invc.invc_dbtr_code)) AND (bank.bank_code = invc.invc_bank_code)) ORDER BY paym.paym__sequence, cred.cred__sequence;

--
--
--
-- Name: eftv Type: ACL Owner: 
--

REVOKE ALL on "eftv" from PUBLIC;
GRANT SELECT on "eftv" to PUBLIC;
GRANT ALL on "eftv" to "source";

--
--
--
-- Name: "fn_patn_null2default" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_patn_null2default" () RETURNS opaque AS '
        DECLARE
          rec_dbtr dbtr%ROWTYPE;
          dbtr_changed bool;
          dbtr_request bool;

        BEGIN

        if (new.patn_feet_code is null) then
          new.patn_feet_code := ''-'';
        end if;

        if (new.patn_dbtr_code is null) then
          new.patn_dbtr_code := ''-'';
        end if;

        -- the "-" character trigger insert/update of patient dbtr record
        -- also refersh if already a patient debtor
        if (( new.patn_dbtr_code = ''-''
              or new.patn_dbtr_code =''/''||trim( both from to_char(new.patn__sequence,''0000000'')) )
            and new.patn__sequence is not null
            and new.patn__sequence > 0 
            ) then
          RAISE NOTICE ''Self debtor - %'', new.patn_dbtr_code;
          dbtr_request := false;
          if ( new.patn_dbtr_code = ''-'' ) then
            dbtr_request := true;
          end if;

          new.patn_dbtr_code := ''/''||trim( both from to_char(new.patn__sequence,''0000000''));
          
          select  *
          into    rec_dbtr
          from    dbtr
          where   dbtr_code = new.patn_dbtr_code;
          if ( not found ) then
            rec_dbtr.dbtr_code = new.patn_dbtr_code;
            insert into dbtr( dbtr_code )
                      values(rec_dbtr.dbtr_code );
          end if;
          dbtr_changed := false;

          if ( rec_dbtr.dbtr_name is null or dbtr_request ) then
            rec_dbtr.dbtr_name := new.patn_title||'' ''||new.patn_fsnam||'' ''||new.patn_psnam;
            RAISE NOTICE ''Changing dbtr_name'';
            dbtr_changed := true;
          end if;

          if ( rec_dbtr.dbtr_address is null or dbtr_request ) then
            rec_dbtr.dbtr_address := new.patn_address;
            dbtr_changed := true;
          end if;

          if ( rec_dbtr.dbtr_suburb is null or dbtr_request ) then
            rec_dbtr.dbtr_suburb := new.patn_suburb;
            dbtr_changed := true;
          end if;

          if ( rec_dbtr.dbtr_state is null  or dbtr_request) then
            rec_dbtr.dbtr_state := new.patn_state;
            dbtr_changed := true;
          end if;

          if ( rec_dbtr.dbtr_postcode is null or dbtr_request ) then
            rec_dbtr.dbtr_postcode := new.patn_postcode;
            dbtr_changed := true;
          end if;

          if ( rec_dbtr.dbtr_phone is null or dbtr_request ) then
            rec_dbtr.dbtr_phone := new.patn_phone;
            dbtr_changed := true;
          end if;

          if ( dbtr_changed = true) then
            update dbtr
            set    dbtr_name = rec_dbtr.dbtr_name,
                   dbtr_address = rec_dbtr.dbtr_address,
                   dbtr_suburb = rec_dbtr.dbtr_suburb,
                   dbtr_state = rec_dbtr.dbtr_state,
                   dbtr_postcode = rec_dbtr.dbtr_postcode,
                   dbtr_phone = rec_dbtr.dbtr_phone
            where  dbtr_code = rec_dbtr.dbtr_code;
          end if;
                              
        end if;

        if (new.patn_empl_code is null) then
          new.patn_empl_code := ''-'';
        end if;

        if (new.patn_rfdr_code is null) then
          new.patn_rfdr_code := ''-'';
        end if;

        if (new.patn_prov_code is null) then
          new.patn_prov_code := ''-'';
        end if;

        if (new.patn_flno is null or new.patn_flno = ''-'') then
          new.patn_flno = new.patn__sequence;
        end if;

    return new;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: bkdv Type: VIEW Owner: source
--

CREATE VIEW "bkdv" as SELECT paym.paym_bkdp__sequence AS bkdv_bkdp__sequence, to_char(paym.paym_date_entry, 'DD-MM-YYYY HH24:MI'::text) AS bkdv_date_entry, paym.paym_user_entry AS bkdv_user_entry, paym.paym_site_entry AS bkdv_site_entry, paym.paym_amount AS bkdv_paym_amount, paym.paym_tdtp_code AS bkdv_tdtp_code, tdtp.tdtp_list AS bkdv_tdtp_list, tdtp.tdtp_subtotal AS bkdv_tdtp_subtotal, tdtp.tdtp_desc AS bkdv_tdtp_desc, tdtp.tdtp_entity AS bkdv_tdtp_entity, tdtp.tdtp_location AS bkdv_tdtp_location, paym.paym_drawer AS bkdv_drawer, paym.paym_bank AS bkdv_bank, paym.paym_branch AS bkdv_branch, paym.paym__sequence AS bkdv_paym__sequence, cred.cred_invc__sequence AS bkdv_invc__sequence, cred.cred_amount AS bkdv_cred_amount, cred.cred_gst_amount AS bkdv_cred_gst_amount, invc.invc_patn__sequence AS bkdv_patn__sequence, patn.patn_psnam AS bkdv_patn_psnam, patn.patn_fsnam AS bkdv_patn_fsnam, invc.invc_dbtr_code AS bkdv_dbtr_code, dbtr.dbtr_name AS bkdv_dbtr_name, bank.bank_code AS bkdv_bank_code, bank.bank_name AS bkdv_bank_name, bank.bank_address AS bkdv_bank_address, bank.bank_suburb AS bkdv_bank_suburb, bank.bank_state AS bkdv_bank_state, bank.bank_postcode AS bkdv_bank_postcode, bank.bank_phone AS bkdv_bank_phone, bank.bank_bank AS bkdv_bank_bank, bank.bank_branch AS bkdv_bank_branch, bank.bank_account AS bkdv_bank_account, cred.cred__sequence AS bkdv__sequence, cred.cred__timestamp AS bkdv__timestamp, cred.cred__user_entry AS bkdv__user_entry, cred.cred__status AS bkdv__status FROM paym, tdtp, bank, cred, invc, dbtr, patn WHERE ((((((tdtp.tdtp_code = paym.paym_tdtp_code) AND (cred.cred_paym__sequence = paym.paym__sequence)) AND (invc.invc__sequence = cred.cred_invc__sequence)) AND (patn.patn__sequence = invc.invc_patn__sequence)) AND (dbtr.dbtr_code = invc.invc_dbtr_code)) AND (bank.bank_code = invc.invc_bank_code));

--
--
--
-- Name: bkdv Type: ACL Owner: 
--

REVOKE ALL on "bkdv" from PUBLIC;
GRANT SELECT on "bkdv" to PUBLIC;
GRANT ALL on "bkdv" to "source";

--
--
--
-- Name: "rfdr_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "rfdr_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( TG_OP = ''UPDATE'' or TG_OP = ''INSERT'' ) then
      if ( new.rfdr_code is null ) then
         new.rfdr_code := new.rfdr__sequence::text;
      end if;
    end if;

    if ( TG_OP = ''UPDATE'' ) then
      if ( old.rfdr_code = ''-'' and new.rfdr_code != ''-'') then
        new.rfdr_code := old.rfdr_code;
        RAISE EXCEPTION ''This code (-) cannot be altered'';
        return old;
      end if;
    end if;
    if ( TG_OP = ''DELETE'') then
       if ( old.rfdr_code = ''-'') then
         RAISE EXCEPTION ''This code (-) cannot be deleted'';
         return old;
      end if;
    end if;

    if (TG_OP = ''DELETE'') then
      return old;
    else
      return new;
    end if;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "dbtr_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "dbtr_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( TG_OP = ''UPDATE'' or TG_OP = ''INSERT'' ) then
      if ( new.dbtr_code is null ) then
         new.dbtr_code := new.dbtr__sequence::text;
      end if;
    end if;

    if ( TG_OP = ''UPDATE'' ) then
      if ( old.dbtr_code = ''-'' and new.dbtr_code != ''-'') then
        new.dbtr_code := old.dbtr_code;
        RAISE EXCEPTION ''This code (-) cannot be altered'';
        return old;
      end if;
    end if;
    if ( TG_OP = ''DELETE'') then
       if ( old.dbtr_code = ''-'') then
         RAISE EXCEPTION ''This code (-) cannot be deleted'';
         return old;
      end if;
    end if;

    if (TG_OP = ''DELETE'') then
      return old;
    else
      return new;
    end if;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: dev_ri Type: VIEW Owner: source
--

CREATE VIEW "dev_ri" as SELECT t.oid AS trigoid, t.tgname AS trigname, c.relname AS trig_tbl, t.tgtype AS trig_type, t.tgfoid, f.proname AS trigfunc, t.tgenabled, t.tgconstrname, c2.relname AS const_tbl, t.tgdeferrable, t.tginitdeferred FROM pg_trigger t, pg_class c, pg_class c2, pg_proc f WHERE ((((t.tgrelid = c.oid) AND (t.tgconstrrelid = c2.oid)) AND (t.tgfoid = f.oid)) AND (t.tgname ~ '^RI_'::text)) ORDER BY t.oid;

--
--
--
-- Name: mtpt_mtpt__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mtpt_mtpt__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mtpt_mtpt__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mtpt_mtpt__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtpt_mtpt__sequence_seq" to PUBLIC;
GRANT ALL on "mtpt_mtpt__sequence_seq" to "source";

--
--
--
-- Name: mtpt Type: TABLE Owner: source
--

CREATE TABLE "mtpt" (
	"mtpt_name" text DEFAULT 'NAME'::text NOT NULL,
	"mtpt_rcs_header" text DEFAULT 'RCS HEADER'::text NOT NULL,
	"mtpt__sequence" integer DEFAULT nextval('"mtpt_mtpt__sequence_seq"'::text) NOT NULL,
	"mtpt__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mtpt__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mtpt__status" character(1) DEFAULT 'A'::text NOT NULL,
	Constraint "mtpt_pkey" Primary Key ("mtpt__sequence")
);

--
--
--
-- Name: mtpt Type: ACL Owner: 
--

REVOKE ALL on "mtpt" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtpt" to PUBLIC;
GRANT ALL on "mtpt" to "source";

--
--
--
-- Name: "invc_balance" (integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "invc_balance" (integer) RETURNS numeric AS 'DECLARE
        invc_number alias for $1;
        rec_invc invc%ROWTYPE;
        balance invc.invc_amount%TYPE;

    BEGIN
        -- get record
        select  *
        into    rec_invc
        from    invc
        where   invc__sequence = invc_number;

        if ( not found ) then
          return null;
        end if;

        if (rec_invc.invc_amount is null) then
          rec_invc.invc_amount = 0;
        end if;

        if (rec_invc.invc_gst_amount is null) then
          rec_invc.invc_gst_amount = 0;
        end if;

        if (rec_invc.invc_paid_amount is null) then
          rec_invc.invc_paid_amount = 0;
        end if;

        if (rec_invc.invc_paid_gst_amount is null) then
         rec_invc.invc_paid_gst_amount  = 0;
        end if;

        balance = rec_invc.invc_amount
                + rec_invc.invc_gst_amount
                - rec_invc.invc_paid_amount
                - rec_invc.invc_paid_gst_amount;

      return balance;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "invc_balance_then" (integer,integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "invc_balance_then" (integer,integer) RETURNS numeric AS 'DECLARE
        invc_number alias for $1;
        days_ago alias for $2;
        rec_invc invc%ROWTYPE;
        rec_cred cred%ROWTYPE;
        debits svpf.svpf_amount%TYPE;
        credits cred.cred_amount%TYPE;
        balance invc.invc_amount%TYPE;

    BEGIN
        -- get invc record
        select  *
        into    rec_invc
        from    invc
        where   invc__sequence = invc_number
        and     invc_date_printed <= now() - interval (to_char(days_ago,''9999'') || '' days'');

        if ( not found ) then
          RAISE EXCEPTION ''invc_balance_then - % not found'', invc_number;
          return null;
        end if;

        if (rec_invc.invc_amount is null) then
          rec_invc.invc_amount = 0;
        end if;

        if (rec_invc.invc_gst_amount is null) then
          rec_invc.invc_gst_amount = 0;
        end if;


        -- get cred record
        select  sum(cred_amount), sum(cred_gst_amount)
        into    rec_cred.cred_amount, rec_cred.cred_gst_amount
        from    cred,paym
        where   cred_invc__sequence = invc_number
        and     cred_paym__sequence = paym.paym__sequence
        and     paym_date_entry <= now() - interval (to_char(days_ago,''9999'') || '' days'');

        if ( not found ) then
          rec_cred.cred_amount = 0;
          rec_cred.cred_gst_amount = 0;
        end if;

        if (rec_cred.cred_amount is null) then
          rec_cred.cred_amount = 0;
        end if;

        if (rec_cred.cred_gst_amount is null) then
         rec_cred.cred_gst_amount  = 0;
        end if;

        balance = rec_invc.invc_amount
                + rec_invc.invc_gst_amount
                - rec_cred.cred_amount
                - rec_cred.cred_gst_amount;

      return balance;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "invc_setprintdates" (integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "invc_setprintdates" (integer) RETURNS boolean AS 'DECLARE
        invc_number alias for $1;
        printed invc.invc_date_printed%TYPE;

    BEGIN
        -- get record
        select  invc_date_printed
        into    printed
        from    invc
        where   invc__sequence = invc_number;

        if ( not found ) then
          return false;
        end if;

        if (printed is null) then
          update invc set invc_date_printed = ''now''::timestamp
          where  invc__sequence = invc_number;
        else
          update invc set invc_date_reprint = ''now''::timestamp
          where  invc__sequence = invc_number;
        end if;

      return true;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "invc_age_period" (integer,integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "invc_age_period" (integer,integer) RETURNS integer AS 'DECLARE
    tmp_invc__sequence ALIAS for $1;
    tmp_daysago ALIAS for $2;
    period integer;

    BEGIN

    -- 3600*24 = 86400
--    select  trunc(date_part(''epoch'',age(invc_date_printed))/(2592000))
    select  trunc(date_part(''epoch'',age(invc_date_printed))/86400)
    into    period
    from    invc
    where   invc_date_printed is not null
    and     invc__sequence = tmp_invc__sequence;

    if ( not found ) then
      return 0;
    end if;
    period := (period-tmp_daysago)/30;
    if ( period < 0 ) then
      period := 0;
    end if;

    if ( period > 4 ) then
      period := 4;
    end if;

    period := period * 30;

    return period;
      
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "invc_patient_name" (integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "invc_patient_name" (integer) RETURNS text AS 'DECLARE
    invc_number alias for $1;
    rec_patn patn%ROWTYPE;
    patient_name text;

    BEGIN
    select patn_psnam || '', '' || patn_fsnam
    into   patient_name
    from   patn,invc
    where  invc__sequence = invc_number
    and    patn__sequence = invc_patn__sequence;

    if (not found) then
      RAISE EXCEPTION ''Patient not found for invoice number <%>'', invc_number;
      return null;
    end if;
      
    
    return patient_name;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: crev Type: VIEW Owner: source
--

CREATE VIEW "crev" as SELECT paym.paym_date_entry AS crev_date_entry, paym.paym_user_entry AS crev_user_entry, paym.paym_site_entry AS crev_site_entry, paym.paym_amount AS crev_paym_amount, paym.paym_tdtp_code AS crev_tdtp_code, paym.paym_drawer AS crev_drawer, paym.paym_bank AS crev_bank, paym.paym_branch AS crev_branch, paym.paym__sequence AS crev_paym__sequence, cred.cred_invc__sequence AS crev_invc__sequence, cred.cred_amount AS crev_cred_amount, cred.cred_gst_amount AS crev_cred_gst_amount, invc_balance(cred.cred_invc__sequence) AS crev_invc_balance, cred.cred__sequence AS crev__sequence, cred.cred__timestamp AS crev__timestamp, cred.cred__user_entry AS crev__user_entry, cred.cred__status AS crev__status FROM cred, paym WHERE (cred.cred_paym__sequence = paym.paym__sequence);

--
--
--
-- Name: crev Type: ACL Owner: 
--

REVOKE ALL on "crev" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "crev" to PUBLIC;
GRANT ALL on "crev" to "source";

--
--
--
-- Name: crep Type: VIEW Owner: source
--

CREATE VIEW "crep" as SELECT invc.invc_dbtr_code AS crep_dbtr_code, invc.invc_bank_code AS crep_bank_code, invc.invc_prov_code AS crep_prov_code, invc.invc_patn__sequence AS crep_patn__sequence, invc.invc_empl_code AS crep_empl_code, invc.invc_feet_code AS crep_feet_code, invc.invc_rfdr_code AS crep_rfdr_code, invc.invc_rfdr_date AS crep_rfdr_date, invc.invc_rfdr_period AS crep_rfdr_period, invc.invc_date_created AS crep_date_created, invc.invc_date_printed AS crep_date_printed, invc.invc_date_reprint AS crep_date_reprint, invc.invc_amount AS crep_amount, invc.invc_paid_amount AS crep_paid_amount, invc.invc_gst_amount AS crep_gst_amount, invc.invc_paid_gst_amount AS crep_paid_gst_amount, cred.cred_paym__sequence AS crep_paym__sequence, cred.cred_invc__sequence AS crep_invc__sequence, cred.cred_amount AS crep_cred_amount, cred.cred_gst_amount AS crep_cred_gst_amount, invc_balance(cred.cred_invc__sequence) AS crep_invc_balance, cred.cred__sequence AS crep__sequence, cred.cred__timestamp AS crep__timestamp, cred.cred__user_entry AS crep__user_entry, cred.cred__status AS crep__status FROM cred, invc WHERE (cred.cred_invc__sequence = invc.invc__sequence);

--
--
--
-- Name: crep Type: ACL Owner: 
--

REVOKE ALL on "crep" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "crep" to PUBLIC;
GRANT ALL on "crep" to "source";

--
--
--
-- Name: agdi Type: VIEW Owner: source
--

CREATE VIEW "agdi" as SELECT invc.invc_dbtr_code AS agdi_dbtr_code, dbtr.dbtr_name AS agdi_dbtr_name, invc_patient_name(invc.invc__sequence) AS agdi_patient, invc.invc_feet_code AS agdi_feet_code, invc.invc__sequence AS agdi_invc__sequence, (((invc.invc_amount + invc.invc_gst_amount) - invc.invc_paid_amount) - invc.invc_paid_gst_amount) AS agdi_amount, invc_age_period(invc.invc__sequence, 0) AS agdi_period, CASE WHEN (invc.invc_date_printed ISNULL) THEN NULL::date ELSE date(invc.invc_date_printed) END AS agdi_date_printed, CASE WHEN (invc.invc_date_reprint ISNULL) THEN NULL::date ELSE date(invc.invc_date_reprint) END AS agdi_date_reprint, invc.invc__sequence AS agdi__sequence, invc.invc__timestamp AS agdi__timestamp, invc.invc__user_entry AS agdi__user_entry, invc.invc__status AS agdi__status FROM invc, dbtr WHERE ((((((invc.invc_amount + invc.invc_gst_amount) - invc.invc_paid_amount) - invc.invc_paid_gst_amount) <> '0.00'::"numeric") AND (dbtr.dbtr_code = invc.invc_dbtr_code)) AND (invc.invc_date_printed NOTNULL));

--
--
--
-- Name: agdi Type: ACL Owner: 
--

REVOKE ALL on "agdi" from PUBLIC;
GRANT SELECT on "agdi" to PUBLIC;
GRANT ALL on "agdi" to "source";

--
--
--
-- Name: agdd Type: VIEW Owner: source
--

CREATE VIEW "agdd" as SELECT agdi.agdi_dbtr_code AS agdd_dbtr_code, agdi.agdi_dbtr_name AS agdd_dbtr_name, sum(agdi.agdi_amount) AS agdd_amount, count(*) AS agdd_count, max(agdi.agdi__sequence) AS agdd__sequence, now() AS agdd__timestamp, "current_user"() AS agdd__user_entry, 'N'::text AS agdd__status FROM agdi GROUP BY agdi.agdi_dbtr_code, agdi.agdi_dbtr_name;

--
--
--
-- Name: agdd Type: ACL Owner: 
--

REVOKE ALL on "agdd" from PUBLIC;
GRANT SELECT on "agdd" to PUBLIC;
GRANT ALL on "agdd" to "source";

--
--
--
-- Name: agdp Type: VIEW Owner: source
--

CREATE VIEW "agdp" as SELECT agdi.agdi_period AS agdp_period, sum(agdi.agdi_amount) AS agdp_amount, count(*) AS agdp_count, max(agdi.agdi__sequence) AS agdp__sequence, now() AS agdp__timestamp, "current_user"() AS agdp__user_entry, 'N'::text AS agdp__status FROM agdi GROUP BY agdi.agdi_period;

--
--
--
-- Name: agdp Type: ACL Owner: 
--

REVOKE ALL on "agdp" from PUBLIC;
GRANT SELECT on "agdp" to PUBLIC;
GRANT ALL on "agdp" to "source";

--
--
--
-- Name: agdt Type: VIEW Owner: source
--

CREATE VIEW "agdt" as SELECT agdi.agdi_feet_code AS agdt_feet_code, sum(agdi.agdi_amount) AS agdt_amount, count(*) AS agdt_count, max(agdi.agdi__sequence) AS agdt__sequence, now() AS agdt__timestamp, "current_user"() AS agdt__user_entry, 'N'::text AS agdt__status FROM agdi GROUP BY agdi.agdi_feet_code;

--
--
--
-- Name: agdt Type: ACL Owner: 
--

REVOKE ALL on "agdt" from PUBLIC;
GRANT SELECT on "agdt" to PUBLIC;
GRANT ALL on "agdt" to "source";

--
--
--
-- Name: mttb_mttb__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mttb_mttb__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mttb_mttb__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mttb_mttb__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mttb_mttb__sequence_seq" to PUBLIC;
GRANT ALL on "mttb_mttb__sequence_seq" to "source";

--
--
--
-- Name: mttb Type: TABLE Owner: source
--

CREATE TABLE "mttb" (
	"mttb_name" text DEFAULT 'NAME'::text NOT NULL,
	"mttb_rcs_header" text DEFAULT 'RCS HEADER'::text NOT NULL,
	"mttb_notes" text,
	"mttb__sequence" integer DEFAULT nextval('"mttb_mttb__sequence_seq"'::text) NOT NULL,
	"mttb__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mttb__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mttb__status" character(1) DEFAULT 'A'::text NOT NULL,
	Constraint "mttb_pkey" Primary Key ("mttb__sequence")
);

--
--
--
-- Name: mttb Type: ACL Owner: 
--

REVOKE ALL on "mttb" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mttb" to PUBLIC;
GRANT ALL on "mttb" to "source";

--
--
--
-- Name: locn_locn__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "locn_locn__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: locn_locn__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "locn_locn__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "locn_locn__sequence_seq" to PUBLIC;
GRANT ALL on "locn_locn__sequence_seq" to "source";

--
--
--
-- Name: locn Type: TABLE Owner: source
--

CREATE TABLE "locn" (
	"locn_code" text NOT NULL,
	"locn_desc" text,
	"locn_colour" text,
	"locn__sequence" integer DEFAULT nextval('"locn_locn__sequence_seq"'::text) NOT NULL,
	"locn__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"locn__user_entry" text DEFAULT "current_user"() NOT NULL,
	"locn__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "locn_pkey" Primary Key ("locn_code")
);

--
--
--
-- Name: locn Type: ACL Owner: 
--

REVOKE ALL on "locn" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "locn" to PUBLIC;
GRANT ALL on "locn" to "source";

--
--
--
-- Name: "locn_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "locn_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( new.locn_code is null ) then
      new.locn_code = new.locn__sequence::text;
    end if;

    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: aptp_aptp__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "aptp_aptp__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: aptp_aptp__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "aptp_aptp__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "aptp_aptp__sequence_seq" to PUBLIC;
GRANT ALL on "aptp_aptp__sequence_seq" to "source";

--
--
--
-- Name: aptp Type: TABLE Owner: source
--

CREATE TABLE "aptp" (
	"aptp_code" text NOT NULL,
	"aptp_desc" text,
	"aptp_colour" text,
	"aptp_duration" integer,
	"aptp_repeat" integer DEFAULT 1,
	"aptp__sequence" integer DEFAULT nextval('"aptp_aptp__sequence_seq"'::text) NOT NULL,
	"aptp__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"aptp__user_entry" text DEFAULT "current_user"() NOT NULL,
	"aptp__status" character(1) DEFAULT 'N'::text NOT NULL,
	CONSTRAINT "aptp_aptp_duration" CHECK (((aptp_duration >= 10) AND (aptp_duration <= 60))),
	Constraint "aptp_pkey" Primary Key ("aptp_code")
);

--
--
--
-- Name: aptp Type: ACL Owner: 
--

REVOKE ALL on "aptp" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "aptp" to PUBLIC;
GRANT ALL on "aptp" to "source";

--
--
--
-- Name: "aptp_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "aptp_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( new.aptp_code is null ) then
      new.aptp_code = new.aptp__sequence::text;
    end if;

    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: apst_apst__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "apst_apst__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: apst_apst__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "apst_apst__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "apst_apst__sequence_seq" to PUBLIC;
GRANT ALL on "apst_apst__sequence_seq" to "source";

--
--
--
-- Name: apst Type: TABLE Owner: source
--

CREATE TABLE "apst" (
	"apst_code" text NOT NULL,
	"apst_desc" text,
	"apst_colour" text,
	"apst__sequence" integer DEFAULT nextval('"apst_apst__sequence_seq"'::text) NOT NULL,
	"apst__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"apst__user_entry" text DEFAULT "current_user"() NOT NULL,
	"apst__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "apst_pkey" Primary Key ("apst_code")
);

--
--
--
-- Name: apst Type: ACL Owner: 
--

REVOKE ALL on "apst" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "apst" to PUBLIC;
GRANT ALL on "apst" to "source";

--
--
--
-- Name: "apst_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "apst_tr_before" () RETURNS opaque AS 'DECLARE

    BEGIN
    -- set a dummy code
    if ( new.apst_code is null ) then
      new.apst_code = new.apst__sequence::text;
    end if;

    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: evnt_evnt__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "evnt_evnt__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: evnt_evnt__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "evnt_evnt__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "evnt_evnt__sequence_seq" to PUBLIC;
GRANT ALL on "evnt_evnt__sequence_seq" to "source";

--
--
--
-- Name: evnt Type: TABLE Owner: source
--

CREATE TABLE "evnt" (
	"evnt_patn__sequence" integer DEFAULT 0 NOT NULL,
	"evnt_prov_code" text DEFAULT '-' NOT NULL,
	"evnt_rfdr_code" text DEFAULT '-'::text NOT NULL,
	"evnt_locn_code" text DEFAULT '-' NOT NULL,
	"evnt_aptp_code" text DEFAULT '-'::text NOT NULL,
	"evnt_starttime" timestamp with time zone,
	"evnt_duration" interval DEFAULT '30 minutes' NOT NULL,
	"evnt_desc" text,
	"evnt_apst_code" text DEFAULT '-'::text NOT NULL,
	"evnt__sequence" integer DEFAULT nextval('"evnt_evnt__sequence_seq"'::text) NOT NULL,
	"evnt__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"evnt__user_entry" text DEFAULT "current_user"() NOT NULL,
	"evnt__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "evnt_pkey" Primary Key ("evnt__sequence")
);

--
--
--
-- Name: evnt Type: ACL Owner: 
--

REVOKE ALL on "evnt" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "evnt" to PUBLIC;
GRANT ALL on "evnt" to "source";

--
--
--
-- Name: "evnv_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "evnv_insert_row" () RETURNS integer AS '
    DECLARE
         rec_evnv evnv%ROWTYPE;
         tmp_evnt__sequence evnt.evnt__sequence%TYPE; 
         rec_patn patn%ROWTYPE;
                
    BEGIN

         -- Do not know patient yet, so use 0 
         if ( rec_evnv.evnv_patn__sequence is null ) then
           -- new invoice = 0 to trigger
           rec_evnv.evnv_patn__sequence := 0;
            select  *
            into    rec_patn
            from    patn
            where   patn__sequence = rec_evnv.evnv_patn__sequence;
            -- if not found create a dummy to temporarily satisfy constraints
            if ( not found ) then
              insert into patn(patn__sequence) values(0);
            end if;
         end if;

         -- get a evnt__sequence
         select nextval(''evnt_evnt__sequence_seq'')
         into tmp_evnt__sequence;
         -- add the evnt record 
         insert into evnt(
                     evnt_patn__sequence,
                     evnt__sequence)
               values(
                     rec_evnv.evnv_patn__sequence,
                     tmp_evnt__sequence);

    return tmp_evnt__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: aptd_aptd__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "aptd_aptd__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: aptd_aptd__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "aptd_aptd__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "aptd_aptd__sequence_seq" to PUBLIC;
GRANT ALL on "aptd_aptd__sequence_seq" to "source";

--
--
--
-- Name: aptd Type: TABLE Owner: source
--

CREATE TABLE "aptd" (
	"aptd_aptp_code" text NOT NULL,
	"aptd_desc" text,
	"aptd_colour" text DEFAULT '#FFFFFF',
	"aptd_prov_code" text,
	"aptd_locn_code" text,
	"aptd_dayofweek" integer DEFAULT 0,
	"aptd_weekofyear" text DEFAULT '',
	"aptd_dayofmonth" integer DEFAULT 0,
	"aptd_monthofyear" integer DEFAULT 0,
	"aptd_year" integer DEFAULT 0,
	"aptd_starting" time,
	"aptd_ending" time,
	"aptd__sequence" integer DEFAULT nextval('"aptd_aptd__sequence_seq"'::text) NOT NULL,
	"aptd__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"aptd__user_entry" text DEFAULT "current_user"() NOT NULL,
	"aptd__status" character(1) DEFAULT 'N'::text NOT NULL,
	CONSTRAINT "aptd_aptd_dayofmonth" CHECK (((aptd_dayofmonth >= 0) AND (aptd_dayofmonth <= 31))),
	CONSTRAINT "aptd_aptd_dayofweek" CHECK ((((aptd_dayofweek >= 0) AND (aptd_dayofweek <= 7)) OR (aptd_dayofweek ISNULL))),
	CONSTRAINT "aptd_aptd_monthofyear" CHECK (((aptd_monthofyear >= 0) AND (aptd_monthofyear <= 12))),
	CONSTRAINT "aptd_aptd_year" CHECK ((((aptd_year >= 2002) AND (aptd_year <= 2020)) OR (aptd_year = 0))),
	Constraint "aptd_pkey" Primary Key ("aptd__sequence")
);

--
--
--
-- Name: aptd Type: ACL Owner: 
--

REVOKE ALL on "aptd" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "aptd" to PUBLIC;
GRANT ALL on "aptd" to "source";

--
--
--
-- Name: "allownulls" (name,name) Type: FUNCTION Owner: source
--

CREATE FUNCTION "allownulls" (name,name) RETURNS boolean AS 'DECLARE
      tablename ALIAS FOR $1;
      colname ALIAS FOR $2;
      rec_affected int;
    BEGIN
     -- If any params are NULL, return NULL - this means function
     -- can be defined isstrict.
     IF tablename IS NULL OR colname IS NULL THEN
      RETURN NULL;
     END IF;
    
     -- Lock table with standard ALTER TABLE locks
     EXECUTE ''LOCK TABLE '' || quote_ident(tablename) || '' IN ACCESS EXCLUSIVE MODE'';
    
     -- Update the system catalogs
     EXECUTE ''UPDATE pg_attribute SET attnotnull = false WHERE attrelid =
    (SELECT oid FROM pg_class WHERE relname = '' || quote_literal(tablename) || '')
    AND attname = '' || quote_literal(colname);
    
     -- Get number of rows modified
     GET DIAGNOSTICS rec_affected = ROW_COUNT;
    
     -- Return number of rows modified
     RETURN (rec_affected = 1);
    
    END;' LANGUAGE 'plpgsql' WITH ( isstrict );

--
--
--
-- Name: "disallownulls" (name,name) Type: FUNCTION Owner: source
--

CREATE FUNCTION "disallownulls" (name,name) RETURNS boolean AS 'DECLARE
     tablename ALIAS FOR $1;
     colname ALIAS FOR $2;
     rec_affected int;
    BEGIN
     -- If any params are NULL, return NULL - this means function
     -- can be defined isstrict.
     IF tablename IS NULL OR colname IS NULL THEN
      RETURN NULL;
     END IF;
    
     -- Lock table with standard ALTER TABLE locks
     EXECUTE ''LOCK TABLE '' || quote_ident(tablename) || '' IN ACCESS EXCLUSIVE MODE'';

     -- See if there are any NULLs in the column already
     EXECUTE ''SELECT * FROM '' || quote_ident(tablename) || '' WHERE '' || quote_ident(colname) || '' IS NULL LIMIT 1'';
     IF FOUND THEN
      RAISE EXCEPTION ''Column contains NULL values.'';
      RETURN FALSE;
     END IF;
    
     -- Update the system catalogs
     EXECUTE ''UPDATE pg_attribute SET attnotnull = true WHERE attrelid =
        (SELECT oid FROM pg_class WHERE relname = '' || quote_literal(tablename) || '')
        AND attname = '' || quote_literal(colname);
    
     -- Get number of rows modified
     GET DIAGNOSTICS rec_affected = ROW_COUNT;
    
     -- Return success if one row affected
     RETURN (rec_affected = 1);
    
    END;' LANGUAGE 'plpgsql' WITH ( isstrict );

--
--
--
-- Name: "notv_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "notv_insert_row" () RETURNS integer AS '
    DECLARE
         rec_notv notv%ROWTYPE;
         tmp_note__sequence note.note__sequence%TYPE; 
         rec_patn patn%ROWTYPE;
                
    BEGIN

         -- Do not know patient yet, so use 0 
         if ( rec_notv.notv_patn__sequence is null ) then
           -- new invoice = 0 to trigger
           rec_notv.notv_patn__sequence := 0;
            select  *
            into    rec_patn
            from    patn
            where   patn__sequence = rec_notv.notv_patn__sequence;
            -- if not found create a dummy to temporarily satisfy constraints
            if ( not found ) then
              insert into patn(patn__sequence) values(0);
            end if;
         end if;

         -- get a note__sequence
         select nextval(''note_note__sequence_seq'')
         into tmp_note__sequence;
         -- add the note record 
         insert into note(
                     note_patn__sequence,
                     note__sequence)
               values(
                     rec_notv.notv_patn__sequence,
                     tmp_note__sequence);

    return tmp_note__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: notv Type: VIEW Owner: source
--

CREATE VIEW "notv" as SELECT note.note_patn__sequence AS notv_patn__sequence, to_char(note.note__timestamp, 'Day DD-MM-YYYY HH:MM am'::text) AS notv_time, note.note_desc AS notv_desc, patn.patn_flno AS notv_patn_flno, ((patn.patn_psnam || ', '::text) || patn.patn_fsnam) AS notv_patn_desc, patn.patn_psnam AS notv_patn_psnam, patn.patn_fsnam AS notv_patn_fsnam, patn.patn_title AS notv_patn_title, short_date(patn.patn_dob) AS notv_patn_dob, patn.patn_address AS notv_patn_address, patn.patn_suburb AS notv_patn_suburb, patn.patn_state AS notv_patn_state, patn.patn_postcode AS notv_patn_postcode, patn.patn_phone AS notv_patn_phone, patn.patn_country AS notv_patn_country, patn.patn_aboriginality AS notv_patn_aboriginality, patn.patn_sex AS notv_patn_sex, patn.patn_marital AS notv_patn_marital, patn.patn_accl_code AS notv_patn_accl_code, patn.patn_accommodation AS notv_patn_accommodation, patn.patn_care AS notv_patn_care, note.note__sequence AS notv__sequence, note.note__timestamp AS notv__timestamp, note.note__user_entry AS notv__user_entry, note.note__status AS notv__status FROM (note LEFT JOIN patn ON ((note.note_patn__sequence = patn.patn__sequence)));

--
--
--
-- Name: notv Type: ACL Owner: 
--

REVOKE ALL on "notv" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "notv" to PUBLIC;
GRANT ALL on "notv" to "source";

--
--
--
-- Name: cnrt_cnrt__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "cnrt_cnrt__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: cnrt_cnrt__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "cnrt_cnrt__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "cnrt_cnrt__sequence_seq" to PUBLIC;
GRANT ALL on "cnrt_cnrt__sequence_seq" to "source";

--
--
--
-- Name: cnrt Type: TABLE Owner: source
--

CREATE TABLE "cnrt" (
	"cnrt_patn__sequence" integer DEFAULT 0 NOT NULL,
	"cnrt_amount" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"ctrt_period" interval DEFAULT '3 months' NOT NULL,
	"cnrt_count" integer DEFAULT 3 NOT NULL,
	"cnrt_start_date" timestamp with time zone DEFAULT now() NOT NULL,
	"cnrt_serv_code" text DEFAULT '-'::text NOT NULL,
	"cnrt_first_installment" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"cnrt_other_installment" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"cnrt_last_date" timestamp with time zone,
	"cnrt_balance" numeric(12,2) DEFAULT '0.00'::"numeric" NOT NULL,
	"cnrt_end_date" timestamp with time zone,
	"cnrt__sequence" integer DEFAULT nextval('"cnrt_cnrt__sequence_seq"'::text) NOT NULL,
	"cnrt__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"cnrt__user_entry" text DEFAULT "current_user"() NOT NULL,
	"cnrt__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "cnrt_pkey" Primary Key ("cnrt__sequence")
);

--
--
--
-- Name: cnrt Type: ACL Owner: 
--

REVOKE ALL on "cnrt" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "cnrt" to PUBLIC;
GRANT ALL on "cnrt" to "source";

--
--
--
-- Name: "cnrt_post_debit" (integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "cnrt_post_debit" (integer) RETURNS integer AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;

    arg_patn__sequence ALIAS for $1;
    cnrt_row cnrt%ROWTYPE;
    count_post integer;
    amount_posted svpf.svpf_amount%TYPE;
    tmp_desc text;

    BEGIN

        count_post := 0;

        -- find the due postings
        --

        FOR cnrt_row IN

          select    *
          from      cnrt
          where     cnrt_patn__sequence = arg_patn__sequence
          and       cnrt_balance > 0
          and       ( cnrt_last_date + ctrt_period < ''today''::timestamp
                      or cnrt_last_date is null)

        LOOP

          if (cnrt_row.cnrt_last_date is null ) then
            amount_posted := cnrt_row.cnrt_first_installment;
          else
            amount_posted := cnrt_row.cnrt_other_installment;
          end if;
          tmp_desc := ''Installment - '' || to_char(''now''::timestamp, ''Month'');

          -- check for overposting
          if ( amount_posted > cnrt_row.cnrt_balance ) then
            amount_posted := cnrt_row.cnrt_balance;
          end if;

          -- post the installment
          -- raise notice ''%/%/%/%'', cnrt_row.cnrt_patn__sequence, cnrt_row.cnrt_serv_code,tmp_desc, amount_posted;
          insert into svpf(
                svpf_date_service,
                svpf_serv_code,
                svpf_desc,
                svpf_amount,
                svpf_patn__sequence)
            values(
                ''now''::timestamp,
                cnrt_row.cnrt_serv_code,
                tmp_desc,
                amount_posted,
                cnrt_row.cnrt_patn__sequence);

          -- update the contract

          update cnrt
          set    cnrt_balance = cnrt_balance - amount_posted,
                 cnrt_last_date = ''today''::timestamp
          where  cnrt__sequence = cnrt_row.cnrt__sequence;
          count_post := count_post + 1;

        END LOOP;

      

    return count_post;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "cnrt_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "cnrt_tr_before" () RETURNS opaque AS 'DECLARE
      tmp_serv_code serv.serv_code%TYPE;
      tmp_fept fept%ROWTYPE;
      count_other integer;
      count_remaining integer;

    BEGIN
        RAISE NOTICE ''cnrt_tr_before'';
      --
      -- if missing service code, then use a default
      -- 

      if (new.cnrt_serv_code is null) then
        new.cnrt_serv_code := ''-'';
      end if;

      --
      -- load the fee defaults
      -- 

      select fept.*
      into   tmp_fept
      from   fept,patn
      where  patn__sequence = new.cnrt_patn__sequence
      and    fept_serv_code = new.cnrt_serv_code
      and    fept_feet_code = patn_feet_code;

      if not found then
        tmp_fept.fept_amount := 0.00;
      end if;

      --
      -- set some defaults on INSERT
      --

      if ( TG_OP = ''INSERT'' ) then
        if (new.cnrt_amount is null) then
          new.cnrt_amount := tmp_fept.fept_amount;
        end if;
      end if;
      
      -- amount cannot be less then already posted amounts
      if ( new.cnrt_last_date is not null ) then
        if ( TG_OP = ''UPDATE'' ) then
          if ( new.cnrt_amount < (old.cnrt_amount - old.cnrt_balance) ) then
            new.cnrt_amount := old.cnrt_amount - old.cnrt_balance;
          end if;
          -- balance needs to be adjusted if amount is adjusted
          if ( new.cnrt_amount != old.cnrt_amount ) then
            new.cnrt_balance := new.cnrt_balance + ( new.cnrt_amount - old.cnrt_amount );
          end if;  
        end if;
      end if;

      --
      -- No nulls
      --

      if ( new.cnrt_amount is null ) then
        new.cnrt_amount := 0;
      end if;

      if ( new.cnrt_first_installment is null ) then
        new.cnrt_first_installment := 0;
      end if;

      if ( new.cnrt_other_installment is null ) then
        new.cnrt_other_installment := 0;
      end if;

      if ( new.cnrt_balance is null ) then
        new.cnrt_balance := 0;
      end if;

      if ( new.cnrt_start_date is null ) then
        new.cnrt_start_date := ''now''::timestamp;
      end if;

      if ( new.ctrt_period is null ) then
        new.ctrt_period := ''3 months''::interval;
      end if;

      if ( new.cnrt_count is null or new.cnrt_count < 1 ) then
        new.cnrt_count := 1;
      end if;

      --
      -- calculate
      --

      -- other installment count
      count_other := new.cnrt_count - 1;

      -- limit first installment
      if ( new.cnrt_first_installment > new.cnrt_amount ) then
        new.cnrt_first_installment := new.cnrt_amount;
      end if;

      -- if single payment
      if ( new.cnrt_count = 1 ) then
        new.cnrt_first_installment := new.cnrt_amount;
      else
        if ( new.cnrt_first_installment = 0 ) then
          new.cnrt_first_installment = new.cnrt_amount / new.cnrt_count;
        end if;
      end if;

      -- other payments
      new.cnrt_other_installment := new.cnrt_amount - new.cnrt_first_installment;
      if ( count_other > 1 ) then
        new.cnrt_other_installment := new.cnrt_other_installment / count_other;
      end if;

      
      --
      -- If this appears to be a new contract, then setup default values
      --

      if ( new.cnrt_last_date is null ) then
        new.cnrt_balance := new.cnrt_amount;
        count_remaining := new.cnrt_count;
      else
        count_remaining := round(new.cnrt_balance / new.cnrt_other_installment);
      end if;

      -- recalculate the end date
      new.cnrt_end_date := new.cnrt_last_date + ( count_remaining * new.ctrt_period );

    return new;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "cnrv_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "cnrv_insert_row" () RETURNS integer AS '
    DECLARE
                rec_cnrv cnrv%ROWTYPE;
                rec_patn patn%ROWTYPE;
                tmp_cnrt__sequence cnrt.cnrt__sequence%TYPE; 
                
    BEGIN

         -- Do not know invoice yet, so use 0 
         if ( rec_cnrv.cnrv_patn__sequence is null ) then
           -- new invoice = 0 to trigger
           rec_cnrv.cnrv_patn__sequence := 0;
            select  *
            into    rec_patn
            from    patn
            where   patn__sequence = rec_cnrv.cnrv_patn__sequence;
            -- if not found create a dummy to temporarily satisfy constraints
            if ( not found ) then
              insert into patn(patn__sequence) values(0);
            end if;
         end if;

         -- get a cnrt__sequence
         select nextval(''cnrt_cnrt__sequence_seq'')
         into tmp_cnrt__sequence;
         -- add the cnrt record 
         insert into cnrt(cnrt__sequence)
          values(tmp_cnrt__sequence);

    return tmp_cnrt__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: cnrv Type: VIEW Owner: source
--

CREATE VIEW "cnrv" as SELECT cnrt.cnrt_patn__sequence AS cnrv_patn__sequence, patn_patient_name(cnrt.cnrt_patn__sequence) AS cnrv_patient_name, cnrt.cnrt_amount AS cnrv_amount, cnrt.ctrt_period AS ctrv_period, cnrt.cnrt_count AS cnrv_count, short_date(cnrt.cnrt_start_date) AS cnrv_start_date, cnrt.cnrt_serv_code AS cnrv_serv_code, cnrt.cnrt_first_installment AS cnrv_first_installment, cnrt.cnrt_other_installment AS cnrv_other_installment, short_date(cnrt.cnrt_last_date) AS cnrv_last_date, cnrt.cnrt_balance AS cnrv_balance, short_date(cnrt.cnrt_end_date) AS cnrv_end_date, cnrt.cnrt__sequence AS cnrv__sequence, cnrt.cnrt__timestamp AS cnrv__timestamp, cnrt.cnrt__user_entry AS cnrv__user_entry, cnrt.cnrt__status AS cnrv__status FROM cnrt;

--
--
--
-- Name: cnrv Type: ACL Owner: 
--

REVOKE ALL on "cnrv" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "cnrv" to PUBLIC;
GRANT ALL on "cnrv" to "source";

--
--
--
-- Name: "create_metadata" (text) Type: FUNCTION Owner: source
--

CREATE FUNCTION "create_metadata" (text) RETURNS boolean AS 'DECLARE
    classname alias for $1;
    mtcl_row mtcl%ROWTYPE;
    pg_class_oid pg_class.oid%TYPE;
    pg_class_relname pg_class.relname%TYPE;
    mtcl_pk mtcl.mtcl_primary%TYPE;
    mtat_row RECORD;
    x_counter integer;
    -- regexp mtat.mtat_input_method%TYPE;

    BEGIN

        -- get class system metadata
        select oid,
               relname
        into   pg_class_oid,
               pg_class_relname
        from   pg_class
        where  relname = classname;
        if not found then
           RAISE NOTICE ''Unable to locate <%> in system catalogues'', classname;
           return false;
        end if;


        -- Check for existing mtcl record
        select into mtcl_row *
        from   mtcl
        where  mtcl_name = classname;
        if (not found) then
          -- No existing MTCL record, so create one.
          
          -- get primary key
          select a.attname
          into   mtcl_pk
          from   pg_index i,
                 pg_attribute a
          where  i.indrelid = pg_class_oid
          and    i.indkey[0] = a.attnum
          and    a.attrelid = pg_class_oid
          and    i.indisprimary = ''t'';
          if not found then
             mtcl_pk = classname||''__sequence'';
          end if;
          
          -- insert a mtcl record
          
          insert into mtcl(
                      mtcl_access,
                      mtcl_name,
                      mtcl_title,
                      mtcl_group,
                      mtcl_matrix_order,
                      mtcl_order_by,
                      mtcl_group_by,
                      mtcl_primary,
                      mtcl_userkey,
                      mtcl_userlabel,
                      mtcl_query_limit,
                      mtcl_query_offset,
                      mtcl_extras)
                  values(
                      ''31'',
                      classname,
                      classname,
                      NULL,
                      10000,
                      ''order by ''||classname||''__sequence'',
                      NULL,
                      mtcl_pk,
                      mtcl_pk,
                      mtcl_pk,
                      200,
                      0,
                      NULL);
        end if;

        -- insert attribute metadata
        -- regexp := classname||''__'';
        x_counter = 0;
        FOR mtat_row IN
          select  a.attnum,
                  a.attname,
                  initcap(translate(substr(a.attname, position(''_'' in a.attname)+1), ''_'', '' ''))
                                                    as att_title,
                  t.typname,
                  (case when a.atttypmod > 0 then
                              a.atttypmod-4 
                    else 30
                   end) as mtat_length,
                   (case when a.attname ~ ''^....__'' then
                      ''SYSTEM''::text
                    else
                      ''10''::text
                    end) as mtat_input_method
          from     pg_attribute a,
                   pg_type t
          where    a.attname not in (select mtat_name from mtat)
          and      a.attrelid = pg_class_oid
          and      a.attnum > 0
          and      a.atttypid = t.oid
          order by attnum
        LOOP
          insert into mtat(
                      mtat_class_name,
                      mtat_access,
                      mtat_name,
                      mtat_type,
                      mtat_length,
                      mtat_operator,
                      mtat_title,
                      mtat_displen,
                      mtat_browse_order,
                      mtat_view_order,
                      mtat_input_method,
                      mtat_default,
                      mtat_htmltagatt)
                  values(
                      classname,
                      ''31'',
                      mtat_row.attname,
                      mtat_row.typname,
                      mtat_row.mtat_length,
                      ''~*'',
                      trim(both from mtat_row.att_title),
                      mtat_row.mtat_length,
                      mtat_row.attnum * 10,
                      mtat_row.attnum * 10,
                      mtat_row.mtat_input_method,
                      '''',
                      '''');
          x_counter := x_counter + 1;
        END LOOP;
        raise notice ''additions = %'', x_counter;

        -- cleanup obsolete attributes
        delete from mtat
        where  mtat_class_name = classname
        and    mtat_name not in
               (select attname
                from   pg_attribute
                where  attrelid = pg_class_oid);
        GET DIAGNOSTICS x_counter =  ROW_COUNT;
        raise notice ''deletions = %'', x_counter;
--
    return true;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: mtop_mtop__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mtop_mtop__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mtop_mtop__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mtop_mtop__sequence_seq" from PUBLIC;
GRANT SELECT on "mtop_mtop__sequence_seq" to PUBLIC;
GRANT ALL on "mtop_mtop__sequence_seq" to "source";

--
--
--
-- Name: mtop Type: TABLE Owner: source
--

CREATE TABLE "mtop" (
	"mtop_code" text NOT NULL,
	"mtop_desc" text,
	"mtop__sequence" integer DEFAULT nextval('"mtop_mtop__sequence_seq"'::text) NOT NULL,
	"mtop__timestamp" timestamp with time zone DEFAULT "timestamp"('now'::text) NOT NULL,
	"mtop__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mtop__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "mtop_pkey" Primary Key ("mtop_code")
);

--
--
--
-- Name: mtop Type: ACL Owner: 
--

REVOKE ALL on "mtop" from PUBLIC;
GRANT SELECT on "mtop" to PUBLIC;
GRANT ALL on "mtop" to "source";

--
--
--
-- Name: mtal_mtal__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mtal_mtal__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mtal_mtal__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mtal_mtal__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtal_mtal__sequence_seq" to PUBLIC;
GRANT ALL on "mtal_mtal__sequence_seq" to "source";

--
--
--
-- Name: mtal Type: TABLE Owner: source
--

CREATE TABLE "mtal" (
	"mtal_mtat_name" text,
	"mtal_mtop_code" text,
	"mtal_value" text,
	"mtal_colour" text,
	"mtal_priority" integer DEFAULT 0,
	"mtal__sequence" integer DEFAULT nextval('"mtal_mtal__sequence_seq"'::text) NOT NULL,
	"mtal__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mtal__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mtal__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "mtal_pkey" Primary Key ("mtal__sequence")
);

--
--
--
-- Name: mtal Type: ACL Owner: 
--

REVOKE ALL on "mtal" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtal" to PUBLIC;
GRANT ALL on "mtal" to "source";

--
--
--
-- Name: mtag_mtag__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mtag_mtag__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mtag_mtag__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mtag_mtag__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtag_mtag__sequence_seq" to PUBLIC;
GRANT ALL on "mtag_mtag__sequence_seq" to "source";

--
--
--
-- Name: mtag Type: TABLE Owner: source
--

CREATE TABLE "mtag" (
	"mtag_name" text DEFAULT 'new' NOT NULL,
	"mtag_title" text DEFAULT 'new',
	"mtag_parent" text,
	"mtag_access" integer DEFAULT 31 NOT NULL,
	"mtag_list_order" text DEFAULT 'Z-LAST' NOT NULL,
	"mtag__sequence" integer DEFAULT nextval('"mtag_mtag__sequence_seq"'::text) NOT NULL,
	"mtag__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mtag__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mtag__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "mtag_pkey" Primary Key ("mtag_name")
);

--
--
--
-- Name: mtag Type: ACL Owner: 
--

REVOKE ALL on "mtag" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtag" to PUBLIC;
GRANT ALL on "mtag" to "source";

--
--
--
-- Name: mtad_mtad__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mtad_mtad__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mtad_mtad__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mtad_mtad__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtad_mtad__sequence_seq" to PUBLIC;
GRANT ALL on "mtad_mtad__sequence_seq" to "source";

--
--
--
-- Name: mtad Type: TABLE Owner: source
--

CREATE TABLE "mtad" (
	"mtad_title" text,
	"mtad_icon" text,
	"mtad_parent" text,
	"mtad_class" text,
	"mtad_access" integer DEFAULT 31 NOT NULL,
	"mtad_list_order" text DEFAULT 'Z-LAST' NOT NULL,
	"mtad__sequence" integer DEFAULT nextval('"mtad_mtad__sequence_seq"'::text) NOT NULL,
	"mtad__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mtad__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mtad__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "mtad_pkey" Primary Key ("mtad__sequence")
);

--
--
--
-- Name: mtad Type: ACL Owner: 
--

REVOKE ALL on "mtad" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtad" to PUBLIC;
GRANT ALL on "mtad" to "source";

--
--
--
-- Name: mttk_mttk__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mttk_mttk__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mttk_mttk__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mttk_mttk__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mttk_mttk__sequence_seq" to PUBLIC;
GRANT ALL on "mttk_mttk__sequence_seq" to "source";

--
--
--
-- Name: mttk Type: TABLE Owner: source
--

CREATE TABLE "mttk" (
	"mttk_code" text NOT NULL,
	"mttk_expires" timestamp with time zone DEFAULT (now() + '@ 1 min'::"interval") NOT NULL,
	"mttk__sequence" integer DEFAULT nextval('"mttk_mttk__sequence_seq"'::text) NOT NULL,
	"mttk__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mttk__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mttk__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "mttk_pkey" Primary Key ("mttk_code")
);

--
--
--
-- Name: mttk Type: ACL Owner: 
--

REVOKE ALL on "mttk" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mttk" to PUBLIC;
GRANT ALL on "mttk" to "source";

--
--
--
-- Name: "fn_vacuumtickets" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_vacuumtickets" () RETURNS opaque AS 'DECLARE

    BEGIN

    if ( TG_OP = ''INSERT'' ) then
      delete from mttk where mttk_expires < now();
    end if;

    return new;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: mtau_mtau__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "mtau_mtau__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: mtau_mtau__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "mtau_mtau__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "mtau_mtau__sequence_seq" to PUBLIC;
GRANT ALL on "mtau_mtau__sequence_seq" to "source";

--
--
--
-- Name: mtau Type: TABLE Owner: source
--

CREATE TABLE "mtau" (
	"mtau_table_name" text NOT NULL,
	"mtau_row_sequence" integer NOT NULL,
	"mtau_operation" text NOT NULL,
	"mtau_attributes" text,
	"mtau_before" text,
	"mtau_after" text,
	"mtau__sequence" integer DEFAULT nextval('"mtau_mtau__sequence_seq"'::text) NOT NULL,
	"mtau__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"mtau__user_entry" text DEFAULT "current_user"() NOT NULL,
	"mtau__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "mtau_pkey" Primary Key ("mtau__sequence")
);

--
--
--
-- Name: mtau Type: ACL Owner: 
--

REVOKE ALL on "mtau" from PUBLIC;
GRANT INSERT,SELECT on "mtau" to PUBLIC;
GRANT ALL on "mtau" to "source";

--
--
--
-- Name: pcde_pcde__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "pcde_pcde__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: pcde_pcde__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "pcde_pcde__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "pcde_pcde__sequence_seq" to PUBLIC;
GRANT ALL on "pcde_pcde__sequence_seq" to "source";

--
--
--
-- Name: pcde Type: TABLE Owner: source
--

CREATE TABLE "pcde" (
	"pcde_postcode" text,
	"pcde_locality" text,
	"pcde_state" text,
	"pcde_comments" text,
	"pcde_delivery_office" text,
	"pcde_presort_indicator" text,
	"pcde_parcelzone" text,
	"pcde_bsp_number" text,
	"pcde_bsp_name" text,
	"pcde_category" text,
	"pcde__sequence" integer DEFAULT nextval('"pcde_pcde__sequence_seq"'::text) NOT NULL,
	"pcde__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"pcde__user_entry" text DEFAULT "current_user"() NOT NULL,
	"pcde__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "pcde_pkey" Primary Key ("pcde__sequence")
);

--
--
--
-- Name: pcde Type: ACL Owner: 
--

REVOKE ALL on "pcde" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "pcde" to PUBLIC;
GRANT ALL on "pcde" to "source";

--
--
--
-- Name: ptss Type: VIEW Owner: source
--

CREATE VIEW "ptss" as SELECT to_char(svpf_patn.svpf_date_service, 'YYYY'::text) AS ptss_year_service, svpf_patn.svpf_serv_code AS ptss_serv_code, invc.invc_feet_code AS ptss_feet_code, svpf_patn.patn_hlfd_code AS ptss_hlfd_code, count(*) AS ptts_count, 1 AS ptss__sequence, now() AS ptss__timestamp, "current_user"() AS ptss__user_entry, 'V'::text AS ptss__status FROM ((svpf JOIN patn ON ((svpf.svpf_patn__sequence = patn.patn__sequence))) svpf_patn JOIN invc ON ((svpf_patn.svpf_invc__sequence = invc.invc__sequence))) GROUP BY to_char(svpf_patn.svpf_date_service, 'YYYY'::text), svpf_patn.svpf_serv_code, invc.invc_feet_code, svpf_patn.patn_hlfd_code, 6, now(), "current_user"(), 9;

--
--
--
-- Name: ptss Type: ACL Owner: 
--

REVOKE ALL on "ptss" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "ptss" to PUBLIC;
GRANT ALL on "ptss" to "source";

--
--
--
-- Name: addr_addr__sequence_seq Type: SEQUENCE Owner: source
--

CREATE SEQUENCE "addr_addr__sequence_seq" start 1 increment 1 maxvalue 2147483647 minvalue 1  cache 1 ;

--
--
--
-- Name: addr_addr__sequence_seq Type: ACL Owner: 
--

REVOKE ALL on "addr_addr__sequence_seq" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "addr_addr__sequence_seq" to PUBLIC;
GRANT ALL on "addr_addr__sequence_seq" to "source";

--
--
--
-- Name: addr Type: TABLE Owner: source
--

CREATE TABLE "addr" (
	"addr_name" text DEFAULT 'New Record',
	"addr_contact" text,
	"addr_organisation" text,
	"addr_work_phone" text,
	"addr_work_fax" text,
	"addr_mobile_phone" text,
	"addr_work_email" text,
	"addr_work_www" text,
	"addr_work_im" text,
	"addr_work_street" text,
	"addr_work_suburb" text,
	"addr_work_postcode" text,
	"addr_home_email" text,
	"addr_home_www" text,
	"addr_home_im" text,
	"addr_home_street" text,
	"addr_home_suburb" text,
	"addr_home_postcode" text,
	"addr_home_phone" text,
	"addr_home_fax" text,
	"addr_comments" text,
	"addr__sequence" integer DEFAULT nextval('"addr_addr__sequence_seq"'::text) NOT NULL,
	"addr__timestamp" timestamp with time zone DEFAULT now() NOT NULL,
	"addr__user_entry" text DEFAULT "current_user"() NOT NULL,
	"addr__status" character(1) DEFAULT 'N'::text NOT NULL,
	Constraint "addr_pkey" Primary Key ("addr__sequence")
);

--
--
--
-- Name: addr Type: ACL Owner: 
--

REVOKE ALL on "addr" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "addr" to PUBLIC;
GRANT ALL on "addr" to "source";

--
--
--
-- Name: "fn_lastvisit" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_lastvisit" () RETURNS opaque AS 'DECLARE
      x_patn__sequence patn.patn__sequence%TYPE;

    BEGIN
        if (TG_OP = ''INSERT'' ) then
          if (new.evnt_starttime is null) then
            return new;
          end if;
        end if;

        if (TG_OP = ''UPDATE'' ) then
          if ( new.evnt_starttime = old.evnt_starttime) then
            return new;
          end if;
        end if;

        UPDATE  patn
        set     patn_last_visit = (
                        select  max(evnt_starttime)
                        from    evnt
                        where   evnt_patn__sequence = x_patn__sequence )
        where   patn__sequence = x_patn__sequence;
        RAISE NOTICE ''setting patn_last_visit for %'', x_patn__sequence;

    if (TG_OP = ''INSERT'' or TG_OP = ''UPDATE'' ) then
      return new;
    else
      return old;
    end if;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "fn_lastservice" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_lastservice" () RETURNS opaque AS 'DECLARE
      x_patn__sequence patn.patn__sequence%TYPE;

    BEGIN
        if (TG_OP = ''INSERT'' ) then
          if (new.svpf_date_service is null) then
            return new;
          end if;
          x_patn__sequence = new.svpf_patn__sequence;
        end if;

        if (TG_OP = ''UPDATE'' ) then
          if (new.svpf_date_service = old.svpf_date_service) then
            return new;
          end if;
          x_patn__sequence = new.svpf_patn__sequence;
        end if;

        if (TG_OP = ''DELETE'' ) then
          x_patn__sequence = old.svpf_patn__sequence;
        end if;

        UPDATE  patn
        set     patn_last_service = (
                        select  max(svpf_date_service)
                        from    svpf
                        where   svpf_patn__sequence = x_patn__sequence )
        where   patn__sequence = x_patn__sequence;
        RAISE NOTICE ''setting patn_last_service for %'', x_patn__sequence;

    if (TG_OP = ''INSERT'' or TG_OP = ''UPDATE'' ) then
      return new;
    else
      return old;
    end if;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "fn_amountoutstanding" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_amountoutstanding" () RETURNS opaque AS 'DECLARE
        x_patn__sequence patn.patn__sequence%TYPE;
        x_dbtr_code dbtr.dbtr_code%TYPE;

    BEGIN
        
        if (TG_OP = ''INSERT'' ) then
          if (  new.invc_amount != 0.00::numeric and 
                new.invc_gst_amount != 0.00::numeric and
                new.invc_paid_amount != 0.00::numeric and
                new.invc_paid_gst_amount::numeric != 0.00::numeric ) then
            return new;
          end if;
          x_patn__sequence = new.invc_patn__sequence;
          x_dbtr_code = new.invc_dbtr_code;          
        end if;

        if (TG_OP = ''UPDATE'' ) then
          if(   new.invc_amount = old.invc_amount and
                new.invc_gst_amount = old.invc_gst_amount and
                new.invc_paid_amount = old.invc_paid_amount and
                new.invc_paid_gst_amount = old.invc_paid_gst_amount ) then
            return new;
          end if;
          x_patn__sequence = new.invc_patn__sequence;
          x_dbtr_code = new.invc_dbtr_code;
        end if;

        if (TG_OP = ''DELETE'' ) then
          x_patn__sequence = old.invc_patn__sequence;
          x_dbtr_code = old.invc_dbtr_code;
        end if;

        UPDATE  patn
        set     patn_amount_outstanding = (
                        select  sum(invc_balance(invc__sequence))
                        from    invc
                        where   invc_patn__sequence = x_patn__sequence )
        where   patn__sequence = x_patn__sequence;
        RAISE NOTICE ''setting patn_amount_outstanding for %'', x_patn__sequence;

        UPDATE  dbtr
        set     dbtr_amount_outstanding = (
                        select  sum(invc_balance(invc__sequence))
                        from    invc
                        where   invc_dbtr_code = x_dbtr_code )
        where   dbtr_code = x_dbtr_code;
        RAISE NOTICE ''setting dbtr_amount_outstanding for %'', x_dbtr_code;

    if (TG_OP = ''INSERT'' or TG_OP = ''UPDATE'' ) then
      return new;
    else
      return old;
    end if;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: evnv Type: VIEW Owner: source
--

CREATE VIEW "evnv" as SELECT evnt.evnt_patn__sequence AS evnv_patn__sequence, evnt.evnt_prov_code AS evnv_prov_code, evnt.evnt_rfdr_code AS evnv_rfdr_code, evnt.evnt_locn_code AS evnv_locn_code, evnt.evnt_aptp_code AS evnv_aptp_code, evnt.evnt_apst_code AS evnv_apst_code, evnt.evnt_starttime AS evnv_starttime, evnt.evnt_duration AS evnv_duration, evnt.evnt_desc AS evnv_desc, to_char(evnt.evnt_starttime, 'HH:MI am'::text) AS evnv_ev_time, to_char(evnt.evnt_starttime, 'Day DD-MM-YYYY'::text) AS evnv_ev_date, ((date_part('hour'::text, evnt.evnt_duration) * 60) + date_part('minute'::text, evnt.evnt_duration)) AS evnv_ev_minutes, patn.patn_flno AS evnv_patn_flno, ((patn.patn_psnam || ', '::text) || patn.patn_fsnam) AS evnv_patn_desc, patn.patn_psnam AS evnv_patn_psnam, patn.patn_fsnam AS evnv_patn_fsnam, patn.patn_title AS evnv_patn_title, short_date(patn.patn_dob) AS evnv_patn_dob, patn.patn_address AS evnv_patn_address, patn.patn_suburb AS evnv_patn_suburb, patn.patn_state AS evnv_patn_state, patn.patn_postcode AS evnv_patn_postcode, patn.patn_phone AS evnv_patn_phone, patn.patn_ref_date AS evnv_patn_ref_date, patn.patn_ref_period AS evnv_patn_ref_period, patn.patn_last_visit AS evnv_patn_last_visit, patn.patn_amount_outstanding AS evnv_patn_amount_outstanding, locn.locn_desc AS evnv_locn_desc, aptp.aptp_desc AS evnv_aptp_desc, apst.apst_desc AS evnv_apst_desc, prov.prov_provider_num AS evnv_prov_provider_num, prov.prov_name AS evnv_prov_name, prov.prov_address AS evnv_prov_address, prov.prov_suburb AS evnv_prov_suburb, prov.prov_state AS evnv_prov_state, prov.prov_postcode AS evnv_prov_postcode, prov.prov_salutation AS evnv_prov_salutation, prov.prov_phone AS evnv_prov_phone, prov.prov_bank_code AS evnv_prov_bank_code, rfdr.rfdr_name AS evnv_rfdr_name, rfdr.rfdr_street AS evnv_rfdr_street, rfdr.rfdr_suburb AS evnv_rfdr_suburb, rfdr.rfdr_postcode AS evnv_rfdr_postcode, rfdr.rfdr_state AS evnv_rfdr_state, rfdr.rfdr_provider AS evnv_rfdr_provider, rfdr.rfdr_phone AS evnv_rfdr_phone, rfdr.rfdr_salutation AS evnv_rfdr_salutation, rfdr.rfdr_index AS evnv_rfdr_index, patn.patn_country AS evnv_patn_country, patn.patn_aboriginality AS evnv_patn_aboriginality, patn.patn_sex AS evnv_patn_sex, patn.patn_marital AS evnv_patn_marital, patn.patn_accl_code AS evnv_patn_accl_code, patn.patn_accommodation AS evnv_patn_accommodation, patn.patn_care AS evnv_patn_care, evnt.evnt__sequence AS evnv__sequence, evnt.evnt__timestamp AS evnv__timestamp, evnt.evnt__user_entry AS evnv__user_entry, evnt.evnt__status AS evnv__status FROM ((((((evnt LEFT JOIN patn ON ((evnt.evnt_patn__sequence = patn.patn__sequence))) LEFT JOIN prov ON ((evnt.evnt_prov_code = prov.prov_code))) LEFT JOIN rfdr ON ((evnt.evnt_rfdr_code = rfdr.rfdr_code))) LEFT JOIN locn ON ((evnt.evnt_locn_code = locn.locn_code))) LEFT JOIN aptp ON ((evnt.evnt_aptp_code = aptp.aptp_code))) LEFT JOIN apst ON ((evnt.evnt_apst_code = apst.apst_code)));

--
--
--
-- Name: evnv Type: ACL Owner: 
--

REVOKE ALL on "evnv" from PUBLIC;
GRANT INSERT,UPDATE,DELETE,SELECT on "evnv" to PUBLIC;
GRANT ALL on "evnv" to "source";

--
--
--
-- Name: "isreferralexpired" (timestamp with time zone,integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "isreferralexpired" (timestamp with time zone,integer) RETURNS character AS 'DECLARE
        ref_date alias for $1;
        ref_period alias for $2;

    BEGIN
        if ( ref_period = 0 or ref_period = 99 or ref_period is null
             or (date(ref_date) + (ref_period||'' months'')::interval) >= date(now()) ) then
          return ''N'';
        else
          return ''Y'';
        end if;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: mvac_label Type: TABLE Owner: source
--

CREATE TABLE "mvac_label" (
	"perms" integer NOT NULL,
	"label" text,
	Constraint "mvac_label_pkey" Primary Key ("perms")
);

--
--
--
-- Name: mvac_label Type: ACL Owner: 
--

REVOKE ALL on "mvac_label" from PUBLIC;
GRANT SELECT on "mvac_label" to PUBLIC;
GRANT ALL on "mvac_label" to "source";

--
--
--
-- Name: "dbtr_insert_row" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "dbtr_insert_row" () RETURNS integer AS 'DECLARE
    -- NAME TABLE.ATTRIBUTE%TYPE;
    -- NAME TABLE%ROWTYPE;
    tmp_dbtr__sequence dbtr.dbtr__sequence%TYPE;

    BEGIN

         -- get a dbtr__sequence
         select nextval(''dbtr_dbtr__sequence_seq'')
         into tmp_dbtr__sequence;

         -- add the new row
         insert into dbtr( dbtr_code, dbtr__sequence )
                   values( tmp_dbtr__sequence::text, tmp_dbtr__sequence);

    return tmp_dbtr__sequence;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "dbtr_total_balance" (text) Type: FUNCTION Owner: source
--

CREATE FUNCTION "dbtr_total_balance" (text) RETURNS numeric AS 'DECLARE

    tmp_rec record;

    BEGIN

    for tmp_rec in EXECUTE ''
      select    sum(invc_balance(invc__sequence)) as total_balance
      from      invc
      where     invc_dbtr_code = '' || quote_literal($1) || '';''

    LOOP
        return tmp_rec.total_balance;
    END LOOP;

    return null;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "dbtr_total_balance" (text,integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "dbtr_total_balance" (text,integer) RETURNS numeric AS 'DECLARE
    tmp_dbtr_code ALIAS for $1;
    tmp_daysago ALIAS for $2;
    tmp_rec record;

    BEGIN

    for tmp_rec in EXECUTE ''
      select    sum(invc_balance_then(invc__sequence,'' || tmp_daysago || '')) as total_balance
      from      invc
      where     invc_dbtr_code = '' || quote_literal(tmp_dbtr_code) || ''
      and       invc_date_printed is not null
      and       date(invc_date_printed) <= now() - '' || tmp_daysago || '';''

    LOOP
        if ( tmp_rec.total_balance is null ) then
          return 0.00::numeric;
        else
          return tmp_rec.total_balance;
        end if;
    END LOOP;

    return 0.00::numeric;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "dbtr_period_balance" (text,integer,integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "dbtr_period_balance" (text,integer,integer) RETURNS numeric AS 'DECLARE
    tmp_dbtr_code ALIAS for $1;
    tmp_period ALIAS for $2;
    tmp_daysago ALIAS for $3;
    tmp_rec record;
    sqlexec text;
    str_daysago text;

    BEGIN
    str_daysago := tmp_daysago || '' days'';
    sqlexec = ''
      select    sum(invc_balance_then(invc__sequence,'' || tmp_daysago || '')) as period_total
      from      invc
      where     invc_dbtr_code = '' || quote_literal(tmp_dbtr_code) || ''
      and       invc_date_printed is not null
      and       date(invc_date_printed) <= now() - '' || quote_literal(str_daysago) || ''::interval 
      and       invc_age_period(invc__sequence,''||tmp_daysago||'') = '' || tmp_period || '';'';

    -- raise notice ''SQlEXEC: %'', sqlexec;

    for tmp_rec in EXECUTE sqlexec
    LOOP
    -- RAISE NOTICE ''% % %'',tmp_period,tmp_rec.period_total,sqlexec;
        if ( tmp_rec.period_total is null ) then
          return 0.00::numeric;
        else
          return tmp_rec.period_total;
        end if;
    END LOOP;

    return 0.00::numeric;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "dbtr_last_invc_printed" (text) Type: FUNCTION Owner: source
--

CREATE FUNCTION "dbtr_last_invc_printed" (text) RETURNS date AS 'DECLARE

    tmp_dbtr_code ALIAS for $1;  
    tmp_date_printed date; 
    tmp_date_reprint date;

    BEGIN

    select max(invc_date_printed), max(invc_date_reprint)
    into   tmp_date_printed,tmp_date_reprint
    from   invc
    where  invc_dbtr_code = tmp_dbtr_code;

    if ( tmp_date_printed is null ) then
      tmp_date_printed = ''epoch''::date;
    end if;

    if ( tmp_date_reprint is null ) then
      tmp_date_reprint = ''epoch''::date;
    end if;

    if ( tmp_date_reprint > tmp_date_printed ) then
      return tmp_date_reprint;
    else
      return tmp_date_printed;
    end if;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "dbtr_patient_key" (text) Type: FUNCTION Owner: source
--

CREATE FUNCTION "dbtr_patient_key" (text) RETURNS text AS 'DECLARE

    tmp_dbtr_code ALIAS for $1;
    tmp_rec record;
    query text;
    BEGIN


--    query := ''select patn_psnam,patn_fsnam,invc_dbtr_code''
--           + ''from   invc,patn''
--           + ''where  invc_dbtr_code = '' + tmp_dbtr_code
--           + ''and    patn__sequence = invc_patn__sequence;'';
--
--
--    for tmp_rec in EXECUTE query

    for tmp_rec in
        select  upper(patn_psnam) as patn_psnam,upper(patn_fsnam) as patn_fsnam,invc_dbtr_code
        from    invc,patn
        where   invc_dbtr_code = tmp_dbtr_code
        and     patn__sequence = invc_patn__sequence
      
    LOOP
        return tmp_rec.patn_psnam || '','' || tmp_rec.patn_fsnam || '','' || tmp_rec.invc_dbtr_code;
    END LOOP;

    return '''';

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "dbtr_address" (text) Type: FUNCTION Owner: source
--

CREATE FUNCTION "dbtr_address" (text) RETURNS text AS 'DECLARE

    tmp_dbtr_code ALIAS for $1;
    tmp_rec record;
    address text;
    BEGIN


    select      dbtr.*
    into        tmp_rec
    from        dbtr
    where       dbtr_code = tmp_dbtr_code;

    if ( not found ) then
      RAISE EXCEPTION ''Debtor code not found - %'', tmp_dbtr_code;
      return null;
    end if;

    address := coalesce(tmp_rec.dbtr_name, '''') || ''<br>'' 
                || coalesce(tmp_rec.dbtr_address, '''') || ''<br>''
                || coalesce(tmp_rec.dbtr_suburb, '''') ||'' ''
                || coalesce(tmp_rec.dbtr_state, '''') ||'' ''
                || coalesce(tmp_rec.dbtr_postcode, '''');

    return address;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "cred_summary" (integer,integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "cred_summary" (integer,integer) RETURNS text AS '
    DECLARE
    tmp_invc__sequence ALIAS for $1;
    maxrows ALIAS for $2;
    tmp_rec record;
    eol text;
    count integer;
    desc text;
    other_desc text;
    other_balance numeric;
    pad text;
                
    BEGIN

    eol := '''';
    count := 0;
    other_balance := 0;
    other_desc = '''';
    desc := '''';
    pad := '' '';

    -- collect the credits

    for tmp_rec in EXECUTE ''
      select    cred_paym__sequence,
                (cred_amount + cred_gst_amount) as cred_total,
                short_date(cred__timestamp) as cred_date,
                cred__timestamp,
                rpad( (case when paym_drawer is null
                        then tdtp_desc
                        else paym_drawer end),10,chr(32)) as drawer
      from      cred,paym,tdtp
      where     cred_invc__sequence = '' || tmp_invc__sequence || ''
      and       cred_paym__sequence = paym__sequence
      and       paym_tdtp_code = tdtp_code
      order by  cred__timestamp desc;''

    LOOP
        count := count + 1;

        if ( count > maxrows ) then
           other_balance := other_balance + tmp_rec.cred_total;
        else
          desc := desc || eol ||
                  ''#''|| tmp_rec.cred_paym__sequence ||
                  '' '' || tmp_rec.cred_date ||
                  '' '' || tmp_rec.drawer ||
                  '' '' || to_char(tmp_rec.cred_total,''9999999999.99'');
        end if;
        eol = ''<br>'';
    END LOOP;

    if ( other_balance > 0 ) then
      desc := desc || eol ||
              rpad(''... other payments ('',29,chr(28)) ||
              count-maxrows || '')'' ||
              to_char(other_balance, 99999.99);
    end if;

    return desc;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "fn_paym_null2default" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_paym_null2default" () RETURNS opaque AS 'DECLARE
       tmp_bkdp__sequence bkdp.bkdp__sequence%TYPE; 
    BEGIN
        if (new.paym_tdtp_code is null) then
          new.paym_tdtp_code := ''-'';
        end if;

        if (new.paym_bkdp__sequence is null) then
          new.paym_bkdp__sequence := 0;
        end if;

        -- make sure the holding record in bkdp is present
        if (TG_OP = ''INSERT'') then
          select bkdp__sequence
          into   tmp_bkdp__sequence
          from   bkdp
          where  bkdp__sequence = 0;

          if not found then
             insert into bkdp (bkdp_desc, bkdp__sequence)
                    values (''Unbanked Payments'',0);
          end if;
        end if;

    return new;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "fn_paym_closeddeposit" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_paym_closeddeposit" () RETURNS opaque AS 'DECLARE
    x_paym_bkdp__sequence paym.paym_bkdp__sequence%TYPE;
    x_mtau_attributes mtau.mtau_attributes%TYPE := '''';
    x_mtau_before mtau.mtau_before%TYPE := '''';
    x_mtau_after mtau.mtau_after%TYPE := '''';
    x_sep char(1) := ''~'';

    BEGIN

    if (TG_OP = ''INSERT'') then
      x_paym_bkdp__sequence := new.paym_bkdp__sequence;
    else
      x_paym_bkdp__sequence := old.paym_bkdp__sequence;
    end if;

    --
    -- ok to proceed if not allocated to bank batch or the user has administrator access
    --

    if (x_paym_bkdp__sequence is null or x_paym_bkdp__sequence = 0) then
      if (TG_OP = ''DELETE'') then
        return old;
      else
        return new;
      end if;
    else
          -- 32 is office-admin
      if ( (select perms::integer & 32 from mvac_user where username = current_user) = 32 ) then

        if (TG_OP = ''DELETE'') then
  
          insert into mtau(mtau_table_name, mtau_row_sequence, mtau_operation, mtau_attributes, mtau_before, mtau_after)
                  select    ''paym'', old.paym__sequence, TG_OP,
                            x_sep || ''paym_date_entry'' || x_sep ||
                            ''paym_user_entry'' || x_sep ||
                            ''paym_site_entry'' || x_sep ||
                            ''paym_amount'' || x_sep ||
                            ''paym_tdtp_code'' || x_sep ||
                            ''paym_drawer'' || x_sep ||
                            ''paym_bank'' || x_sep ||
                            ''paym_branch'' || x_sep ||
                            ''paym_bkdp__sequence'',
                            x_sep || old.paym_date_entry || x_sep ||
                            old.paym_user_entry || x_sep ||
                            old.paym_site_entry || x_sep ||
                            to_char(old.paym_amount,''9999999999.99'') || x_sep ||
                            old.paym_tdtp_code || x_sep ||
                            old.paym_drawer || x_sep ||
                            old.paym_bank || x_sep ||
                            old.paym_branch || x_sep ||
                            old.paym_bkdp__sequence,
                            NULL;
          return old;

        else

          -- paym_date_entry
          if (new.paym_date_entry <> old.paym_date_entry ) then
            x_mtau_attributes := x_mtau_attributes || x_sep || ''paym_date_entry'';
            x_mtau_before     := x_mtau_before     || x_sep || old.paym_date_entry;
            x_mtau_after      := x_mtau_after      || x_sep || new.paym_date_entry;
          end if;
  
          -- paym_user_entry
          if (new.paym_user_entry <> old.paym_user_entry ) then
            x_mtau_attributes := x_mtau_attributes || x_sep || ''paym_user_entry'';
            x_mtau_before     := x_mtau_before     || x_sep || old.paym_user_entry;
            x_mtau_after      := x_mtau_after      || x_sep || new.paym_user_entry;
          end if;
  
          -- paym_site_entry
          if (new.paym_site_entry <> old.paym_site_entry ) then
            x_mtau_attributes := x_mtau_attributes || x_sep || ''paym_site_entry'';
            x_mtau_before     := x_mtau_before     || x_sep || old.paym_site_entry;
            x_mtau_after      := x_mtau_after      || x_sep || new.paym_site_entry;
          end if;
  
          -- paym_amount
          if (new.paym_amount <> old.paym_amount ) then
            x_mtau_attributes := x_mtau_attributes || x_sep || ''paym_amount'';
            x_mtau_before     := x_mtau_before     || x_sep || to_char(old.paym_amount, ''9999999999.99'');
            x_mtau_after      := x_mtau_after      || x_sep || to_char(new.paym_amount, ''9999999999.99'');
          end if;
  
          -- paym_tdtp_code
          if (new.paym_tdtp_code <> old.paym_tdtp_code ) then
            x_mtau_attributes := x_mtau_attributes || x_sep || ''paym_tdtp_code'';
            x_mtau_before     := x_mtau_before     || x_sep || old.paym_tdtp_code;
            x_mtau_after      := x_mtau_after      || x_sep || new.paym_tdtp_code;
          end if;
  
          -- paym_drawer
          if (new.paym_drawer <> old.paym_drawer ) then
            x_mtau_attributes := x_mtau_attributes || x_sep || ''paym_drawer'';
            x_mtau_before     := x_mtau_before     || x_sep || old.paym_drawer;
            x_mtau_after      := x_mtau_after      || x_sep || new.paym_drawer;
          end if;
  
          -- paym_bank
          if (new.paym_bank <> old.paym_bank ) then
            x_mtau_attributes := x_mtau_attributes || x_sep || ''paym_bank'';
            x_mtau_before     := x_mtau_before     || x_sep || old.paym_bank;
            x_mtau_after      := x_mtau_after      || x_sep || new.paym_bank;
          end if;
  
          -- paym_branch
          if (new.paym_branch <> old.paym_branch ) then
            x_mtau_attributes := x_mtau_attributes || x_sep || ''paym_branch'';
            x_mtau_before     := x_mtau_before     || x_sep || old.paym_branch;
            x_mtau_after      := x_mtau_after      || x_sep || new.paym_branch;
          end if;
  
          -- paym_bkdp__sequence
          if (new.paym_bkdp__sequence <> old.paym_bkdp__sequence ) then
            x_mtau_attributes := x_mtau_attributes || x_sep || ''paym_bkdp__sequence'';
            x_mtau_before     := x_mtau_before     || x_sep || old.paym_bkdp__sequence;
            x_mtau_after      := x_mtau_after      || x_sep || new.paym_bkdp__sequence;
          end if;
  
  
          insert into mtau(mtau_table_name, mtau_row_sequence, mtau_operation, mtau_attributes, mtau_before, mtau_after)
                  select ''paym'', new.paym__sequence, TG_OP, x_mtau_attributes, x_mtau_before, x_mtau_after;
          return new;
        end if;
      end if;
    end if;

    

    RAISE EXCEPTION ''This record cannot be changed or deleted - the deposit batch number % has been created. Please contact your Systems Administrator for assistance.'', x_paym_bkdp__sequence;
 
        END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "fn_setbkdpamount" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_setbkdpamount" () RETURNS opaque AS 'DECLARE
    x_before bkdp.bkdp_amount%TYPE;
    x_after bkdp.bkdp_amount%TYPE;
    old_paym_bkdp__sequence paym.paym_bkdp__sequence%TYPE;
    new_paym_bkdp__sequence paym.paym_bkdp__sequence%TYPE;
    x_sep char(1) := ''~'';

    BEGIN

    -- more than one batch may be involved - eg in transfer.

    old_paym_bkdp__sequence := -1;
    new_paym_bkdp__sequence := -1;

    if (TG_OP = ''DELETE'') then
      old_paym_bkdp__sequence := coalesce(old.paym_bkdp__sequence,0);
    end if;

    if (TG_OP = ''INSERT'') then
      new_paym_bkdp__sequence := coalesce(new.paym_bkdp__sequence,0);
    end if;

    if (TG_OP = ''UPDATE'') then
      old_paym_bkdp__sequence := coalesce(old.paym_bkdp__sequence,0);
      new_paym_bkdp__sequence := coalesce(new.paym_bkdp__sequence,0);
    end if;

    -- the source of the transaction - adjust old balance
    if (old_paym_bkdp__sequence > 0) then

        -- current balance
      select    bkdp_amount
      into      x_before
      from      bkdp
      where     bkdp__sequence = old_paym_bkdp__sequence;

        -- new balance
      select    sum(coalesce(paym_amount,0.00::numeric))
      into      x_after
      from      paym
      where     paym_bkdp__sequence = old_paym_bkdp__sequence;

      update bkdp
      set    bkdp_amount = x_after
      where  bkdp__sequence = old_paym_bkdp__sequence;

      insert into mtau(mtau_table_name, mtau_row_sequence, mtau_operation, mtau_attributes, mtau_before, mtau_after)
        select ''bkdp'', old_paym_bkdp__sequence, ''UPDATE'', x_sep||''bkdp_amount'', 
                x_sep||to_char(x_before, ''9999999999.99''),
                x_sep||to_char(x_after, ''9999999999.99'');

    end if;

    -- the destination for the transaction - adjust new balance
    if (new_paym_bkdp__sequence > 0) then

        -- current balance
      select    bkdp_amount
      into      x_before
      from      bkdp
      where     bkdp__sequence = new_paym_bkdp__sequence;

        -- new balance
      select    sum(coalesce(paym_amount,0.00::numeric))
      into      x_after
      from      paym
      where     paym_bkdp__sequence = new_paym_bkdp__sequence;

      update bkdp
      set    bkdp_amount = x_after
      where  bkdp__sequence = new_paym_bkdp__sequence;

      insert into mtau(mtau_table_name, mtau_row_sequence, mtau_operation, mtau_attributes, mtau_before, mtau_after)
        select ''bkdp'', new_paym_bkdp__sequence, ''UPDATE'', x_sep||''bkdp_amount'', 
                x_sep||to_char(x_before, ''9999999999.99''),
                x_sep||to_char(x_after, ''9999999999.99'');

    end if;

    if (TG_OP = ''DELETE'') then
      return old;
    else
      return new;
    end if;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "bkdp_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "bkdp_tr_before" () RETURNS opaque AS 'DECLARE
       tmp_bkdp_amount bkdp.bkdp_amount%TYPE; 
    BEGIN
      if (TG_OP = ''DELETE'') then
        RAISE EXCEPTION ''You cannot remove banking batches'';
        return null;
      end if;


      select    sum(paym_amount)
      into      tmp_bkdp_amount
      from      paym
      where     paym_bkdp__sequence = new.bkdp__sequence;

    if ( tmp_bkdp_amount is null ) then
      new.bkdp_amount := 0.00::numeric;
    else
      new.bkdp_amount := tmp_bkdp_amount;
    end if;

    return new;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "cred_tr_before" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "cred_tr_before" () RETURNS opaque AS 'DECLARE
    sum_cred_amount cred.cred_amount%TYPE;
    sum_cred_gst_amount cred.cred_gst_amount%TYPE;
    sum_unpaid cred.cred_amount%TYPE;
    sum_gst_unpaid cred.cred_amount%TYPE;
    rec_invc invc%ROWTYPE;
    rec_paym paym%ROWTYPE;
    sum_other_paym paym.paym_amount%TYPE;
    avail_paym paym.paym_amount%TYPE;

    BEGIN

        -- raise notice ''cred_tr_before:invc % paym %'', new.cred_invc__sequence, new.cred_paym__sequence;
        -- get credit/debit totals from invoice
        select *
        into   rec_invc
        from   invc
        where  invc__sequence = new.cred_invc__sequence;

        -- THERE MUST BE AN INVOICE!!
        if ( not found ) then
          raise EXCEPTION ''cred_tr_before:invoice # % does not exist'', new.cred_invc__sequence;
          return NULL;
        end if;

        -- get the current balances

        sum_unpaid := rec_invc.invc_amount - rec_invc.invc_paid_amount;
        sum_gst_unpaid := rec_invc.invc_gst_amount - rec_invc.invc_paid_gst_amount;
        if ( TG_OP = ''UPDATE'' ) then
          sum_unpaid := sum_unpaid + old.cred_amount;
          sum_gst_unpaid := sum_gst_unpaid + old.cred_gst_amount;
        end if;
        -- RAISE NOTICE ''cred_tr_before:unpaid = %/%'', sum_unpaid, sum_gst_unpaid;


        -- If no payment record, then create dummy
        if ( new.cred_paym__sequence = 0 or new.cred_paym__sequence is null ) then
          new.cred_paym__sequence := 0;
          select  *
          into    rec_paym
          from    paym
          where   paym__sequence = new.cred_paym__sequence;

          -- if not found create a dummy to temporarily satisfy constraints
          if ( not found ) then
            insert into paym(paym__sequence) values(0);
            -- raise notice ''cred_tr_before:inserting new payment'';
          end if;
        end if;

        -- get the paym record

        select  *
        into    rec_paym
        from    paym
        where   paym__sequence = new.cred_paym__sequence;

        -- get the payment already-allocated amount

        select coalesce(sum(cred_amount + cred_gst_amount), ''0.00''::numeric)
        into   sum_other_paym
        from   cred
        where  cred_paym__sequence = new.cred_paym__sequence
        and    cred__sequence != new.cred__sequence;

        -- if the payment is zero, then default the payment amount to the outstanding
        -- ( this will be adjusted after credit amounts are finalised)

        -- RAISE NOTICE ''cred_tr_before:avail calc = %/%/%/%/%'', rec_paym.paym_bkdp__sequence,sum_unpaid,sum_gst_unpaid,sum_other_paym,rec_paym.paym_amount;
        if ( rec_paym.paym_amount = 0.00::numeric ) then
          avail_paym := sum_unpaid + sum_gst_unpaid;
        else
          avail_paym := rec_paym.paym_amount - sum_other_paym;
        end if;

        if ( avail_paym < 0 ) then
          avail_paym = 0;
        end if;

        -- raise notice ''cred_tr_before:bankid,avail, unpaid amounts = %/%/%/%'', rec_paym.paym_bkdp__sequence,avail_paym,sum_unpaid, sum_gst_unpaid;
        -- raise notice ''cred_tr_before:cred amounts = %/%'', new.cred_amount, new.cred_gst_amount;
        sum_cred_amount := new.cred_amount + new.cred_gst_amount;

        -- if new credit amount is null/0, then look for outstanding amounts
        -- to use as default

        if ( sum_cred_amount is null or sum_cred_amount = 0.00::numeric) then
          -- raise notice ''cred_tr_before:sum_cred_amount = %'', sum_cred_amount;
           new.cred_amount     := sum_unpaid;
           new.cred_gst_amount := sum_gst_unpaid;

         end if;

        -- sanity checks

        -- No overpayments of GST
        if ( new.cred_gst_amount > sum_gst_unpaid ) then
          new.cred_gst_amount := sum_gst_unpaid;
        end if;

        -- No negatives
        if ( new.cred_amount  < 0 ) then
          new.cred_amount := 0;
        end if;
        if ( new.cred_gst_amount < 0) then
          new.cred_gst_amount := 0;
        end if;

        -- raise notice ''cred_tr_before:cred amounts = %/%'', new.cred_amount, new.cred_gst_amount;
    return new;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "invc_credit_totals" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "invc_credit_totals" () RETURNS opaque AS 'DECLARE
    sum_cred_amount cred.cred_amount%TYPE;
    sum_cred_gst_amount cred.cred_gst_amount%TYPE;
    rec_invc invc%ROWTYPE;
    rec_paym paym%ROWTYPE;

    BEGIN

      if ( TG_OP = ''DELETE'' ) then
        rec_invc.invc__sequence = old.cred_invc__sequence;
        rec_paym.paym__sequence = old.cred_paym__sequence;
      else
        rec_invc.invc__sequence = new.cred_invc__sequence;
        rec_paym.paym__sequence = new.cred_paym__sequence;
      end if;
      
      -- get service totals
      select sum(cred.cred_amount),
             sum(cred.cred_gst_amount)
      into   sum_cred_amount,
             sum_cred_gst_amount
      from   cred
      where cred.cred_invc__sequence = rec_invc.invc__sequence;
      
      if (sum_cred_amount is null) then
        sum_cred_amount := 0.00::numeric;
      end if;
      if (sum_cred_gst_amount is null) then
        sum_cred_gst_amount := 0.00::numeric;
      end if;
      -- raise notice ''invc_credit_totals:sum_cred_amount = %'', sum_cred_amount;
      
      update invc
        set invc_paid_amount = sum_cred_amount,
            invc_paid_gst_amount = sum_cred_gst_amount
        where invc.invc__sequence = rec_invc.invc__sequence;

      -- update paym
      if (rec_paym.paym__sequence > 0 ) then
        select  set_paym_total(rec_paym.paym__sequence)
        into    sum_cred_amount;
        -- RAISE NOTICE ''updating payment total for % - %'', new.cred_paym__sequence, sum_cred_amount;
      end if;

      if ( TG_OP = ''DELETE'' ) then
        return old;
      else
        return new;
      end if;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "invc_totals" (integer) Type: FUNCTION Owner: source
--

CREATE FUNCTION "invc_totals" (integer) RETURNS numeric AS 'DECLARE
    invc_number alias for $1;
    sum_svpf_amount svpf.svpf_amount%TYPE;
    sum_svpf_gst_amount svpf.svpf_gst_amount%TYPE;
    sum_cred_amount cred.cred_amount%TYPE;
    sum_cred_gst_amount cred.cred_gst_amount%TYPE;
    sum_svpf_balance svpf.svpf_amount%TYPE;

    BEGIN
        -- get service totals
        select sum(svpf.svpf_amount),
               sum(svpf.svpf_gst_amount)
        into   sum_svpf_amount,
               sum_svpf_gst_amount
        where svpf.svpf_invc__sequence = invc_number;

        if (sum_svpf_amount is null) then
          sum_svpf_amount = 0.00;
        end if;
        if (sum_svpf_gst_amount is null) then
          sum_svpf_gst_amount = 0.00;
        end if;

        -- get credit totals
        select sum(cred.cred_amount),
               sum(cred.cred_gst_amount)
        into   sum_cred_amount,
               sum_cred_gst_amount
        where cred.cred_invc__sequence = invc_number;

        if (sum_cred_amount is null) then
          sum_cred_amount = 0.00;
        end if;
        if (sum_cred_gst_amount is null) then
          sum_cred_gst_amount = 0.00;
        end if;

        update invc
          set invc_amount = sum_svpf_amount,
              invc_gst_amount = sum_svpf_gst_amount,
              invc_paid_amount = sum_cred_amount,
              invc_paid_gst_amount = sum_cred_gst_amount
          where invc.invc__sequence = invc_number;

        sum_svpf_balance := sum_svpf_amount + sum_svpf_gst_amount - sum_cred_amount - sum_cred_gst_amount;

    return sum_svpf_balance;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "invc_debit_totals" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "invc_debit_totals" () RETURNS opaque AS 'DECLARE
    sum_svpf_amount svpf.svpf_amount%TYPE;
    sum_svpf_gst_amount svpf.svpf_gst_amount%TYPE;
    x_invc__sequence svpf.svpf_invc__sequence%TYPE;

    BEGIN

        if ( TG_OP = ''DELETE'' ) then
          x_invc__sequence := old.svpf_invc__sequence;
        else
          x_invc__sequence := new.svpf_invc__sequence;
        end if;

        -- get service totals
        select sum(svpf.svpf_amount),
               sum(svpf.svpf_gst_amount)
        into   sum_svpf_amount,
               sum_svpf_gst_amount
        where svpf.svpf_invc__sequence = x_invc__sequence;

        if (sum_svpf_amount is null) then
          sum_svpf_amount = 0.00;
        end if;
        if (sum_svpf_gst_amount is null) then
          sum_svpf_gst_amount = 0.00;
        end if;

        update invc
          set invc_amount = sum_svpf_amount,
              invc_gst_amount = sum_svpf_gst_amount
          where invc.invc__sequence = x_invc__sequence;

    return new;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "fn_invc_closedinvoice" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_invc_closedinvoice" () RETURNS opaque AS 'DECLARE

    x_sep char(1) := ''~'';
    BEGIN

    if (TG_OP != ''UPDATE'' and TG_OP != ''DELETE'') then
      RAISE EXCEPTION ''tr_invc_closedinvoice: this trigger can only be used for UPDATE and DELETE'';
    end if;

    -- ------------------------------
    -- if invoice is open, then allow
    -- updates or deletes unconditionally
    -- ------------------------------
    
    if ( old.invc_date_printed is null ) then
      if (TG_OP = ''DELETE'') then
        return old;
      else
        return new;
      end if;
    end if;

    -- only printed invoices from now on.

    -- ------------------------------
    -- CONSTRAINTS ON DELETE
    -- ------------------------------

    -- block deletes except office admin(32)
    if (TG_OP = ''DELETE'') then
      if ( (select perms::integer & 32 from mvac_user where username = current_user) = 32 ) then
        -- audit
        insert into mtau(mtau_table_name, mtau_row_sequence, mtau_operation, mtau_attributes, mtau_before, mtau_after)
              select    ''invc'', old.invc__sequence, TG_OP,
                        x_sep || 
                        ''invc_dbtr_code'' || x_sep ||
                        ''invc_bank_code'' || x_sep ||
                        ''invc_prov_code'' || x_sep ||
                        ''invc_patn__sequence'' || x_sep ||
                        ''invc_empl_code'' || x_sep ||
                        ''invc_feet_code'' || x_sep ||
                        ''invc_rfdr_code'' || x_sep ||
                        ''invc_rfdr_date'' || x_sep ||
                        ''invc_rfdr_period'' || x_sep ||
                        ''invc_date_created'' || x_sep ||
                        ''invc_date_printed'' || x_sep ||
                        ''invc_date_reprint'' || x_sep ||
                        ''invc_amount'' || x_sep ||
                        ''invc_paid_amount'' || x_sep ||
                        ''invc_gst_amount'' || x_sep ||
                        ''invc_paid_gst_amount'',
                        x_sep || 
                        coalesce(old.invc_dbtr_code, '''') || x_sep ||
                        coalesce(old.invc_bank_code, '''') || x_sep ||
                        coalesce(old.invc_prov_code, '''') || x_sep ||
                        coalesce(old.invc_patn__sequence, -1) || x_sep ||
                        coalesce(old.invc_empl_code, '''') || x_sep ||
                        coalesce(old.invc_feet_code, '''') || x_sep ||
                        coalesce(old.invc_rfdr_code, '''') || x_sep ||
                        coalesce(old.invc_rfdr_date::text, '''') || x_sep ||
                        coalesce(old.invc_rfdr_period, '''') || x_sep ||
                        coalesce(old.invc_date_created::text, '''') || x_sep ||
                        coalesce(old.invc_date_printed::text, '''') || x_sep ||
                        coalesce(old.invc_date_reprint::text, '''') || x_sep ||
                        coalesce(to_char(old.invc_amount,''9999999999.99''), '''') || x_sep ||
                        coalesce(to_char(old.invc_paid_amount,''9999999999.99''), '''') || x_sep ||
                        coalesce(to_char(old.invc_gst_amount,''9999999999.99''), '''') || x_sep ||
                        coalesce(to_char(old.invc_paid_gst_amount,''9999999999.99''), ''''),
                        NULL;
        return old;
      else
        RAISE EXCEPTION ''This record cannot be deleted - the invoice number % has been printed. Please contact your Systems Administrator for assistance.'', old.invc__sequence;
        return null;
      end if;
    end if;

    -- ------------------------------
    -- CONSTRAINTS ON UPDATE
    -- ------------------------------
    if (TG_OP = ''UPDATE'') then

      if ( new.invc_date_printed is null or new.invc_date_printed <> old.invc_date_printed ) then
        if ( (select perms::integer & 32 from mvac_user where username = current_user) = 32 ) then
          -- audit
          insert into mtau(mtau_table_name, mtau_row_sequence, mtau_operation, mtau_attributes, mtau_before, mtau_after)
              select    ''invc'', old.invc__sequence, TG_OP,
                        x_sep || 
                        ''invc_date_printed'',
                        x_sep ||
                        coalesce(old.invc_date_printed::text, ''''),
                        x_sep ||
                        coalesce(new.invc_date_printed::text, '''');
          return new;
        else
        -- dont allow updates to change date printed.
            RAISE EXCEPTION ''The date-printed on this record cannot be updated - the invoice number % has been printed'',
                            old.invc__sequence;
          return null;
        end if;
      end if;
    end if;

    -- ------------------------------
    -- Tidy up.
    -- ------------------------------
    if (TG_OP = ''DELETE'') then
      return old;
    else
      return new;
    end if;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "fn_svpf_null2default" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_svpf_null2default" () RETURNS opaque AS '
        DECLARE
                tmp_invc__sequence svpf.svpf_invc__sequence%TYPE; 
                tmp_serv_code serv.serv_code%TYPE;
                tmp_fept fept%ROWTYPE;
                tmp_patn patn%ROWTYPE;
                tmp_invc invc%ROWTYPE;
                sequence_id integer;
                x_pos integer;
        BEGIN
        -- Patient is an absolute requirement

        if (new.svpf_patn__sequence is null) then
           RAISE EXCEPTION ''Patient ID number (svpf_patn__sequence) is mandatory'';
        end if;

        select *
        into   tmp_patn
        from   patn
        where  patn__sequence = new.svpf_patn__sequence;

        -- add a patn record if missing
        if not found then
          insert into patn(patn__sequence)
          values(new.svpf_patn__sequence);
          select  *
          into    tmp_patn
          from    patn
          where   patn__sequence = new.svpf_patn__sequence;

          if ( not found ) then
            RAISE EXCEPTION ''Unable to create a Patient Record (%)'', new.svpf_patn__sequence;
          end if;
        end if;

        -- if missing service code, then use a default
        if (new.svpf_serv_code is null) then
          new.svpf_serv_code := ''-'';
        end if;

        -- Medicare assignment form number can be held over with a default.
        if (new.svpf_mdaf__sequence is null) then
          new.svpf_mdaf__sequence := 0;
        end if;

        -- invc can be found or created
        if (new.svpf_invc__sequence is null or new.svpf_invc__sequence = 0) then

          -- look for the newest unprinted invoice for the debtor/patient
          select max(invc__sequence)
          into   tmp_invc__sequence
          from   invc
          where  invc_dbtr_code = tmp_patn.patn_dbtr_code
          and    invc_patn__sequence = tmp_patn.patn__sequence
          and    invc_date_printed is null;

          if tmp_invc__sequence is null then
            -- it may be that the dbtr is not known yet, so look for any open invoices for
            -- this patient.

            select max(invc__sequence)
            into   tmp_invc__sequence
            from   invc
            where  invc_patn__sequence = tmp_patn.patn__sequence
            and    invc_date_printed is null;
          end if;

          if tmp_invc__sequence is null then
            -- new invoice
            -- get a invc__sequence
            select nextval(''invc_invc__sequence_seq'')
            into sequence_id;
            -- add the record
            insert into invc(invc_dbtr_code,
                             invc_prov_code,
                             invc_patn__sequence,
                             invc_empl_code,
                             invc_feet_code,
                             invc_rfdr_code,
                             invc_rfdr_date,
                             invc_rfdr_period,
                             invc__sequence)
                      values(tmp_patn.patn_dbtr_code,
                             tmp_patn.patn_prov_code,
                             tmp_patn.patn__sequence,
                             tmp_patn.patn_empl_code,
                             tmp_patn.patn_feet_code,
                             tmp_patn.patn_rfdr_code,
                             tmp_patn.patn_ref_date,
                             tmp_patn.patn_ref_period,
                             sequence_id);
            -- recover it
            -- GET DIAGNOSTICS lastoid =  RESULT_OID; -- needs > 7.0
            select *
            into   tmp_invc
            from   invc
            where  invc__sequence = sequence_id;
            
            if tmp_invc.invc__sequence is null then
              RAISE EXCEPTION ''Unable to locate a suitable invoice'';
            end if;
            new.svpf_invc__sequence := tmp_invc.invc__sequence;
          else
            new.svpf_invc__sequence := tmp_invc__sequence;
          end if;
        end if;
        -- RAISE NOTICE ''invc__sequence = % '', new.svpf_invc__sequence ;
        
        -- Now for service code
          select fept.*
          into   tmp_fept
          from   fept,patn
          where  patn__sequence = new.svpf_patn__sequence
          and    fept_serv_code = new.svpf_serv_code
          and    fept_feet_code = patn_feet_code;

        if not found then
          RAISE EXCEPTION ''item % not found for patient %'', new.svpf_serv_code,new.svpf_patn__sequence;
          tmp_fept.fept_desc := ''UNKNOWN'';
          tmp_fept.fept_amount := 0.00;
          tmp_fept.fept_gst_amount := 0.00;
        end if;
        if ( TG_OP = ''INSERT'' ) then
              -- RAISE EXCEPTION ''item = %, desc=%'', tmp_fept.fept_serv_code, tmp_fept.fept_desc;
          if (new.svpf_desc is null) then
            new.svpf_desc := tmp_fept.fept_desc;
          end if;
          if (new.svpf_amount is null) then
            new.svpf_amount := tmp_fept.fept_amount * (new.svpf_percentage/100::numeric);
          end if;
          if (new.svpf_gst_amount is null and new.svpf_date_service < ''jul 1 2000'' ) then
            new.svpf_gst_amount := tmp_fept.fept_gst_amount * (new.svpf_percentage/100::numeric);
          end if;
        end if;

        if ( TG_OP = ''UPDATE'' ) then
           --   RAISE NOTICE ''item = %, desc=%, perc=%'', tmp_fept.fept_serv_code,
           --                                              tmp_fept.fept_desc,
           --                                              new.svpf_percentage;
           --   RAISE NOTICE ''amount = %, perc=%, gst=%'', tmp_fept.fept_amount,
           --                                               tmp_fept.fept_gst_percentage,
           --                                               tmp_fept.fept_gst_amount;
           -- item code change - refresh description and amount
           if ( new.svpf_serv_code <> old.svpf_serv_code) then
              new.svpf_desc := tmp_fept.fept_desc;
              new.svpf_amount := tmp_fept.fept_amount * (new.svpf_percentage/100::numeric);
           end if;
           -- percentage change - refresh amount from fept, but leave description
           if ( new.svpf_serv_code <> old.svpf_serv_code or new.svpf_percentage <> old.svpf_percentage) then
              new.svpf_amount := tmp_fept.fept_amount * (new.svpf_percentage/100::numeric);
           end if;
           -- always recalculate the GST amount
           if ( new.svpf_date_service > ''jul 1 2000'' ) then
             new.svpf_gst_amount := new.svpf_amount * (tmp_fept.fept_gst_percentage/100::numeric);
           end if;
           -- final sanity checks
           if (new.svpf_amount is null) then
             new.svpf_amount := 0.00;
           end if;
           if (new.svpf_gst_amount is null) then
             new.svpf_gst_amount := 0.00;
           end if;
           if (new.svpf_percentage is null
               or new.svpf_percentage < 0) then
             new.svpf_percentage := 100;
           end if;

        end if;

        -- And check for %P in desc - replace with provider
        -- 
        x_pos := position( ''~P'' in new.svpf_desc);
        if ( x_pos > 0 ) then
          if ( length(new.svpf_desc) > x_pos + 1 ) then
            new.svpf_desc := substring(new.svpf_desc from 1 for (x_pos-1)) || tmp_patn.patn_prov_code || substring(new.svpf_desc from (x_pos+2));
          else
            new.svpf_desc := substring(new.svpf_desc from 1 for (x_pos-1)) || tmp_patn.patn_prov_code;
          end if;
        end if;
    return new;
    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: "fn_svpf_closedinvoice" () Type: FUNCTION Owner: source
--

CREATE FUNCTION "fn_svpf_closedinvoice" () RETURNS opaque AS 'DECLARE
    tmp_invc_date_printed invc.invc_date_printed%TYPE;
    old_invc__sequence invc.invc__sequence%TYPE;
    new_invc__sequence invc.invc__sequence%TYPE;
    x_mtau_attributes mtau.mtau_attributes%TYPE := '''';
    x_mtau_before mtau.mtau_before%TYPE := '''';
    x_mtau_after mtau.mtau_after%TYPE := '''';
    x_sep char(1) := ''~'';
    BEGIN

    old_invc__sequence := -1;
    new_invc__sequence := -1;

    -- ------------------------------  
    -- INSERTS should not be here
    -- ------------------------------  

    if (TG_OP != ''UPDATE'' and TG_OP != ''DELETE'') then
      RAISE EXCEPTION ''tr_svpf_closedinvoice: this trigger can only be used for UPDATE and DELETE'';
    end if;

    -- ------------------------------  
    -- uninteresting DELETES
    -- ------------------------------  
    if ( TG_OP = ''DELETE'' ) then
      if (old.svpf_invc__sequence is null or old.svpf_invc__sequence = 0) then
        return old;
      end if;
      old_invc__sequence := old.svpf_invc__sequence;
      new_invc__sequence := old.svpf_invc__sequence;
    end if;


    -- ------------------------------  
    -- UPDATES may be of interest
    -- ------------------------------  
    if (TG_OP = ''UPDATE'') then
      old_invc__sequence := old.svpf_invc__sequence;
      new_invc__sequence := new.svpf_invc__sequence;
    end if;
    
    -- ------------------------------  
    -- look for invc_date_printed
    -- ------------------------------ 
    select invc_date_printed
    into   tmp_invc_date_printed
    from   invc
    where  (invc__sequence = old_invc__sequence
           or invc__sequence = new_invc__sequence);

    -- ------------------------------
    -- This trigger might be part 
    -- of an invc delete, so no
    -- parent invc.
    -- ------------------------------
    if ( not found ) then
      tmp_invc_date_printed = now();
    end if;

    RAISE NOTICE ''tr_svpf_closedinvoice: tmp_invc_date_printed = %, old_invc__sequence = %, new_invc__sequence = %'', tmp_invc_date_printed, old_invc__sequence, new_invc__sequence;

    -- ------------------------------  
    -- ALREADY PRINTED - only
    -- admin can proceed.
    -- ------------------------------

    if ( tmp_invc_date_printed is not null ) then
      -- 32 is office-admin
      if ( (select perms::integer & 32 from mvac_user where username = current_user) != 32 ) then
        RAISE EXCEPTION ''This record cannot be copied, changed or deleted - the invoice number % has been printed. Please contact your Systems Administrator for assistance.'',
         old_invc__sequence;
        return null;
      end if;
    end if;

    -- ------------------------------
    -- Audit deletes after printing.
    -- ------------------------------
    if (TG_OP = ''DELETE'' and tmp_invc_date_printed is not null ) then
  
      insert into mtau(mtau_table_name, mtau_row_sequence, mtau_operation, mtau_attributes, mtau_before, mtau_after)
              select    ''svpf'', old.svpf__sequence, TG_OP,
                        x_sep ||
                        ''svpf_date_service'' || x_sep ||
                        ''svpf_serv_code'' || x_sep ||
                        ''svpf_percentage'' || x_sep ||
                        ''svpf_desc'' || x_sep ||
                        ''svpf_amount'' || x_sep ||
                        ''svpf_gst_amount'' || x_sep ||
                        ''svpf_invc__sequence'' || x_sep ||
                        ''svpf_mdaf__sequence'' || x_sep ||
                        ''svpf_patn__sequence'',
                        x_sep ||
                        coalesce( old.svpf_date_service::text, '''' ) || x_sep ||
                        coalesce( old.svpf_serv_code, '''' ) || x_sep ||
                        coalesce( old.svpf_percentage, -1 ) || x_sep ||
                        coalesce( old.svpf_desc, '''' ) || x_sep ||
                        coalesce( to_char(old.svpf_amount,''9999999999.99''), '''' ) || x_sep ||
                        coalesce( to_char(old.svpf_gst_amount,''9999999999.99''), '''' ) || x_sep ||
                        coalesce( old.svpf_invc__sequence, -1 ) || x_sep ||
                        coalesce( old.svpf_mdaf__sequence, -1 ) || x_sep ||
                        coalesce( old.svpf_patn__sequence, -1 ),
                        NULL;
      return old;

    end if;

    -- ------------------------------
    -- Audit updates after printing
    -- ------------------------------
  
    if ( TG_OP = ''UPDATE'' and tmp_invc_date_printed is not null ) then

      insert into mtau(mtau_table_name, mtau_row_sequence, mtau_operation, mtau_attributes, mtau_before, mtau_after)
              select    ''svpf'', old.svpf__sequence, TG_OP,
                        x_sep ||
                        ''svpf_date_service'' || x_sep ||
                        ''svpf_serv_code'' || x_sep ||
                        ''svpf_percentage'' || x_sep ||
                        ''svpf_desc'' || x_sep ||
                        ''svpf_amount'' || x_sep ||
                        ''svpf_gst_amount'' || x_sep ||
                        ''svpf_invc__sequence'' || x_sep ||
                        ''svpf_mdaf__sequence'' || x_sep ||
                        ''svpf_patn__sequence'',
                        x_sep ||
                        coalesce( old.svpf_date_service::text, '''' ) || x_sep ||
                        coalesce( old.svpf_serv_code, '''' ) || x_sep ||
                        coalesce( old.svpf_percentage, -1 ) || x_sep ||
                        coalesce( old.svpf_desc, '''' ) || x_sep ||
                        coalesce( to_char(old.svpf_amount,''9999999999.99''), '''' ) || x_sep ||
                        coalesce( to_char(old.svpf_gst_amount,''9999999999.99''), '''' ) || x_sep ||
                        coalesce( old.svpf_invc__sequence, -1 ) || x_sep ||
                        coalesce( old.svpf_mdaf__sequence, -1 ) || x_sep ||
                        coalesce( old.svpf_patn__sequence, -1 ),
                        x_sep ||
                        coalesce( new.svpf_date_service::text, '''' ) || x_sep ||
                        coalesce( new.svpf_serv_code, '''' ) || x_sep ||
                        coalesce( new.svpf_percentage, -1 ) || x_sep ||
                        coalesce( new.svpf_desc, '''' ) || x_sep ||
                        coalesce( to_char(new.svpf_amount,''9999999999.99''), '''' ) || x_sep ||
                        coalesce( to_char(new.svpf_gst_amount,''9999999999.99''), '''' ) || x_sep ||
                        coalesce( new.svpf_invc__sequence, -1 ) || x_sep ||
                        coalesce( new.svpf_mdaf__sequence, -1 ) || x_sep ||
                        coalesce( new.svpf_patn__sequence, -1 );
      return new;
    end if;

    -- ------------------------------
    -- Tidy up.
    -- ------------------------------
    if (TG_OP = ''DELETE'') then
      return old;
    else
      return new;
    end if;

    END;' LANGUAGE 'plpgsql';

--
--
--
-- Name: dbst Type: VIEW Owner: source
--

CREATE VIEW "dbst" as SELECT invc.invc_dbtr_code AS dbst_dbtr_code, dbtr_address(invc.invc_dbtr_code) AS dbst_full_address, dbtr.dbtr_name AS dbst_name, dbtr.dbtr_address AS dbst_address, dbtr.dbtr_suburb AS dbst_suburb, dbtr.dbtr_postcode AS dbst_postcode, ((dbtr.dbtr_state || ' '::text) || dbtr.dbtr_postcode) AS dbst_state, dbtr.dbtr_phone AS dbst_phone, invc_patient_name(invc.invc__sequence) AS dbst_patient, dbtr_patient_key(dbtr.dbtr_code) AS dbst_patient_key, dbtr.dbtr_group AS dbst_group, dbtr.dbtr_last_statement AS dbst_last_statement, dbtr.dbtr_first_statement AS dbst_first_statement, dbtr_last_invc_printed(invc.invc_dbtr_code) AS dbst_last_invoice, dbtr.dbtr_delay_statement AS dbst_delay_statement, date((now() - "interval"((text(conf.conf_statement_age) || ' days'::text)))) AS dbst_date, dbtr.dbtr_amount_outstanding AS dbst_amount_outstanding, dbtr_total_balance(invc.invc_dbtr_code) AS dbst_total_balance, dbtr_period_balance(dbtr.dbtr_code, 0, conf.conf_statement_age) AS dbst_balance_0, dbtr_period_balance(dbtr.dbtr_code, 30, conf.conf_statement_age) AS dbst_balance_30, dbtr_period_balance(dbtr.dbtr_code, 60, conf.conf_statement_age) AS dbst_balance_60, dbtr_period_balance(dbtr.dbtr_code, 90, conf.conf_statement_age) AS dbst_balance_90, dbtr_period_balance(dbtr.dbtr_code, 120, conf.conf_statement_age) AS dbst_balance_120, invc.invc_feet_code AS dbst_feet_code, invc.invc__sequence AS dbst_invc__sequence, (invc.invc_amount + invc.invc_gst_amount) AS dbst_amount, ((invc.invc_amount + invc.invc_gst_amount) - invc_balance_then(invc.invc__sequence, conf.conf_statement_age)) AS dbst_paid, invc_balance_then(invc.invc__sequence, conf.conf_statement_age) AS dbst_balance, invc_age_period(invc.invc__sequence, conf.conf_statement_age) AS dbst_period, CASE WHEN (invc.invc_date_printed ISNULL) THEN NULL::date ELSE date(invc.invc_date_printed) END AS dbst_date_printed, CASE WHEN (invc.invc_date_reprint ISNULL) THEN NULL::date ELSE date(invc.invc_date_reprint) END AS dbst_date_reprint, ((CASE WHEN (patn.patn_fsnam NOTNULL) THEN patn.patn_fsnam WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END || ' '::text) || CASE WHEN (patn.patn_psnam NOTNULL) THEN patn.patn_psnam WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END) AS dbst_patn_name, patn.patn_address AS dbst_patn_address, ((CASE WHEN (patn.patn_suburb NOTNULL) THEN patn.patn_suburb WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END || ' '::text) || CASE WHEN (patn.patn_postcode NOTNULL) THEN patn.patn_postcode WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END) AS dbst_patn_suburb, patn.patn_state AS dbst_patn_state, patn.patn_postcode AS dbst_patn_postcode, short_date(patn.patn_dob) AS dbst_patn_dob, patn.patn_hlfd_code AS dbst_patn_hlfd_code, patn.patn_ins_level AS dbst_patn_ins_level, patn.patn_healthnumb AS dbst_patn_healthnumb, patn.patn_medicare AS dbst_patn_medicare, patn.patn_healthcard AS dbst_patn_healthcard, patn.patn_patf_code AS dbst_patn_patf_code, patn.patn__sequence AS dbst_patn__sequence, invc.invc__sequence AS dbst__sequence, invc.invc__timestamp AS dbst__timestamp, invc.invc__user_entry AS dbst__user_entry, invc.invc__status AS dbst__status FROM invc, dbtr, patn, (SELECT conf_integer('dbst_statement_age'::text) AS conf_statement_age, (now() - "interval"((text(conf_integer('dbst_statement_age'::text)) || ' days'::text))) AS conf_statement_date) conf WHERE ((((((dbtr.dbtr_code = invc.invc_dbtr_code) AND (patn.patn_patf_code <> 'HOLD'::text)) AND (invc.invc_date_printed NOTNULL)) AND (invc.invc_date_printed < conf.conf_statement_date)) AND (invc_balance_then(invc.invc__sequence, conf.conf_statement_age) NOTNULL)) AND (invc.invc_patn__sequence = patn.patn__sequence));

--
--
--
-- Name: dbst Type: ACL Owner: 
--

REVOKE ALL on "dbst" from PUBLIC;
GRANT SELECT on "dbst" to PUBLIC;
GRANT ALL on "dbst" to "source";

--
--
--
-- Name: svpv Type: VIEW Owner: source
--

CREATE VIEW "svpv" as SELECT date(svpf.svpf_date_service) AS svpv_date_service, svpf.svpf_date_service AS svpv_ts_service, CASE WHEN (svpf.svpf_serv_code ~* '/i$'::text) THEN ("substring"(svpf.svpf_serv_code, 1, (length(svpf.svpf_serv_code) - 2)) || '*'::text) ELSE svpf.svpf_serv_code END AS svpv_serv_code, svpf.svpf_percentage AS svpv_percentage, svpf.svpf_desc AS svpv_desc, svpf.svpf_amount AS svpv_amount, svpf.svpf_gst_amount AS svpv_gst_amount, (svpf.svpf_amount + svpf.svpf_gst_amount) AS svpv_total_amount, svpf.svpf_patn__sequence AS svpv_patn__sequence, invc.invc__sequence AS svpv_invc__sequence, invc.invc_date_printed AS svpv_invc_date_printed, invc.invc_date_reprint AS svpv_invc_date_reprint, invc.invc_amount AS svpv_invc_amount, invc.invc_gst_amount AS svpv_invc_gst_amount, (invc.invc_paid_amount + invc.invc_paid_gst_amount) AS svpv_invc_credits, cred_summary(invc.invc__sequence, 3) AS svpv_cred_summary, (((invc.invc_amount + invc.invc_gst_amount) - invc.invc_paid_amount) - invc.invc_paid_gst_amount) AS svpv_invc_balance, CASE WHEN (invc.invc_date_printed ISNULL) THEN date(now()) ELSE date(invc.invc_date_printed) END AS svpv_date_printed, CASE WHEN (invc.invc_date_printed ISNULL) THEN NULL::date ELSE date(now()) END AS svpv_date_reprint, CASE WHEN (invc.invc_rfdr_date ISNULL) THEN NULL::date ELSE date(invc.invc_rfdr_date) END AS svpv_rfdr_date, CASE WHEN (invc.invc_rfdr_period = '99'::text) THEN 'Indefinite'::text WHEN ((invc.invc_rfdr_period ISNULL) OR (invc.invc_rfdr_period = '0'::text)) THEN ''::text ELSE (invc.invc_rfdr_period || ' Months'::text) END AS svpv_rfdr_period, ((CASE WHEN (patn.patn_fsnam NOTNULL) THEN patn.patn_fsnam WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END || ' '::text) || CASE WHEN (patn.patn_psnam NOTNULL) THEN patn.patn_psnam WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END) AS svpv_patn_name, patn.patn_address AS svpv_patn_address, ((CASE WHEN (patn.patn_suburb NOTNULL) THEN patn.patn_suburb WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END || ' '::text) || CASE WHEN (patn.patn_postcode NOTNULL) THEN patn.patn_postcode WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END) AS svpv_patn_suburb, patn.patn_state AS svpv_patn_state, patn.patn_postcode AS svpv_patn_postcode, short_date(patn.patn_dob) AS svpv_patn_dob, patn.patn_hlfd_code AS svpv_patn_hlfd_code, patn.patn_ins_level AS svpv_patn_ins_level, patn.patn_healthnumb AS svpv_patn_healthnumb, patn.patn_medicare AS svpv_patn_medicare, patn.patn_healthcard AS svpv_patn_healthcard, patn.patn_patf_code AS svpv_patn_patf_code, dbtr_address(dbtr.dbtr_code) AS svpv_dbtr_full_address, dbtr.dbtr_name AS svpv_dbtr_name, dbtr.dbtr_address AS svpv_dbtr_address, ((CASE WHEN (dbtr.dbtr_suburb NOTNULL) THEN dbtr.dbtr_suburb WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END || ' '::text) || CASE WHEN (dbtr.dbtr_postcode NOTNULL) THEN dbtr.dbtr_postcode WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END) AS svpv_dbtr_suburb, dbtr.dbtr_state AS svpv_dbtr_state, rfdr.rfdr_code AS svpv_rfdr_code, rfdr.rfdr_name AS svpv_rfdr_name, rfdr.rfdr_street AS svpv_rfdr_street, rfdr.rfdr_suburb AS svpv_rfdr_suburb, rfdr.rfdr_postcode AS svpv_rfdr_postcode, rfdr.rfdr_state AS svpv_rfdr_state, rfdr.rfdr_provider AS svpv_rfdr_provider, rfdr.rfdr_phone AS svpv_rfdr_phone, rfdr.rfdr_salutation AS svpv_rfdr_salutation, rfdr.rfdr_index AS svpv_rfdr_index, empl.empl_code AS svpv_empl_code, empl.empl_name AS svpv_empl_name, empl.empl_address AS svpv_empl_address, empl.empl_suburb AS svpv_empl_suburb, empl.empl_postcode AS svpv_empl_postcode, empl.empl_state AS svpv_empl_state, feet.feet_code AS svpv_feet_code, feet.feet_desc AS svpv_feet_desc, prov.prov_code AS svpv_prov_code, prov.prov_provider_num AS svpv_prov_provider_num, prov.prov_name AS svpv_prov_name, prov.prov_address AS svpv_prov_address, prov.prov_suburb AS svpv_prov_suburb, prov.prov_state AS svpv_prov_state, prov.prov_postcode AS svpv_prov_postcode, prov.prov_salutation AS svpv_prov_salutation, prov.prov_phone AS svpv_prov_phone, prov.prov_bank_code AS svpv_prov_bank_code, svpf.svpf__sequence AS svpv__sequence, svpf.svpf__timestamp AS svpv__timestamp, svpf.svpf__user_entry AS svpv__user_entry, svpf.svpf__status AS svpv__status FROM svpf, invc, patn, dbtr, rfdr, empl, feet, prov WHERE ((((((((svpf.svpf_invc__sequence = invc.invc__sequence) AND (invc.invc_dbtr_code = dbtr.dbtr_code)) AND (invc.invc_patn__sequence = patn.patn__sequence)) AND (patn.patn_patf_code <> 'HOLD'::text)) AND (invc.invc_rfdr_code = rfdr.rfdr_code)) AND (invc.invc_feet_code = feet.feet_code)) AND (invc.invc_prov_code = prov.prov_code)) AND (invc.invc_empl_code = empl.empl_code));

--
--
--
-- Name: svpv Type: ACL Owner: 
--

REVOKE ALL on "svpv" from PUBLIC;
GRANT SELECT on "svpv" to PUBLIC;
GRANT ALL on "svpv" to "source";

--
--
--
-- Name: dbag Type: VIEW Owner: source
--

CREATE VIEW "dbag" as SELECT date((now() - "interval"((to_char(conf_integer('dbst_statement_age'::text), '9999'::text) || ' days'::text)))) AS dbag_date, dbtr.dbtr_code AS dbag_dbtr_code, dbtr.dbtr_name AS dbag_name, dbtr.dbtr_address AS dbag_address, dbtr.dbtr_suburb AS dbag_suburb, dbtr.dbtr_postcode AS dbag_postcode, dbtr.dbtr_state AS dbag_state, dbtr.dbtr_phone AS dbag_phone, dbtr_patient_key(dbtr.dbtr_code) AS dbag_patient_key, short_date(dbtr.dbtr_last_statement) AS dbag_last_statement, dbtr.dbtr_delay_statement AS dbag_delay_statement, dbtr_total_balance(dbtr.dbtr_code, conf_integer('dbst_statement_age'::text)) AS dbag_total_balance, dbtr_period_balance(dbtr.dbtr_code, 0, conf_integer('dbst_statement_age'::text)) AS dbag_balance_0, dbtr_period_balance(dbtr.dbtr_code, 30, conf_integer('dbst_statement_age'::text)) AS dbag_balance_30, dbtr_period_balance(dbtr.dbtr_code, 60, conf_integer('dbst_statement_age'::text)) AS dbag_balance_60, dbtr_period_balance(dbtr.dbtr_code, 90, conf_integer('dbst_statement_age'::text)) AS dbag_balance_90, dbtr_period_balance(dbtr.dbtr_code, 120, conf_integer('dbst_statement_age'::text)) AS dbag_balance_120, dbtr.dbtr__sequence AS dbag__sequence, dbtr.dbtr__timestamp AS dbag__timestamp, dbtr.dbtr__user_entry AS dbag__user_entry, dbtr.dbtr__status AS dbag__status FROM dbtr WHERE (dbtr_total_balance(dbtr.dbtr_code, conf_integer('dbst_statement_age'::text)) <> '0'::"numeric");

--
--
--
-- Name: dbag Type: ACL Owner: 
--

REVOKE ALL on "dbag" from PUBLIC;
GRANT SELECT on "dbag" to PUBLIC;
GRANT ALL on "dbag" to "source";

--
--
--
-- Name: svlt Type: VIEW Owner: source
--

CREATE VIEW "svlt" as SELECT date(svpf.svpf_date_service) AS svlt_date_service, svpf.svpf_date_service AS svlt_ts_service, CASE WHEN (svpf.svpf_serv_code ~* '/i$'::text) THEN ("substring"(svpf.svpf_serv_code, 1, (length(svpf.svpf_serv_code) - 2)) || '*'::text) ELSE svpf.svpf_serv_code END AS svlt_serv_code, svpf.svpf_percentage AS svlt_percentage, svpf.svpf_desc AS svlt_desc, svpf.svpf_amount AS svlt_amount, svpf.svpf_gst_amount AS svlt_gst_amount, (svpf.svpf_amount + svpf.svpf_gst_amount) AS svlt_total_amount, svpf.svpf_patn__sequence AS svlt_patn__sequence, invc.invc__sequence AS svlt_invc__sequence, invc.invc_date_printed AS svlt_invc_date_printed, invc.invc_date_reprint AS svlt_invc_date_reprint, invc.invc_amount AS svlt_invc_amount, invc.invc_gst_amount AS svlt_invc_gst_amount, (invc.invc_paid_amount + invc.invc_paid_gst_amount) AS svlt_invc_credits, cred_summary(invc.invc__sequence, 3) AS svlt_cred_summary, (((invc.invc_amount + invc.invc_gst_amount) - invc.invc_paid_amount) - invc.invc_paid_gst_amount) AS svlt_invc_balance, CASE WHEN (invc.invc_date_printed ISNULL) THEN date(now()) ELSE date(invc.invc_date_printed) END AS svlt_date_printed, CASE WHEN (invc.invc_date_printed ISNULL) THEN NULL::date ELSE date(now()) END AS svlt_date_reprint, CASE WHEN (invc.invc_rfdr_date ISNULL) THEN NULL::date ELSE date(invc.invc_rfdr_date) END AS svlt_rfdr_date, CASE WHEN (invc.invc_rfdr_period = '99'::text) THEN 'Indefinite'::text WHEN ((invc.invc_rfdr_period ISNULL) OR (invc.invc_rfdr_period = '0'::text)) THEN ''::text ELSE (invc.invc_rfdr_period || ' Months'::text) END AS svlt_rfdr_period, ((CASE WHEN (patn.patn_fsnam NOTNULL) THEN patn.patn_fsnam WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END || ' '::text) || CASE WHEN (patn.patn_psnam NOTNULL) THEN patn.patn_psnam WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END) AS svlt_patn_name, patn.patn_address AS svlt_patn_address, ((CASE WHEN (patn.patn_suburb NOTNULL) THEN patn.patn_suburb WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END || ' '::text) || CASE WHEN (patn.patn_postcode NOTNULL) THEN patn.patn_postcode WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END) AS svlt_patn_suburb, patn.patn_state AS svlt_patn_state, patn.patn_postcode AS svlt_patn_postcode, short_date(patn.patn_dob) AS svlt_patn_dob, patn.patn_hlfd_code AS svlt_patn_hlfd_code, patn.patn_ins_level AS svlt_patn_ins_level, patn.patn_healthnumb AS svlt_patn_healthnumb, patn.patn_medicare AS svlt_patn_medicare, patn.patn_healthcard AS svlt_patn_healthcard, patn.patn_patf_code AS svlt_patn_patf_code, dbtr_address(dbtr.dbtr_code) AS svlt_dbtr_full_address, dbtr.dbtr_name AS svlt_dbtr_name, dbtr.dbtr_address AS svlt_dbtr_address, ((CASE WHEN (dbtr.dbtr_suburb NOTNULL) THEN dbtr.dbtr_suburb WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END || ' '::text) || CASE WHEN (dbtr.dbtr_postcode NOTNULL) THEN dbtr.dbtr_postcode WHEN ('' NOTNULL) THEN ''::text ELSE NULL::text END) AS svlt_dbtr_suburb, dbtr.dbtr_state AS svlt_dbtr_state, rfdr.rfdr_code AS svlt_rfdr_code, rfdr.rfdr_name AS svlt_rfdr_name, rfdr.rfdr_street AS svlt_rfdr_street, rfdr.rfdr_suburb AS svlt_rfdr_suburb, rfdr.rfdr_postcode AS svlt_rfdr_postcode, rfdr.rfdr_state AS svlt_rfdr_state, rfdr.rfdr_provider AS svlt_rfdr_provider, rfdr.rfdr_phone AS svlt_rfdr_phone, rfdr.rfdr_salutation AS svlt_rfdr_salutation, rfdr.rfdr_index AS svlt_rfdr_index, empl.empl_code AS svlt_empl_code, empl.empl_name AS svlt_empl_name, empl.empl_address AS svlt_empl_address, empl.empl_suburb AS svlt_empl_suburb, empl.empl_postcode AS svlt_empl_postcode, empl.empl_state AS svlt_empl_state, feet.feet_code AS svlt_feet_code, feet.feet_desc AS svlt_feet_desc, prov.prov_code AS svlt_prov_code, prov.prov_provider_num AS svlt_prov_provider_num, prov.prov_name AS svlt_prov_name, prov.prov_address AS svlt_prov_address, prov.prov_suburb AS svlt_prov_suburb, prov.prov_state AS svlt_prov_state, prov.prov_postcode AS svlt_prov_postcode, prov.prov_salutation AS svlt_prov_salutation, prov.prov_phone AS svlt_prov_phone, prov.prov_bank_code AS svlt_prov_bank_code, svpf.svpf__sequence AS svlt__sequence, svpf.svpf__timestamp AS svlt__timestamp, svpf.svpf__user_entry AS svlt__user_entry, svpf.svpf__status AS svlt__status FROM svpf, invc, patn, dbtr, rfdr, empl, feet, prov WHERE (((((((svpf.svpf_invc__sequence = invc.invc__sequence) AND (invc.invc_dbtr_code = dbtr.dbtr_code)) AND (invc.invc_patn__sequence = patn.patn__sequence)) AND (invc.invc_rfdr_code = rfdr.rfdr_code)) AND (invc.invc_feet_code = feet.feet_code)) AND (invc.invc_prov_code = prov.prov_code)) AND (invc.invc_empl_code = empl.empl_code));

--
--
--
-- Name: svlt Type: ACL Owner: 
--

REVOKE ALL on "svlt" from PUBLIC;
GRANT SELECT on "svlt" to PUBLIC;
GRANT ALL on "svlt" to "source";

--
-- Data for TOC Entry ID 508 (OID 17555001)
--
-- Name: mvac_user Type: TABLE DATA Owner: source
--


COPY "mvac_user"  FROM stdin;
c14cbf141af555b607ab	admin	Office Admin	guest	35	admin
c14cbf141af555b607ac	guest	Guest account	guest	3	guest
c14cbf141af555b607dc	source	Administrator	admin	127	source@localhost
\.
--
-- Data for TOC Entry ID 509 (OID 17555038)
--
-- Name: mvac_database Type: TABLE DATA Owner: source
--


COPY "mvac_database"  FROM stdin;
prac	Base PRAC Database		5432					2
\.
--
-- Data for TOC Entry ID 510 (OID 17555111)
--
-- Name: mvac_sessions Type: TABLE DATA Owner: source
--


COPY "mvac_sessions"  FROM stdin;
\.
--
-- Data for TOC Entry ID 511 (OID 17555169)
--
-- Name: mtcl Type: TABLE DATA Owner: source
--


COPY "mtcl"  FROM stdin;
31	surg	Surgical Notes	\N	10000	order by surg_patn__sequence, surg__sequence desc		surg__sequence	surg__sequence	surg_patn__sequence	200	0		192	09/02/2002 08:02:04.00 EST	source	A
2	hlfd	Health Funds 	\N	100			hlfd__sequence	hlfd_code	hlfd_desc	200	0		142	19/10/2001 12:26:54.00 EST	source	A
2	icd9	ICD-9 Codes 	\N	1000			icd9__sequence			200	0		143	19/10/2001 12:27:12.00 EST	source	A
2	inst	Institutions 	\N	1000			inst__sequence			200	0		144	19/10/2001 12:27:37.00 EST	source	A
31	labl	Class labl	\N	10000	order by labl_id,labl_subtype,labl_row		labl__sequence			200	0		146	19/10/2001 12:28:06.00 EST	source	A
2	lthd	Letterheads 	\N	100	order by lthd_order asc		lthd__sequence			200	0		147	19/10/2001 12:28:13.00 EST	source	A
2	mdaf	Medicare Assignment Forms 	\N	10000			mdaf__sequence			200	0		148	19/10/2001 12:28:23.00 EST	source	A
2	mdbt	Medicare Batches 	\N	10000			mdbt__sequence			200	0		149	19/10/2001 12:28:33.00 EST	source	A
2	mdcr	Medicare Credits 	\N	10000			mdcr__sequence			200	0		150	19/10/2001 12:28:42.00 EST	source	A
2	note	Patient Note pad 	\N	20	order by note_patn__sequence,note__timestamp		note__sequence			200	0		151	19/10/2001 12:28:48.00 EST	source	A
31	prnt	Printers	\N	10000	order by prnt_desc		prnt_name			20	0		154	19/10/2001 12:29:30.00 EST	source	A
31	gstv	GST Receipts	\N	10000	order by gstv_bkdp_date_created,gstv_paym_date_entry		gstv__sequence	gstv_invc_sequence	gstv_quarter_date	200	0		179	23/10/2001 15:35:02.00 EST	source	A
2	pyas	Payment assignments to services 	\N	10000			pyas__sequence			200	0		156	19/10/2001 12:29:47.00 EST	source	A
2	serv	Service Items 	\N	100	order by serv_code		serv__sequence			300	0		158	19/10/2001 12:30:04.00 EST	source	A
2	stts	Episode status 	\N	100000			stts__sequence			200	0		159	19/10/2001 12:30:13.00 EST	source	A
2	accl	Account Class 	\N	100			accl__sequence			200	0		124	19/10/2001 12:24:26.00 EST	source	A
31	tdtp	Tender Types	\N	10000	order by tdtp_desc		tdtp_code	tdtp_code	tdtp_desc	200	0		161	19/10/2001 12:30:31.00 EST	source	A
31	form	Forms	\N	10000			form_code	form_code	form_desc	200	0		12	10/10/2001 12:25:30.00 EST	source	A
31	fmdt	Class fmdt	\N	10000	order by fmdt_section, fmdt_field_type,fmdt_y_coord,fmdt_x_coord		fmdt__sequence			200	0		13	10/10/2001 12:25:43.00 EST	source	A
31	agdi	Aged Debt by Invoice	\N	10000	order by agdi_dbtr_code,agdi_period		agdi__sequence	agdi__sequence	agdi_dbtr_code	200	0	aged_extras.inc	162	19/10/2001 12:30:39.00 EST	source	A
2	agdd	Aged Debt by Debtor	\N	10000	order by agdd_dbtr_code		agdd_dbtr_code			200	0		163	19/10/2001 12:30:50.00 EST	source	A
2	agdp	Aged Debt by Period	\N	10000	order by agdp_period		agdp_period			200	0		164	19/10/2001 12:30:57.00 EST	source	A
2	agdt	Aged Debt by FeeType	\N	10000	order by agdt_feet_code		agdt_feet_code			200	0		165	19/10/2001 12:31:04.00 EST	source	A
31	pmsc	Payment Summary	\N	10000	order by pmsc__timestamp		pmsc__sequence			200	0		166	19/10/2001 12:31:11.00 EST	source	A
31	pmsp	Credits by Periods	\N	10000	order by pmsp_month desc		pmsp_month			200	0		167	19/10/2001 12:31:19.00 EST	source	A
31	ssms	Services in Summary	\N	10000	order by ssms_date_service		ssms__sequence			200	0		168	19/10/2001 12:31:27.00 EST	source	A
31	ssmp	Service Summary by Period	\N	10000	order by ssmp_month		ssmp_month			200	0		169	19/10/2001 12:31:35.00 EST	source	A
31	ssmc	Service Summary by Code	\N	10000	order by ssmc_serv_code		ssmc__sequence			200	0		170	19/10/2001 12:31:43.00 EST	source	A
31	crev	Credits to Invoices(V)	\N	10000			crev__sequence	crev_invc__sequence	crev_cred_amount	200	0		171	19/10/2001 12:31:51.00 EST	source	A
31	fept	Fee List	\N	10000	order by fept_serv_code,fept_feet_code		fept__sequence	fept_serv_code	fept_desc	200	0		172	19/10/2001 12:32:02.00 EST	source	A
31	crep	Credits to Invoices	\N	10000	order by crep_paym__sequence,crep_invc__sequence		crep__sequence	crep__sequence	crep_invc__sequence	200	0		173	19/10/2001 12:32:09.00 EST	source	A
31	bank	Bank Accounts	\N	10000	order by bank_code		bank_code	bank__sequence	bank_name	200	0	paym_extras.inc	125	19/10/2001 12:24:31.00 EST	source	A
31	dbst	Debtor Statements	\N	10000	order by dbst__sequence		dbst__sequence	dbst__sequence	dbst__sequence	200	0		174	19/10/2001 12:32:23.00 EST	source	A
31	dbag	Aged Debtors	\N	10000	order by dbag__sequence		dbag__sequence	dbag__sequence	dbag__sequence	200	0		175	19/10/2001 12:32:37.00 EST	source	A
31	cnrv	Contracts	\N	10000	order by cnrv_start_date desc		cnrv__sequence	cnrv__sequence	cnrv_start_date	200	0		176	19/10/2001 12:32:46.00 EST	source	A
2	patv	Patient Demographics View	\N	10	order by patv_psnam asc, patv_fsnam asc	patv_psnam	patv__sequence	patv_fileno	patv_psnam	200	0	patv_extras.inc	178	19/10/2001 12:33:25.00 EST	source	A
2	bkdp	Bank Deposit Reports 	\N	1000	order by bkdp__sequence desc		bkdp__sequence	bkdp__sequence	bkdp_date_created	200	0	bkdp_extras.inc	126	19/10/2001 12:24:41.00 EST	source	A
2	cash	Cash Assignments 	\N	1000000			cash__sequence			200	0		127	19/10/2001 12:24:49.00 EST	source	A
2	clsp	Clinical Speciality 	\N	1000000			clsp__sequence			200	0		128	19/10/2001 12:24:56.00 EST	source	A
2	clst	Service Clusters 	\N	100			clst__sequence			200	0		129	19/10/2001 12:25:01.00 EST	source	A
31	cnrt	Contracts	\N	10000	order by cnrt_start_date desc		cnrt__sequence	cnrt__sequence	cnrt_start_date	200	0		130	19/10/2001 12:25:09.00 EST	source	A
2	cnty	Country of Birth 	\N	100000			cnty__sequence			200	0		131	19/10/2001 12:25:18.00 EST	source	A
2	conf	Configuration 	\N	100	order by conf_type asc,conf_code asc		conf__sequence			200	0		132	19/10/2001 12:25:24.00 EST	source	A
2	cred	Credits to Invoices 	\N	100000			cred__sequence	cred_invc__sequence	cred_amount	100	0		133	19/10/2001 12:25:30.00 EST	source	A
2	diag	Diagnosis 	\N	1000			diag__sequence			200	0		135	19/10/2001 12:25:47.00 EST	source	A
31	docs	Documents	\N	10000	order by docs_patn__sequence, docs__sequence,docs__timestamp desc		docs__sequence	docs__sequence	docs_title	200	0		136	19/10/2001 12:25:54.00 EST	source	A
2	empl	Employers 	\N	100	order by empl_code		empl__sequence			200	0		137	19/10/2001 12:26:01.00 EST	source	A
2	epsd	Treatment Episodes 	\N	1000			epsd__sequence			200	0		138	19/10/2001 12:26:09.00 EST	source	A
31	svpv	Services - View	\N	10000	order by svpv_invc__sequence desc, svpv_ts_service asc, svpv_amount desc		svpv__sequence	svpv__sequence	svpv_desc	200	0		194	09/02/2002 08:02:15.00 EST	source	A
2	feeb	Fees for services 	\N	100	order by feeb_serv_code,feeb_feet_code	feeb_serv_code	feeb__sequence			800	0		140	19/10/2001 12:26:30.00 EST	source	A
2	feet	Fee Levels 	\N	100			feet__sequence			200	0		141	19/10/2001 12:26:37.00 EST	source	A
31	surv	Surgical Report	\N	10000	order by surv_psnam,surv_fsnam,surv_oprn_date		surv__sequence	surv__sequence	surv_psnam	200	0		193	09/02/2002 08:02:09.00 EST	source	A
31	evnt	Schedule	\N	10000	order by evnt__sequence,evnt_starttime desc		evnt__sequence	evnt__sequence	evnt_starttime	200	0		212	24/10/2002 04:23:29.00 EST	source	A
31	locn	Location	\N	10000	order by locn_code		locn_code	locn_code	locn_desc	200	0		214	24/10/2002 04:26:09.00 EST	source	A
31	aptp	Appointment Types	\N	10000	order by aptp__sequence		aptp_code	aptp_code	aptp_code	200	0		215	24/10/2002 04:26:19.00 EST	source	A
31	apst	Appointment Status	\N	10000	order by apst__sequence		apst_code	apst_code	apst_code	200	0		217	24/10/2002 04:26:40.00 EST	source	A
31	aptd	Appointment Conditions	\N	10000	order by aptd__sequence		aptd__sequence	aptd__sequence	aptd__sequence	200	0		218	25/10/2002 09:52:16.00 EST	source	A
31	eftr	EFT - base	\N	10000	order by eftr__sequence		eftr__sequence	eftr__sequence	eftr__sequence	200	0		188	09/02/2002 08:01:28.00 EST	source	A
31	eftv	EFT-reports	\N	10000	order by eftv_paym__sequence,eftv__sequence		eftv__sequence	eftv__sequence	eftv_patn_psnam	200	0		189	09/02/2002 08:01:32.00 EST	source	A
31	patf	Patient Flags	\N	10000	order by patf_code		patf_code	patf_code	patf_desc	200	0		190	09/02/2002 08:01:44.00 EST	source	A
2	prov	Service Providers 	\N	100	order by prov_code		prov__sequence	prov_code	prov_name	200	0		219	25/10/2002 09:57:37.00 EST	source	A
31	notv	Patient Note Pad	\N	10000	order by notv_patn__sequence,notv__timestamp		notv__sequence	notv__sequence	notv__sequence	200	0		220	13/03/2003 15:31:02.13 EST	source	A
31	mtad	Application Detail	METADATA	10000	order by mtad_list_order asc	\N	mtad__sequence	mtad__sequence	mtad__sequence	200	0	\N	225	04/04/2004 11:45:22.00 EST	source	A
31	mtag	Application Groups	METADATA	10000	order by mtag_list_order asc	\N	mtag_name	mtag_name	mtag_name	200	0	\N	224	04/04/2004 11:45:21.00 EST	source	A
31	mtal	Alerts	METADATA	10000	order by mtal__sequence	\N	mtal__sequence	mtal__sequence	mtal__sequence	0	0	\N	223	04/04/2004 11:45:19.00 EST	source	A
31	mtat	Attribute Meta Data	METADATA	10020	order by mtat_view_order,mtat_name		mtat_name			200	0		9	10/10/2001 12:25:01.00 EST	source	A
31	mtcl	Class Meta Data	METADATA	10010	order by mtcl_name	class_group	mtcl_name	mtcl_name	mtcl_name	200	0		8	10/10/2001 12:24:49.00 EST	source	A
31	mtfn	Foreign Meta Data	METADATA	10030			mtfn__sequence			200	0		10	10/10/2001 12:25:14.00 EST	source	A
31	mtop	Comparison Operators	METADATA	10000	order by mtop__sequence	\N	mtop_code	mtop_code	mtop_desc	0	0	\N	222	04/04/2004 11:45:18.00 EST	source	A
31	mtrl	Relation Meta Data	METADATA	10040			mtrl__sequence			200	0		11	10/10/2001 12:25:23.00 EST	source	A
31	mtsv	mtsv	METADATA	10000	order by mtsv__sequence	\N	mtsv__sequence	mtsv__sequence	mtsv__sequence	200	0	\N	7	10/10/2001 12:24:25.00 EST	source	A
31	mttk	mttk	\N	10000	order by mttk__sequence	\N	mttk_code	mttk_code	mttk_code	200	0	\N	226	04/04/2004 11:45:25.00 EST	source	A
31	mtau	mtau	\N	10000	order by mtau__sequence	\N	mtau__sequence	mtau__sequence	mtau__sequence	200	0	\N	227	04/04/2004 11:45:25.00 EST	source	A
31	pcde	Postcodes	\N	10000	order by pcde__sequence	\N	pcde__sequence	pcde__sequence	pcde__sequence	200	0	\N	228	04/04/2004 11:45:26.00 EST	source	A
31	ptss	Patient Services Summary	\N	10000	ptss_year_service,ptss_serv_code,ptss_feet_code,ptss_hlfd_code	\N	ptss__sequence	ptss__sequence	ptss_year_service,ptss_serv_code,ptss_feet_code,ptss_hlfd_code	400	0	\N	229	04/04/2004 11:45:27.00 EST	source	A
31	addr	Address Book	\N	10000	order by addr__sequence	\N	addr__sequence	addr__sequence	addr__sequence	200	0	\N	230	04/04/2004 11:45:28.00 EST	source	A
31	svlt	svlt	\N	10000	order by svlt__sequence	\N	svlt__sequence	svlt__sequence	svlt__sequence	200	0	\N	231	04/04/2004 11:45:38.00 EST	source	A
2	svpf	Services performed 	\N	10	order by svpf_invc__sequence desc, svpf_date_service asc, svpf_amount desc	svpf_invc__sequence	svpf__sequence	svpf_date_service	<b>%1 %2 </b> %3 %4: Invoice #%5, svpf_date_service, svpf_serv_code,svpf_amount,svpf_desc,svpf_invc__sequence	200	0	svpf_extras.inc	160	19/10/2001 12:30:19.00 EST	source	A
2	invc	Invoices 	\N	10	order by invc__sequence		invc__sequence		Invoice <b>%1</b> : $%2 + $%3 Paid $%4 + $%5 Debtor Code: %6  Patient ID %7,invc__sequence,invc_amount,invc_gst_amount,invc_paid_amount,invc_paid_gst_amount,invc_dbtr_code,invc_patn__sequence	200	0	invc_extras.inc	145	19/10/2001 12:27:46.00 EST	source	A
2	dbtr	Debtors 	\N	100	order by dbtr_code		dbtr__sequence	dbtr_code	<b>%1</b>: %2 %3 %4, dbtr_code,dbtr_name,dbtr_address,dbtr_suburb	200	0		134	19/10/2001 12:25:38.00 EST	source	A
2	rfdr	Referrers 	\N	100	order by rfdr_code asc		rfdr__sequence	rfdr_code	<b>%1</b>: %2 %3 %4, rfdr_code,rfdr_name,rfdr_street,rfdr_suburb	200	0		157	19/10/2001 12:29:53.00 EST	source	A
2	paym	Payments Received 	\N	10	order by paym_date_entry		paym__sequence	paym__sequence	<b>%1</b>: %2 %3 $%4 %5 %6 %7,paym__sequence,paym_date_entry,paym_tdtp_code,paym_amount,paym_drawer,paym_bank,paym_branch	200	0	paym_extras.inc	153	19/10/2001 12:29:19.00 EST	source	A
2	patn	Patient Demographics 	\N	10	order by patn_psnam asc, patn_fsnam asc	patn_psnam	patn__sequence	patn_fileno	<b>%1 %2 (%3)</b><br><i>%4 %5 %6</i><br>Ref: %7(%8)<br>Ph: %9<br> Last Visit: %+1<br> Owing: %+2<br>, patn_fsnam,patn_psnam, patn_dob,patn_address, patn_suburb, patn_postcode, patn_ref_date,patn_ref_period, patn_phone, patn_last_visit, patn_amount_outstanding	200	0	patn_extras.inc	191	09/02/2002 08:01:48.00 EST	source	A
31	evnv	Appointments	\N	10000	order by evnv_patn__sequence,evnv_starttime		evnv__sequence	evnv__sequence	<b>%1 %2 (%3)</b><br><i>%4 %5 %6</i>, evnv_patn_fsnam,evnv_patn_psnam,evnv_patn_dob, evnv_patn_address,evnv_patn_suburb,evnv_patn_postcode	200	0		213	24/10/2002 04:23:38.00 EST	source	A
\.
--
-- Data for TOC Entry ID 512 (OID 17555241)
--
-- Name: mtat Type: TABLE DATA Owner: source
--


COPY "mtat"  FROM stdin;
31	patv_hlfd_desc	text	30		~*	Hlfd Desc	patv	30	130	130	10			2416	19/10/2001 12:33:38.00 EST	source	A
31	patv_hlfd_group	text	30		~*	Hlfd Group	patv	30	120	120	10			2417	19/10/2001 12:33:39.00 EST	source	A
2	patv_ins_level	char	0		~*	Insurance level	patv	3	173	173	SYSTEM			2418	19/10/2001 12:33:39.00 EST	source	A
2	patv_marital	char	0		~*	Marital Status	patv	1	0	0	SYSTEM			2419	19/10/2001 12:33:40.00 EST	source	A
2	patv_medicare	text	0		~*	Medicare Number	patv	15	10	160	40			2420	19/10/2001 12:33:40.00 EST	source	A
2	patv_phone	text	0		~*	Phone	patv	30	10	110	40			2421	19/10/2001 12:33:40.00 EST	source	A
2	patv_postcode	text	0		~*	Postcode	patv	4	10	100	40			2422	19/10/2001 12:33:41.00 EST	source	A
31	patv_prov_address	text	30		~*	Provider Address	patv	30	480	232	RO			2423	19/10/2001 12:33:41.00 EST	source	A
31	patv_prov_bank_code	text	30		~*	Provider Bank Code	patv	30	540	239	RO			2424	19/10/2001 12:33:41.00 EST	source	A
2	patv_prov_code	text	0		~*	Usual   provider (code)	patv	5	10	230	40	-		2425	19/10/2001 12:33:42.00 EST	source	A
31	patv_prov_name	text	30		~*	Provider Name	patv	30	470	231	RO			2426	19/10/2001 12:33:42.00 EST	source	A
31	patv_prov_phone	text	30		~*	Provider Phone	patv	30	530	236	RO			2427	19/10/2001 12:33:43.00 EST	source	A
31	patv_prov_postcode	text	30		~*	Provider Postcode	patv	30	510	234	RO			2428	19/10/2001 12:33:43.00 EST	source	A
31	patv_prov_provider_num	text	30		~*	Provider Provider Num	patv	30	460	238	RO			2429	19/10/2001 12:33:43.00 EST	source	A
31	patv_prov_salutation	text	30		~*	Provider Salutation	patv	30	520	237	RO			2430	19/10/2001 12:33:44.00 EST	source	A
31	patv_prov_state	text	30		~*	Provider State	patv	30	500	235	RO			2431	19/10/2001 12:33:44.00 EST	source	A
31	patv_prov_suburb	text	30		~*	Provider Suburb	patv	30	490	233	RO			2432	19/10/2001 12:33:45.00 EST	source	A
2	patv_psnam	text	0		~*	Surname	patv	25	11	30	20			2433	19/10/2001 12:33:45.00 EST	source	A
2	patv_ref_date	date	0		=	Referral date	patv	12	10	210	40	today		2434	19/10/2001 12:33:45.00 EST	source	A
2	patv_ref_period	integer	0		=	Referral period	patv	5	10	220	40	12		2435	19/10/2001 12:33:46.00 EST	source	A
2	patv_rfdr_code	text	0		~*	Usual Referrer (code)	patv	12	10	200	40			2436	19/10/2001 12:33:46.00 EST	source	A
31	patv_rfdr_index	text	30		~*	Referrer Index	patv	30	420	209	RO			2437	19/10/2001 12:33:47.00 EST	source	A
31	patv_rfdr_name	text	30		~*	Referrer Name	patv	30	340	201	RO			2438	19/10/2001 12:33:47.00 EST	source	A
31	patv_rfdr_phone	text	30		~*	Referrer Phone	patv	30	400	206	RO			2439	19/10/2001 12:33:47.00 EST	source	A
31	patv_rfdr_postcode	text	30		~*	Referrer Postcode	patv	30	370	204	RO			2440	19/10/2001 12:33:48.00 EST	source	A
31	patv_rfdr_provider	text	30		~*	Referrer Provider	patv	30	390	208	RO			2441	19/10/2001 12:33:48.00 EST	source	A
31	patv_rfdr_salutation	text	30		~*	Referrer Salutation	patv	30	410	207	RO			2442	19/10/2001 12:33:49.00 EST	source	A
31	patv_rfdr_state	text	30		~*	Referrer State	patv	30	380	205	RO			2443	19/10/2001 12:33:49.00 EST	source	A
31	patv_rfdr_street	text	30		~*	Referrer Street	patv	30	350	202	RO			2444	19/10/2001 12:33:49.00 EST	source	A
31	patv_rfdr_suburb	text	30		~*	Referrer Suburb	patv	30	360	203	RO			2445	19/10/2001 12:33:50.00 EST	source	A
2	patv_sex	char	0		~*	Gender	patv	1	0	0	SYSTEM			2446	19/10/2001 12:33:50.00 EST	source	A
31	mtfn_join	text	0	not null	~*	Foreign Primary Key	mtfn	30	50	50				158	10/10/2001 12:25:16.00 EST	source	A
31	mtfn_key	text	0	not null	~*	Foreign Key	mtfn	30	30	30				159	10/10/2001 12:25:17.00 EST	source	A
31	mtfn_master_class	text	0	not null	~*	Local Class	mtfn	20	20	20				160	10/10/2001 12:25:17.00 EST	source	A
31	mtfn_other_class	text	0	not null	~*	Foreign Class	mtfn	10	40	40				161	10/10/2001 12:25:18.00 EST	source	A
31	mtfn_view	text	0		~*	View Attribute	mtfn	30	60	60				163	10/10/2001 12:25:18.00 EST	source	A
31	mtrl_master_class	text	0		~*	Master Class	mtrl	20	20	20				170	10/10/2001 12:25:26.00 EST	source	A
31	mtrl_other_class	text	0		~*	Child Class	mtrl	10	40	40				171	10/10/2001 12:25:26.00 EST	source	A
2	patv_state	text	0		~*	State	patv	3	10	90	10	Victoria		2447	19/10/2001 12:33:50.00 EST	source	A
2	patv_suburb	text	0		~*	Suburb	patv	30	10	80	40			2448	19/10/2001 12:33:51.00 EST	source	A
2	patv_title	text	0		~*	Title	patv	6	10	50	20			2449	19/10/2001 12:33:51.00 EST	source	A
31	svpv_invc_balance	numeric	30		~*	Invc Balance	svpv	30	130	130	10			2789	09/02/2002 08:02:22.00 EST	source	A
31	svpv_invc_credits	numeric	30		~*	Invc Credits	svpv	30	120	120	10			2790	09/02/2002 08:02:22.00 EST	source	A
31	svpv_invc_date_printed	date	10		~*	Invc Date Printed	svpv	10	140	140	10			2791	09/02/2002 08:02:22.00 EST	source	A
31	svpv_invc_date_reprint	date	10		~*	Invc Date Reprint	svpv	10	150	150	10			2792	09/02/2002 08:02:22.00 EST	source	A
31	svpv_invc_gst_amount	numeric	786434		~*	Invc Gst Amount	svpv	786434	110	110	10			2793	09/02/2002 08:02:23.00 EST	source	A
31	svpv_patn__sequence	int4	10		~*	Patn  Sequence	svpv	10	80	80	10			2794	09/02/2002 08:02:23.00 EST	source	A
31	svpv_patn_address	text	30		~*	Patn Address	svpv	30	180	180	10			2795	09/02/2002 08:02:23.00 EST	source	A
31	svpv_patn_dob	text	30		~*	Patn Dob	svpv	30	230	230	10			2796	09/02/2002 08:02:23.00 EST	source	A
31	svpv_patn_healthcard	text	30		~*	Patn Healthcard	svpv	30	260	260	10			2797	09/02/2002 08:02:24.00 EST	source	A
31	svpv_patn_healthnumb	text	30		~*	Patn Healthnumb	svpv	30	240	240	10			2798	09/02/2002 08:02:24.00 EST	source	A
31	svpv_patn_hlfd_code	text	30		~*	Patn Hlfd Code	svpv	30	220	220	10			2799	09/02/2002 08:02:24.00 EST	source	A
31	svpv_patn_ins_level	bpchar	1		~*	Patn Ins Level	svpv	1	230	230	10			2800	09/02/2002 08:02:25.00 EST	source	A
31	svpv_patn_medicare	text	30		~*	Patn Medicare	svpv	30	250	250	10			2801	09/02/2002 08:02:25.00 EST	source	A
31	svpv_patn_name	text	30		~*	Patn Name	svpv	30	170	170	10			2802	09/02/2002 08:02:25.00 EST	source	A
31	svpv_patn_patf_code	text	30		~*	Patn Patf Code	svpv	30	290	290	10			2803	09/02/2002 08:02:25.00 EST	source	A
2	patv__sequence	integer	0		=	Row-ID	patv	12	0	310	SYSTEM			2385	19/10/2001 12:33:25.00 EST	source	A
2	patv__status	char	0		~*	Record status	patv	12	0	340	SYSTEM			2386	19/10/2001 12:33:26.00 EST	source	A
2	patv__timestamp	datetime	0		=	Timestamp	patv	12	0	320	SYSTEM			2387	19/10/2001 12:33:26.00 EST	source	A
2	patv__user_entry	text	0		~*	Entered by	patv	12	0	330	SYSTEM			2388	19/10/2001 12:33:27.00 EST	source	A
2	patv_aboriginality	char	0		~*	Aboriginality	patv	1	0	0	SYSTEM			2389	19/10/2001 12:33:27.00 EST	source	A
2	patv_accl_code	text	0		~*	Account type	patv	3	0	0	SYSTEM			2390	19/10/2001 12:33:28.00 EST	source	A
2	patv_accommodation	char	0		~*	Accommodation type	patv	1	0	0	SYSTEM			2391	19/10/2001 12:33:28.00 EST	source	A
2	patv_address	text	0		~*	Street	patv	30	10	70	40			2392	19/10/2001 12:33:28.00 EST	source	A
2	patv_care	char	0		~*	Care type	patv	1	0	0	SYSTEM			2393	19/10/2001 12:33:29.00 EST	source	A
2	patv_country	text	0		~*	Country of birth	patv	4	0	0	SYSTEM			2394	19/10/2001 12:33:29.00 EST	source	A
31	patv_dbtr_address	text	30		~*	Debtor Address	patv	30	220	184	RO			2395	19/10/2001 12:33:30.00 EST	source	A
2	patv_dbtr_code	text	0		~*	Usual Debtor (code)	patv	12	10	180	40			2396	19/10/2001 12:33:30.00 EST	source	A
31	patv_dbtr_name	text	30		~*	Debtor Name	patv	30	210	182	RO			2397	19/10/2001 12:33:30.00 EST	source	A
31	patv_dbtr_phone	text	30		~*	Debtor Phone	patv	30	260	189	RO			2398	19/10/2001 12:33:31.00 EST	source	A
31	patv_dbtr_postcode	text	30		~*	Debtor Postcode	patv	30	240	187	RO			2399	19/10/2001 12:33:31.00 EST	source	A
31	patv_dbtr_state	text	30		~*	Debtor State	patv	30	250	188	RO			2400	19/10/2001 12:33:32.00 EST	source	A
31	patv_dbtr_suburb	text	30		~*	Debtor Suburb	patv	30	230	186	RO			2401	19/10/2001 12:33:32.00 EST	source	A
31	crep_date_reprint	timestamp	47		~*	Invoice Reprinted	crep	10	10	220	RO			2248	19/10/2001 12:32:14.00 EST	source	A
31	patv_empl_address	text	30		~*	Employer Address	patv	30	290	282	RO			2403	19/10/2001 12:33:33.00 EST	source	A
2	patv_empl_code	text	0		~*	Usual Employer (code)	patv	12	0	280	40	-		2404	19/10/2001 12:33:33.00 EST	source	A
31	patv_empl_name	text	30		~*	Employer Name	patv	30	280	281	RO			2405	19/10/2001 12:33:34.00 EST	source	A
31	patv_empl_postcode	text	30		~*	Employer Postcode	patv	30	310	310	RO			2406	19/10/2001 12:33:34.00 EST	source	A
31	patv_empl_state	text	30		~*	Employer State	patv	30	320	320	RO			2407	19/10/2001 12:33:34.00 EST	source	A
31	patv_empl_suburb	text	30		~*	Employer Suburb	patv	30	300	283	RO			2408	19/10/2001 12:33:35.00 EST	source	A
2	patv_feet_code	text	0		~*	Fee level	patv	5	10	150	40	-		2409	19/10/2001 12:33:35.00 EST	source	A
31	patv_feet_desc	text	30		~*	Feet Desc	patv	30	170	170	10			2410	19/10/2001 12:33:36.00 EST	source	A
2	patv_flno	text	0		~*	File number	patv	10	10	45	40			2411	19/10/2001 12:33:36.00 EST	source	A
2	patv_fsnam	text	0		~*	Firstname	patv	20	12	40	20			2412	19/10/2001 12:33:37.00 EST	source	A
2	patv_healthcard	text	0		~*	Reference	patv	15	10	170	20			2413	19/10/2001 12:33:37.00 EST	source	A
2	patv_healthnumb	text	0		~*	Health Fund number	patv	30	174	174	SYSTEM			2414	19/10/2001 12:33:38.00 EST	source	A
2	patv_hlfd_code	text	0		~*	Health Fund	patv	10	172	172	40			2415	19/10/2001 12:33:38.00 EST	source	A
31	svpv_patn_postcode	text	30		~*	Patn Postcode	svpv	30	210	210	10			2804	09/02/2002 08:02:26.00 EST	source	A
31	svpv_patn_state	text	30		~*	Patn State	svpv	30	200	200	10			2805	09/02/2002 08:02:26.00 EST	source	A
31	svpv_patn_suburb	text	30		~*	Patn Suburb	svpv	30	190	190	10			2806	09/02/2002 08:02:26.00 EST	source	A
31	svpv_percentage	int4	10		~*	Percentage	svpv	10	30	30	10			2807	09/02/2002 08:02:27.00 EST	source	A
31	svpv_prov_address	text	30		~*	Prov Address	svpv	30	460	460	10			2808	09/02/2002 08:02:27.00 EST	source	A
31	svpv_prov_bank_code	text	30		~*	Prov Bank Code	svpv	30	520	520	10			2809	09/02/2002 08:02:27.00 EST	source	A
31	svpv_prov_code	text	30		~*	Prov Code	svpv	30	430	430	10			2810	09/02/2002 08:02:27.00 EST	source	A
31	svpv_prov_name	text	30		~*	Prov Name	svpv	30	450	450	10			2811	09/02/2002 08:02:28.00 EST	source	A
31	svpv_prov_phone	text	30		~*	Prov Phone	svpv	30	510	510	10			2812	09/02/2002 08:02:28.00 EST	source	A
31	svpv_prov_postcode	text	30		~*	Prov Postcode	svpv	30	490	490	10			2813	09/02/2002 08:02:28.00 EST	source	A
31	svpv_prov_provider_num	text	30		~*	Prov Provider Num	svpv	30	440	440	10			2814	09/02/2002 08:02:28.00 EST	source	A
31	svpv_prov_salutation	text	30		~*	Prov Salutation	svpv	30	500	500	10			2815	09/02/2002 08:02:29.00 EST	source	A
31	svpv_prov_state	text	30		~*	Prov State	svpv	30	480	480	10			2816	09/02/2002 08:02:29.00 EST	source	A
31	svpv_prov_suburb	text	30		~*	Prov Suburb	svpv	30	470	470	10			2817	09/02/2002 08:02:29.00 EST	source	A
31	svpv_rfdr_code	text	30		~*	Rfdr Code	svpv	30	250	250	10			2818	09/02/2002 08:02:30.00 EST	source	A
31	svpv_rfdr_date	date	10		~*	Rfdr Date	svpv	10	160	160	10			2819	09/02/2002 08:02:30.00 EST	source	A
31	svpv_rfdr_index	text	30		~*	Rfdr Index	svpv	30	340	340	10			2820	09/02/2002 08:02:30.00 EST	source	A
31	svpv_rfdr_name	text	30		~*	Rfdr Name	svpv	30	250	250	10			2821	09/02/2002 08:02:30.00 EST	source	A
31	svpv_rfdr_phone	text	30		~*	Rfdr Phone	svpv	30	320	320	10			2822	09/02/2002 08:02:31.00 EST	source	A
31	svpv_rfdr_postcode	text	30		~*	Rfdr Postcode	svpv	30	290	290	10			2823	09/02/2002 08:02:31.00 EST	source	A
31	svpv_rfdr_provider	text	30		~*	Rfdr Provider	svpv	30	260	260	10			2824	09/02/2002 08:02:31.00 EST	source	A
31	svpv_rfdr_salutation	text	30		~*	Rfdr Salutation	svpv	30	330	330	10			2825	09/02/2002 08:02:32.00 EST	source	A
31	svpv_rfdr_state	text	30		~*	Rfdr State	svpv	30	300	300	10			2826	09/02/2002 08:02:32.00 EST	source	A
31	svpv_rfdr_street	text	30		~*	Rfdr Street	svpv	30	270	270	10			2827	09/02/2002 08:02:32.00 EST	source	A
31	svpv_rfdr_suburb	text	30		~*	Rfdr Suburb	svpv	30	280	280	10			2828	09/02/2002 08:02:32.00 EST	source	A
31	svpv_serv_code	text	30		~*	Serv Code	svpv	30	20	20	10			2829	09/02/2002 08:02:33.00 EST	source	A
31	svpv_total_amount	numeric	30		~*	Total Amount	svpv	30	70	70	10			2830	09/02/2002 08:02:33.00 EST	source	A
31	dbtr_group	text	30	\N	~*	Group	dbtr	30	80	80	10			2831	09/02/2002 08:14:36.00 EST	source	A
31	dbtr_last_statement	timestamp	47	\N	~*	Last Statement	dbtr	47	90	90	10			2832	09/02/2002 08:14:36.00 EST	source	A
31	dbtr_delay_statement	interval	47	\N	~*	Delay Statement	dbtr	47	100	100	10			2833	09/02/2002 08:14:36.00 EST	source	A
31	surg__sequence	int4	10		~*	Sequence	surg	10	80	80	SYSTEM			2742	09/02/2002 08:02:05.00 EST	source	A
31	surg__status	bpchar	1		~*	Status	surg	1	110	110	SYSTEM			2743	09/02/2002 08:02:05.00 EST	source	A
31	surg__timestamp	timestamp	47		~*	Timestamp	surg	47	90	90	SYSTEM			2744	09/02/2002 08:02:05.00 EST	source	A
31	surg__user_entry	text	30		~*	User Entry	surg	30	100	100	SYSTEM			2745	09/02/2002 08:02:05.00 EST	source	A
31	surg_diag_codes	text	30		~*	Diagnosis Codes	surg	30	20	20	10			2746	09/02/2002 08:02:06.00 EST	source	A
31	surg_diagnosis	text	30		~*	Diagnosis - Text	surg	30	30	30	10			2747	09/02/2002 08:02:06.00 EST	source	A
31	surg_operation	text	30		~*	Operation Text	surg	30	50	50	10			2748	09/02/2002 08:02:06.00 EST	source	A
31	surg_oprn_codes	text	30		~*	Operation Codes	surg	30	40	40	10			2749	09/02/2002 08:02:07.00 EST	source	A
31	surg_oprn_date	timestamp	47		~*	Operation Date	surg	47	60	60	10			2750	09/02/2002 08:02:07.00 EST	source	A
31	surg_oprn_place	text	30		~*	Operation Place	surg	30	70	70	10			2751	09/02/2002 08:02:07.00 EST	source	A
31	surg_patn__sequence	int4	10		~*	Patient ID	surg	10	10	10	RO			2752	09/02/2002 08:02:07.00 EST	source	A
31	surv__sequence	int4	10		~*	Sequence	surv	10	180	180	SYSTEM			2753	09/02/2002 08:02:10.00 EST	source	A
31	surv__status	bpchar	1		~*	Status	surv	1	210	210	SYSTEM			2754	09/02/2002 08:02:10.00 EST	source	A
31	surv__timestamp	timestamp	47		~*	Timestamp	surv	47	190	190	RO			2755	09/02/2002 08:02:10.00 EST	source	A
31	surv__user_entry	text	30		~*	User Entry	surv	30	200	200	SYSTEM			2756	09/02/2002 08:02:11.00 EST	source	A
31	surv_diag_codes	text	30		~*	Diag Codes	surv	30	120	120	RO			2757	09/02/2002 08:02:11.00 EST	source	A
31	dbst_date_reprint	date	10		~*	Date Reprint	dbst	10	220	220	10			2277	19/10/2001 12:32:29.00 EST	source	A
31	dbst_dbtr_code	text	30		~*	Dbtr Code	dbst	30	10	10	10			2278	19/10/2001 12:32:29.00 EST	source	A
31	dbst_feet_code	text	30		~*	Feet Code	dbst	30	150	150	10			2279	19/10/2001 12:32:30.00 EST	source	A
31	dbst_invc__sequence	int4	10		~*	Invc  Sequence	dbst	10	160	160	10			2280	19/10/2001 12:32:30.00 EST	source	A
31	dbst_name	text	30		~*	Name	dbst	30	20	20	10			2281	19/10/2001 12:32:30.00 EST	source	A
31	dbst_paid	numeric	30		~*	Paid	dbst	30	180	180	10			2282	19/10/2001 12:32:31.00 EST	source	A
31	dbst_patient	text	30		=	Patient	dbst	30	500	75	10			2283	19/10/2001 12:32:31.00 EST	source	A
31	dbst_period	int4	10		~*	Period	dbst	10	200	200	10			2284	19/10/2001 12:32:31.00 EST	source	A
31	dbst_phone	text	30		~*	Phone	dbst	30	70	70	10			2285	19/10/2001 12:32:32.00 EST	source	A
31	dbst_postcode	text	30		~*	Postcode	dbst	30	50	50	10			2286	19/10/2001 12:32:32.00 EST	source	A
31	dbst_state	text	30		~*	State	dbst	30	60	60	10			2287	19/10/2001 12:32:33.00 EST	source	A
31	dbst_suburb	text	30		~*	Suburb	dbst	30	40	40	10			2288	19/10/2001 12:32:33.00 EST	source	A
31	dbst_total_balance	numeric	30		~*	Total Balance	dbst	30	90	90	10			2289	19/10/2001 12:32:33.00 EST	source	A
31	dbag__sequence	int4	10		~*	Sequence	dbag	10	140	140	SYSTEM			2290	19/10/2001 12:32:37.00 EST	source	A
31	dbag__status	bpchar	1		~*	Status	dbag	1	170	170	SYSTEM			2291	19/10/2001 12:32:37.00 EST	source	A
31	dbag__timestamp	timestamp	47		~*	Timestamp	dbag	47	150	150	SYSTEM			2292	19/10/2001 12:32:38.00 EST	source	A
31	dbag__user_entry	text	30		~*	User Entry	dbag	30	160	160	SYSTEM			2293	19/10/2001 12:32:38.00 EST	source	A
31	dbag_address	text	30		~*	Address	dbag	30	30	30	10			2294	19/10/2001 12:32:39.00 EST	source	A
31	dbag_balance_0	numeric	30		~*	Balance 0	dbag	30	90	90	10			2295	19/10/2001 12:32:39.00 EST	source	A
31	dbag_balance_120	numeric	30		~*	Balance 120	dbag	30	130	130	10			2296	19/10/2001 12:32:39.00 EST	source	A
31	dbag_balance_30	numeric	30		~*	Balance 30	dbag	30	100	100	10			2297	19/10/2001 12:32:40.00 EST	source	A
31	dbag_balance_60	numeric	30		~*	Balance 60	dbag	30	110	110	10			2298	19/10/2001 12:32:40.00 EST	source	A
31	dbag_balance_90	numeric	30		~*	Balance 90	dbag	30	120	120	10			2299	19/10/2001 12:32:41.00 EST	source	A
31	dbag_dbtr_code	text	30		~*	Dbtr Code	dbag	30	10	10	10			2300	19/10/2001 12:32:41.00 EST	source	A
31	dbag_name	text	30		~*	Name	dbag	30	20	20	10			2301	19/10/2001 12:32:41.00 EST	source	A
31	dbag_phone	text	30		~*	Phone	dbag	30	70	70	10			2302	19/10/2001 12:32:42.00 EST	source	A
31	dbag_postcode	text	30		~*	Postcode	dbag	30	50	50	10			2303	19/10/2001 12:32:42.00 EST	source	A
31	dbag_state	text	30		~*	State	dbag	30	60	60	10			2304	19/10/2001 12:32:42.00 EST	source	A
31	dbag_suburb	text	30		~*	Suburb	dbag	30	40	40	10			2305	19/10/2001 12:32:43.00 EST	source	A
31	dbag_total_balance	numeric	30		~*	Total Balance	dbag	30	80	80	10			2306	19/10/2001 12:32:43.00 EST	source	A
31	cnrv__sequence	int4	10		~*	Sequence	cnrv	10	130	130	SYSTEM			2307	19/10/2001 12:32:47.00 EST	source	A
31	cnrv__status	bpchar	1		~*	Status	cnrv	1	160	160	SYSTEM			2308	19/10/2001 12:32:47.00 EST	source	A
31	cnrv__timestamp	timestamp	47		~*	Timestamp	cnrv	47	140	140	SYSTEM			2309	19/10/2001 12:32:48.00 EST	source	A
31	cnrv__user_entry	text	30		~*	User Entry	cnrv	30	150	150	SYSTEM			2310	19/10/2001 12:32:48.00 EST	source	A
31	cnrv_amount	numeric	786434		~*	Total Amount	cnrv	786434	30	30	10			2311	19/10/2001 12:32:48.00 EST	source	A
31	cnrv_balance	numeric	786434		~*	Balance	cnrv	786434	110	110	RO			2312	19/10/2001 12:32:49.00 EST	source	A
31	cnrv_count	int4	10		~*	# Payments	cnrv	10	50	50	10			2313	19/10/2001 12:32:49.00 EST	source	A
31	cnrv_end_date	text	30		~*	Final payment date	cnrv	30	120	120	RO			2314	19/10/2001 12:32:50.00 EST	source	A
31	cnrv_first_installment	numeric	786434		~*	First amount	cnrv	786434	80	80	10			2315	19/10/2001 12:32:50.00 EST	source	A
31	cnrv_last_date	text	30		~*	Last paid date	cnrv	30	100	100	RO			2316	19/10/2001 12:32:50.00 EST	source	A
31	cnrv_other_installment	numeric	786434		~*	Other amounts	cnrv	786434	90	90	10			2317	19/10/2001 12:32:51.00 EST	source	A
31	cnrv_patient_name	text	30		~*	Patient Name	cnrv	30	20	125	RO			2318	19/10/2001 12:32:51.00 EST	source	A
31	cnrv_patn__sequence	int4	10		~*	ID	cnrv	10	10	128	RO			2319	19/10/2001 12:32:52.00 EST	source	A
31	cnrv_serv_code	text	30		~*	Service Code	cnrv	30	70	70	10			2320	19/10/2001 12:32:52.00 EST	source	A
31	cnrv_start_date	text	30		~*	Start Date	cnrv	30	60	60	10			2321	19/10/2001 12:32:52.00 EST	source	A
31	ctrv_period	interval	47		~*	Period	cnrv	47	40	40	10			2322	19/10/2001 12:32:53.00 EST	source	A
31	surv_diagnosis	text	30		~*	Diagnosis	surv	30	130	130	RO			2758	09/02/2002 08:02:11.00 EST	source	A
31	fept_amount	numeric	786434		~*	Amount	fept	786434	40	40	RO			2232	19/10/2001 12:32:04.00 EST	source	A
31	fept_desc	text	30		~*	Description	fept	30	60	60	RO			2233	19/10/2001 12:32:04.00 EST	source	A
31	fept_feet_code	text	30		~*	Feet Code	fept	30	10	10	RO			2234	19/10/2001 12:32:04.00 EST	source	A
31	fept_gst_amount	numeric	30		~*	GST Amount	fept	30	50	50	RO			2235	19/10/2001 12:32:05.00 EST	source	A
31	fept_gst_percentage	int4	10		~*	GST Percentage	fept	10	30	30	RO			2236	19/10/2001 12:32:06.00 EST	source	A
31	fept_serv_code	text	30		~*	Serv Code	fept	30	20	20	RO			2237	19/10/2001 12:32:06.00 EST	source	A
31	crep__sequence	int4	10		~*	Credit ID	crep	10	10	1000	RO			2238	19/10/2001 12:32:09.00 EST	source	A
31	crep__status	bpchar	1		~*	Status	crep	10	10	1010	SYSTEM			2239	19/10/2001 12:32:10.00 EST	source	A
31	crep__timestamp	timestamp	47		~*	Timestamp	crep	10	10	1020	SYSTEM			2240	19/10/2001 12:32:10.00 EST	source	A
31	crep__user_entry	text	30		~*	User Entry	crep	10	10	1030	SYSTEM			2241	19/10/2001 12:32:11.00 EST	source	A
31	crep_amount	numeric	786434		~*	Invoice Amount	crep	10	10	40	RO			2242	19/10/2001 12:32:11.00 EST	source	A
31	crep_bank_code	text	30		~*	Invoice Bank Code	crep	10	10	400	RO			2243	19/10/2001 12:32:12.00 EST	source	A
31	crep_cred_amount	numeric	786434		~*	Credit Amount	crep	10	10	20	10			2244	19/10/2001 12:32:12.00 EST	source	A
31	crep_cred_gst_amount	numeric	786434		~*	Credit GST Amount	crep	10	10	30	10			2245	19/10/2001 12:32:12.00 EST	source	A
31	crep_rfdr_date	timestamp	47		~*	Invoice Referral Date	crep	10	10	470	RO			2261	19/10/2001 12:32:19.00 EST	source	A
31	ssms_date_service	timestamp	1		~*	Date of service	ssms	10	10	10	RO			2188	19/10/2001 12:31:29.00 EST	source	A
31	crev_date_entry	timestamp	47		~*	Date Entered	crev	10	10	10	10			2220	19/10/2001 12:31:55.00 EST	source	A
31	crep_dbtr_code	text	30		~*	Invoice Debtor Code	crep	10	10	410	RO			2249	19/10/2001 12:32:14.00 EST	source	A
31	crep_empl_code	text	30		~*	Invoice Employer Code	crep	10	10	420	RO			2250	19/10/2001 12:32:14.00 EST	source	A
31	crep_feet_code	text	30		~*	Invoice Fee Level	crep	10	10	430	RO			2251	19/10/2001 12:32:15.00 EST	source	A
31	crep_gst_amount	numeric	786434		~*	Invoice GST 	crep	10	10	110	RO			2252	19/10/2001 12:32:15.00 EST	source	A
31	crep_invc__sequence	int4	10		~*	Invoice Number	crep	10	10	10	10			2253	19/10/2001 12:32:15.00 EST	source	A
31	crep_invc_balance	numeric	30		~*	Invoice Balance	crep	10	10	140	RO			2254	19/10/2001 12:32:16.00 EST	source	A
31	crep_paid_amount	numeric	786434		~*	Invoice Amount Paid	crep	10	10	120	RO			2255	19/10/2001 12:32:16.00 EST	source	A
31	crep_paid_gst_amount	numeric	786434		~*	Invoice GST Amount Paid	crep	10	10	130	RO			2256	19/10/2001 12:32:17.00 EST	source	A
31	crep_patn__sequence	int4	10		~*	Patient ID	crep	10	10	440	RO			2257	19/10/2001 12:32:17.00 EST	source	A
31	crep_paym__sequence	int4	10		~*	Payment ID	crep	10	10	500	RO			2258	19/10/2001 12:32:18.00 EST	source	A
31	crep_prov_code	text	30		~*	Invoice Provider Code	crep	10	10	450	RO			2259	19/10/2001 12:32:18.00 EST	source	A
31	crep_rfdr_code	text	30		~*	Invoice Referror Code	crep	10	10	460	RO			2260	19/10/2001 12:32:18.00 EST	source	A
2	agdi_date_printed	timestamp	1		=	Printed	agdi	10	40	40	RO			2134	19/10/2001 12:30:41.00 EST	source	A
31	crep_rfdr_period	text	30		~*	Invoice Referral Period	crep	10	10	480	RO			2262	19/10/2001 12:32:19.00 EST	source	A
31	dbst__sequence	int4	10		~*	Sequence	dbst	10	230	230	SYSTEM			2263	19/10/2001 12:32:23.00 EST	source	A
31	dbst__status	bpchar	1		~*	Status	dbst	1	260	260	SYSTEM			2264	19/10/2001 12:32:24.00 EST	source	A
31	dbst__timestamp	timestamp	47		~*	Timestamp	dbst	47	240	240	SYSTEM			2265	19/10/2001 12:32:24.00 EST	source	A
31	dbst__user_entry	text	30		~*	User Entry	dbst	30	250	250	SYSTEM			2266	19/10/2001 12:32:24.00 EST	source	A
31	dbst_address	text	30		~*	Address	dbst	30	30	30	10			2267	19/10/2001 12:32:25.00 EST	source	A
31	dbst_amount	numeric	30		~*	Amount	dbst	30	170	170	10			2268	19/10/2001 12:32:25.00 EST	source	A
31	dbst_balance	numeric	30		~*	Balance	dbst	30	190	190	10			2269	19/10/2001 12:32:26.00 EST	source	A
31	dbst_balance_0	numeric	30		~*	Balance 0	dbst	30	100	100	10			2270	19/10/2001 12:32:26.00 EST	source	A
31	dbst_balance_120	numeric	30		~*	Balance 120	dbst	30	140	140	10			2271	19/10/2001 12:32:26.00 EST	source	A
31	dbst_balance_30	numeric	30		~*	Balance 30	dbst	30	110	110	10			2272	19/10/2001 12:32:27.00 EST	source	A
31	dbst_balance_60	numeric	30		~*	Balance 60	dbst	30	120	120	10			2273	19/10/2001 12:32:27.00 EST	source	A
31	dbst_balance_90	numeric	30		~*	Balance 90	dbst	30	130	130	10			2274	19/10/2001 12:32:28.00 EST	source	A
31	dbst_date	date	10		~*	Date	dbst	10	80	80	10			2275	19/10/2001 12:32:28.00 EST	source	A
31	dbst_date_printed	date	10		~*	Date Printed	dbst	10	210	210	10			2276	19/10/2001 12:32:28.00 EST	source	A
31	ssms__timestamp	timestamp	1		~*	Timestamp	ssms	30	10	0	SYSTEM			2185	19/10/2001 12:31:28.00 EST	source	A
31	ssms__user_entry	name	1		~*	Entered by	ssms	10	10	0	RO			2186	19/10/2001 12:31:28.00 EST	source	A
31	ssms_amount	numeric	1		~*	Fee	ssms	10	10	40	RO			2187	19/10/2001 12:31:29.00 EST	source	A
2	agdi_date_reprint	timestamp	1		=	Reprinted	agdi	10	50	50	RO			2135	19/10/2001 12:30:42.00 EST	source	A
31	ssms_gst_amount	numeric	1		~*	GST	ssms	10	10	50	RO			2189	19/10/2001 12:31:29.00 EST	source	A
31	ssms_month	text	1		~*	Month	ssms	10	10	60	RO			2190	19/10/2001 12:31:30.00 EST	source	A
31	ssms_serv_code	text	1		~*	Code	ssms	10	10	20	RO			2191	19/10/2001 12:31:30.00 EST	source	A
31	ssms_total_amount	numeric	1		~*	Total	ssms	10	10	30	RO			2192	19/10/2001 12:31:31.00 EST	source	A
31	ssmp__sequence	int4	1		~*	Sequence	ssmp	10	10	0	SYSTEM			2193	19/10/2001 12:31:35.00 EST	source	A
31	ssmp__status	text	1		~*	Status	ssmp	10	10	0	SYSTEM			2194	19/10/2001 12:31:36.00 EST	source	A
31	ssmp__timestamp	timestamp	1		~*	Timestamp	ssmp	10	10	0	SYSTEM			2195	19/10/2001 12:31:36.00 EST	source	A
31	ssmp__user_entry	name	1		~*	Entered by	ssmp	10	10	0	RO			2196	19/10/2001 12:31:36.00 EST	source	A
31	ssmp_amount	numeric	1		~*	Amount	ssmp	10	10	30	RO			2197	19/10/2001 12:31:37.00 EST	source	A
31	ssmp_count	int4	1		~*	Count	ssmp	10	10	20	RO			2198	19/10/2001 12:31:37.00 EST	source	A
2	ssmp_gst_amount	numeric(12,2)	1		=	GST	ssmp	10	10	40	RO			2199	19/10/2001 12:31:38.00 EST	source	A
31	ssmp_month	text	1		~*	Month	ssmp	30	10	10	RO			2200	19/10/2001 12:31:38.00 EST	source	A
2	ssmp_total_amount	numeric(12,2)	1		=	Total	ssmp	10	10	50	RO			2201	19/10/2001 12:31:38.00 EST	source	A
31	ssmc__sequence	int4	1		~*	Sequence	ssmc	10	10	0	SYSTEM			2202	19/10/2001 12:31:43.00 EST	source	A
31	ssmc__status	text	1		~*	Status	ssmc	10	10	0	SYSTEM			2203	19/10/2001 12:31:43.00 EST	source	A
31	ssmc__timestamp	timestamp	1		~*	Timestamp	ssmc	10	10	0	SYSTEM			2204	19/10/2001 12:31:44.00 EST	source	A
31	ssmc__user_entry	name	1		~*	Entered By	ssmc	10	10	0	RO			2205	19/10/2001 12:31:44.00 EST	source	A
31	ssmc_amount	numeric	1		~*	Amount	ssmc	10	10	30	RO			2206	19/10/2001 12:31:45.00 EST	source	A
31	ssmc_count	int4	1		~*	Count	ssmc	10	10	20	RO			2207	19/10/2001 12:31:45.00 EST	source	A
2	ssmc_gst_amount	numeric(12,2)	1		=	GST	ssmc	10	10	40	RO			2208	19/10/2001 12:31:45.00 EST	source	A
2	ssmc_month	text	1		~*	Month	ssmc	10	5	5	RO			2209	19/10/2001 12:31:46.00 EST	source	A
31	ssmc_serv_code	text	1		~*	Code	ssmc	10	10	10	RO			2210	19/10/2001 12:31:46.00 EST	source	A
2	ssmc_total_amount	numeric(12,2)	1		=	Total	ssmc	10	10	50	RO			2211	19/10/2001 12:31:47.00 EST	source	A
31	crev__sequence	int4	10		~*	Sequence	crev	10	10	1010	SYSTEM			2212	19/10/2001 12:31:51.00 EST	source	A
31	crev__status	bpchar	1		~*	Status	crev	10	10	1020	SYSTEM			2213	19/10/2001 12:31:52.00 EST	source	A
31	crev__timestamp	timestamp	47		~*	Timestamp	crev	10	10	1030	SYSTEM			2214	19/10/2001 12:31:52.00 EST	source	A
31	crev__user_entry	text	30		~*	User Entry	crev	10	10	1040	SYSTEM			2215	19/10/2001 12:31:53.00 EST	source	A
31	crev_bank	text	30		~*	Bank	crev	10	10	110	10			2216	19/10/2001 12:31:53.00 EST	source	A
31	crev_branch	text	30		~*	Branch	crev	10	10	120	10			2217	19/10/2001 12:31:53.00 EST	source	A
31	crev_cred_amount	numeric	786434		~*	Credit Amount	crev	10	10	20	10			2218	19/10/2001 12:31:54.00 EST	source	A
31	crev_cred_gst_amount	numeric	786434		~*	Credit GST Amount	crev	10	10	30	10			2219	19/10/2001 12:31:54.00 EST	source	A
31	surv_dob	text	30		~*	Dob	surv	30	50	50	RO			2759	09/02/2002 08:02:11.00 EST	source	A
31	crev_drawer	text	30		~*	Drawer	crev	10	10	100	10			2221	19/10/2001 12:31:55.00 EST	source	A
31	crev_invc__sequence	int4	10		~*	Invoice Number	crev	10	10	50	RO			2222	19/10/2001 12:31:55.00 EST	source	A
31	crev_invc_balance	text	1		=	Balance	crev	10	500	55	RO			2223	19/10/2001 12:31:56.00 EST	source	A
31	crev_paym_amount	numeric	786434		~*	Payment Amount	crev	10	10	130	RO			2224	19/10/2001 12:31:56.00 EST	source	A
31	crev_site_entry	text	30		~*	Site Entered	crev	10	10	90	10			2225	19/10/2001 12:31:57.00 EST	source	A
31	crev_tdtp_code	text	30		~*	Tender Type	crev	10	10	95	FSL=20			2226	19/10/2001 12:31:57.00 EST	source	A
31	crev_user_entry	text	30		~*	Entered By	crev	10	10	140	RO			2227	19/10/2001 12:31:57.00 EST	source	A
31	fept__sequence	int4	10		~*	Sequence	fept	10	70	70	SYSTEM			2228	19/10/2001 12:32:02.00 EST	source	A
31	fept__status	text	30		~*	Status	fept	30	100	100	SYSTEM			2229	19/10/2001 12:32:02.00 EST	source	A
31	fept__timestamp	timestamp	47		~*	Timestamp	fept	47	80	80	SYSTEM			2230	19/10/2001 12:32:03.00 EST	source	A
31	fept__user_entry	name	32		~*	User Entry	fept	32	90	90	SYSTEM			2231	19/10/2001 12:32:03.00 EST	source	A
2	agdi_feet_code	text	1		~*	Fee Type	agdi	20	15	15	RO			2138	19/10/2001 12:30:43.00 EST	source	A
2	agdi_invc__sequence	integer	1		=	Invoice	agdi	10	35	35	RO			2139	19/10/2001 12:30:43.00 EST	source	A
31	agdi_patient	text	1		=	Patient	agdi	30	14	14	RO			2140	19/10/2001 12:30:44.00 EST	source	A
2	agdi_period	interval	1		~*	Period - days	agdi	10	10	20	RO			2141	19/10/2001 12:30:44.00 EST	source	A
31	agdd__sequence	int4	1		~*	Row-ID	agdd	10	0	0	SYSTEM			2142	19/10/2001 12:30:50.00 EST	source	A
31	agdd__status	bpchar	1		~*	Status	agdd	1	0	0	SYSTEM			2143	19/10/2001 12:30:51.00 EST	source	A
31	agdd__timestamp	timestamp	1		~*	Timestamp	agdd	30	0	0	SYSTEM			2144	19/10/2001 12:30:51.00 EST	source	A
31	agdd__user_entry	text	1		~*	Created by	agdd	10	0	0	RO			2145	19/10/2001 12:30:51.00 EST	source	A
2	agdd_amount	numeric(12,2)	1		=	Unpaid	agdd	10	20	20	RO			2146	19/10/2001 12:30:52.00 EST	source	A
2	agdd_count	integer	1		=	Count	agdd	10	30	30	RO			2147	19/10/2001 12:30:52.00 EST	source	A
2	agdd_dbtr_code	text	1		~*	Debtor	agdd	10	10	10	RO			2148	19/10/2001 12:30:53.00 EST	source	A
2	agdd_dbtr_name	text	1		~*	Name	agdd	30	12	12	RO			2149	19/10/2001 12:30:53.00 EST	source	A
31	agdp__sequence	int4	1		~*	Row-ID	agdp	10	0	0	SYSTEM			2150	19/10/2001 12:30:58.00 EST	source	A
31	agdp__status	bpchar	1		~*	Status	agdp	1	0	0	SYSTEM			2151	19/10/2001 12:30:58.00 EST	source	A
31	agdp__timestamp	timestamp	1		~*	Timestamp	agdp	30	0	0	SYSTEM			2152	19/10/2001 12:30:59.00 EST	source	A
31	agdp__user_entry	text	1		~*	Created by	agdp	10	0	0	RO			2153	19/10/2001 12:30:59.00 EST	source	A
2	agdp_amount	numeric(12,2)	1		=	Unpaid	agdp	10	20	20	RO			2154	19/10/2001 12:30:59.00 EST	source	A
2	agdp_count	integer	1		=	Count	agdp	10	30	30	RO			2155	19/10/2001 12:31:00.00 EST	source	A
2	agdp_period	integer	1		~*	Period - days	agdp	10	10	10	RO			2156	19/10/2001 12:31:00.00 EST	source	A
31	agdt__sequence	int4	1		~*	Row-ID	agdt	10	0	0	SYSTEM			2157	19/10/2001 12:31:04.00 EST	source	A
31	agdt__status	bpchar	1		~*	Status	agdt	1	0	0	SYSTEM			2158	19/10/2001 12:31:05.00 EST	source	A
31	agdt__timestamp	timestamp	1		~*	Timestamp	agdt	30	0	0	SYSTEM			2159	19/10/2001 12:31:05.00 EST	source	A
31	agdt__user_entry	text	1		~*	Created by	agdt	10	0	0	RO			2160	19/10/2001 12:31:06.00 EST	source	A
2	agdt_amount	numeric(12,2)	1		=	Unpaid	agdt	10	20	20	RO			2161	19/10/2001 12:31:06.00 EST	source	A
2	agdt_count	integer	1		=	Count	agdt	10	30	30	RO			2162	19/10/2001 12:31:07.00 EST	source	A
2	agdt_feet_code	text	1		~*	Fee type	agdt	10	10	10	RO			2163	19/10/2001 12:31:07.00 EST	source	A
31	pmsc__sequence	int4	1		~*	Sequence	pmsc	10	10	0	SYSTEM			2164	19/10/2001 12:31:11.00 EST	source	A
31	pmsc__status	text	1		~*	Status	pmsc	10	10	0	SYSTEM			2165	19/10/2001 12:31:12.00 EST	source	A
31	pmsc__timestamp	timestamp	1		~*	Date	pmsc	10	10	10	SYSTEM			2166	19/10/2001 12:31:12.00 EST	source	A
31	pmsc__user_entry	name	1		~*	Entered by	pmsc	10	10	0	RO			2167	19/10/2001 12:31:13.00 EST	source	A
31	pmsc_amount	numeric	1		~*	Amount	pmsc	10	10	20	RO			2168	19/10/2001 12:31:13.00 EST	source	A
31	pmsc_gst_amount	numeric	1		~*	GST	pmsc	10	10	30	RO			2169	19/10/2001 12:31:13.00 EST	source	A
31	pmsc_invc__sequence	int4	1		~*	Invoice	pmsc	10	10	60	RO			2170	19/10/2001 12:31:14.00 EST	source	A
31	pmsc_month	text	1		~*	Month	pmsc	10	10	70	RO			2171	19/10/2001 12:31:14.00 EST	source	A
31	pmsc_paym__sequence	int4	1		~*	Payment #	pmsc	10	10	50	RO			2172	19/10/2001 12:31:15.00 EST	source	A
31	pmsc_total_amount	numeric	1		~*	Total Amount	pmsc	10	10	40	RO			2173	19/10/2001 12:31:15.00 EST	source	A
31	pmsp__sequence	int4	1		~*	Sequence	pmsp	10	10	0	SYSTEM			2174	19/10/2001 12:31:20.00 EST	source	A
31	pmsp__status	text	1		~*	Status	pmsp	10	10	0	SYSTEM			2175	19/10/2001 12:31:20.00 EST	source	A
31	pmsp__timestamp	timestamp	1		~*	Timestamp	pmsp	10	10	0	SYSTEM			2176	19/10/2001 12:31:20.00 EST	source	A
31	pmsp__user_entry	name	1		~*	Entered by	pmsp	10	10	0	RO			2177	19/10/2001 12:31:21.00 EST	source	A
31	pmsp_amount	numeric	1		~*	Amount	pmsp	10	10	30	RO			2178	19/10/2001 12:31:21.00 EST	source	A
31	pmsp_count	int4	1		~*	Count	pmsp	10	10	20	RO			2179	19/10/2001 12:31:22.00 EST	source	A
31	pmsp_gst_amount	numeric	1		~*	GST	pmsp	10	10	40	RO			2180	19/10/2001 12:31:22.00 EST	source	A
31	pmsp_month	text	1		~*	Month	pmsp	10	10	10	RO			2181	19/10/2001 12:31:22.00 EST	source	A
31	pmsp_total_amount	numeric	1		~*	Total	pmsp	10	10	50	RO			2182	19/10/2001 12:31:23.00 EST	source	A
31	ssms__sequence	int4	1		~*	Sequence	ssms	10	10	0	SYSTEM			2183	19/10/2001 12:31:27.00 EST	source	A
31	ssms__status	text	1		~*	Status	ssms	1	10	0	SYSTEM			2184	19/10/2001 12:31:27.00 EST	source	A
2	serv_code	text	0		~*	Code	serv	30	10	10	10			2093	19/10/2001 12:30:06.00 EST	source	A
2	serv_desc	text	0		~*	Description	serv	30	10	30	10			2094	19/10/2001 12:30:06.00 EST	source	A
2	serv_gst_percentage	float	0		=	GST %	serv	5	25	25	SELECT=0,0%;10,10%			2095	19/10/2001 12:30:07.00 EST	source	A
2	serv_value	integer	0		=	Unit Value	serv	30	10	20	10	1		2096	19/10/2001 12:30:07.00 EST	source	A
2	stts__sequence	integer	0		=	Row-ID	stts	30	0	200	SYSTEM			2097	19/10/2001 12:30:13.00 EST	source	A
2	stts__status	char	0		~*	Record status	stts	30	0	230	SYSTEM			2098	19/10/2001 12:30:13.00 EST	source	A
2	stts__timestamp	datetime	0		=	Timestamp	stts	30	0	210	SYSTEM			2099	19/10/2001 12:30:14.00 EST	source	A
2	stts__user_entry	text	0		~*	Entered by	stts	30	0	220				2100	19/10/2001 12:30:14.00 EST	source	A
2	stts_accom_type	text	0		~*	Accommodation type	stts	30	10	40	10			2101	19/10/2001 12:30:15.00 EST	source	A
2	stts_account_class	text	0		~*	Account class	stts	30	10	30	10			2102	19/10/2001 12:30:15.00 EST	source	A
2	stts_care_type	text	0		~*	Care type	stts	30	10	50	10			2103	19/10/2001 12:30:15.00 EST	source	A
2	stts_epsdserl	integer	0		=	Episode serial number	stts	30	10	10	10			2104	19/10/2001 12:30:16.00 EST	source	A
2	stts_start_date	date	0		=	Status date	stts	30	10	20	10			2105	19/10/2001 12:30:16.00 EST	source	A
31	tdtp__sequence	int4	1		~*	tdtp__sequence	tdtp	10	0	0	SYSTEM			2119	19/10/2001 12:30:31.00 EST	source	A
31	tdtp__status	bpchar	1		~*	tdtp__status	tdtp	10	0	0	SYSTEM			2120	19/10/2001 12:30:32.00 EST	source	A
31	tdtp__timestamp	datetime	1		~*	tdtp__timestamp	tdtp	10	0	0	SYSTEM			2121	19/10/2001 12:30:32.00 EST	source	A
31	tdtp__user_entry	text	1		~*	tdtp__user_entry	tdtp	10	0	0	RO			2122	19/10/2001 12:30:32.00 EST	source	A
31	tdtp_code	text	1		~*	Code	tdtp	5	5	5	10			2123	19/10/2001 12:30:33.00 EST	source	A
31	tdtp_desc	text	1		~*	Description	tdtp	30	10	10	10	New Tender Type		2124	19/10/2001 12:30:33.00 EST	source	A
2	tdtp_entity	text	1		~*	Entity	tdtp	30	30	30	10			2125	19/10/2001 12:30:34.00 EST	source	A
2	tdtp_list	text	1		~*	Listing group	tdtp	30	50	50		New Listing Group		2126	19/10/2001 12:30:34.00 EST	source	A
2	tdtp_location	text	1		~*	Location	tdtp	30	40	40	10			2127	19/10/2001 12:30:34.00 EST	source	A
2	tdtp_subtotal	text	1		~*	Subtotal Group	tdtp	30	60	60		New Subtotal Group		2128	19/10/2001 12:30:35.00 EST	source	A
31	agdi__sequence	int4	1		~*	Row-ID	agdi	10	0	0	SYSTEM			2129	19/10/2001 12:30:39.00 EST	source	A
31	agdi__status	bpchar	1		~*	Status	agdi	1	0	0	SYSTEM			2130	19/10/2001 12:30:40.00 EST	source	A
31	agdi__timestamp	timestamp	1		~*	Timestamp	agdi	30	0	0	SYSTEM			2131	19/10/2001 12:30:40.00 EST	source	A
31	agdi__user_entry	text	1		~*	Created by	agdi	10	0	0	SYSTEM			2132	19/10/2001 12:30:41.00 EST	source	A
31	agdi_amount	numeric	1		~*	Unpaid	agdi	10	10	30	RO			2133	19/10/2001 12:30:41.00 EST	source	A
2	paym_date_entry	timestamp	0		=	Date received	paym	10	10	10	RO	now		2040	19/10/2001 12:29:23.00 EST	source	A
31	agdi_dbtr_code	text	1		~*	Debtor	agdi	10	10	10	RO			2136	19/10/2001 12:30:42.00 EST	source	A
2	agdi_dbtr_name	text	1		~*	Name	agdi	30	12	12	RO			2137	19/10/2001 12:30:43.00 EST	source	A
31	prnt__status	bpchar	1		~*	prnt__status	prnt	0	0	0	SYSTEM			2046	19/10/2001 12:29:31.00 EST	source	A
31	prnt__timestamp	datetime	1		~*	prnt__timestamp	prnt	0	0	0	SYSTEM			2047	19/10/2001 12:29:31.00 EST	source	A
31	prnt__user_entry	text	1		~*	prnt__user_entry	prnt	0	0	0				2048	19/10/2001 12:29:31.00 EST	source	A
2	paym__sequence	integer	0		=	Row-ID	paym	30	0	200	RO			2032	19/10/2001 12:29:19.00 EST	source	A
31	prnt_access	int4	1		=	Access	prnt	10	20	20	SELECT=0,Guest;1,User;10,Administrator;			2049	19/10/2001 12:29:32.00 EST	source	A
31	prnt_command	text	1		~*	Command	prnt	40	60	60	TEXTAREA=3			2050	19/10/2001 12:29:32.00 EST	source	A
31	prnt_desc	text	1		~*	Description	prnt	40	40	40	40	New Printer		2051	19/10/2001 12:29:33.00 EST	source	A
31	prnt_name	text	1		~*	Name	prnt	30	30	30	10	New Printer		2052	19/10/2001 12:29:33.00 EST	source	A
31	prnt_type	int4	1		=	Printer type	prnt	10	10	10	SELECT=1,Internal;2,External;	1		2053	19/10/2001 12:29:33.00 EST	source	A
31	aptd__sequence	int4	10		~*	Sequence	aptd	10	130	130	SYSTEM			3200	25/10/2002 09:52:16.00 EST	source	A
31	aptd__status	bpchar	1		~*	Status	aptd	1	160	160	SYSTEM			3201	25/10/2002 09:52:16.00 EST	source	A
31	aptd__timestamp	timestamp	47		~*	Timestamp	aptd	47	140	140	SYSTEM			3202	25/10/2002 09:52:17.00 EST	source	A
31	aptd__user_entry	text	30		~*	User Entry	aptd	30	150	150	SYSTEM			3203	25/10/2002 09:52:17.00 EST	source	A
31	aptd_aptp_code	text	30		~*	Type	aptd	30	10	10	RO			3204	25/10/2002 09:52:17.00 EST	source	A
31	aptd_colour	text	30		~*	Colour	aptd	30	30	30	COLOUR			3205	25/10/2002 09:52:18.00 EST	source	A
31	aptd_dayofmonth	int4	10		~*	Month Day	aptd	10	70	70	10			3206	25/10/2002 09:52:18.00 EST	source	A
31	aptd_dayofweek	int4	10		~*	Week Day	aptd	10	60	60	SELECT= 0,Sunday;1,Monday;2,Tuesday;3,Wednesday;4,Thursday;5,Friday;6,Saturday;			3207	25/10/2002 09:52:18.00 EST	source	A
31	aptd_desc	text	30		~*	Description	aptd	30	20	20	10			3208	25/10/2002 09:52:19.00 EST	source	A
31	aptd_ending	time	10		~*	Ending	aptd	10	120	120	10			3209	25/10/2002 09:52:19.00 EST	source	A
31	aptd_locn_code	text	30		~*	Location	aptd	30	50	50	FSL=30			3210	25/10/2002 09:52:19.00 EST	source	A
31	aptd_monthofyear	int4	10		~*	Month	aptd	10	80	80	SELECT=1,January;2,February;3,March;4,April;5,May;6,June;7,July;8,August;9,September;10,October;11,November;12,December;			3211	25/10/2002 09:52:19.00 EST	source	A
2	pyas__sequence	integer	0		=	Row-ID	pyas	30	0	200	SYSTEM			2068	19/10/2001 12:29:47.00 EST	source	A
2	pyas__status	char	0		~*	Record status	pyas	30	0	230	SYSTEM			2069	19/10/2001 12:29:48.00 EST	source	A
2	pyas__timestamp	datetime	0		=	Timestamp	pyas	30	0	210	SYSTEM			2070	19/10/2001 12:29:48.00 EST	source	A
2	pyas__user_entry	text	0		~*	Entered by	pyas	30	0	220				2071	19/10/2001 12:29:49.00 EST	source	A
2	pyas_amount	numeric(12,2)	0		=	Amount assigned	pyas	30	10	30	10			2072	19/10/2001 12:29:49.00 EST	source	A
2	pyas_paym__sequence	integer	0		=	Payment serial number	pyas	30	10	10	10			2073	19/10/2001 12:29:50.00 EST	source	A
2	pyas_svpf__sequence	integer	0		=	Service serial number	pyas	30	10	20	10			2074	19/10/2001 12:29:50.00 EST	source	A
2	rfdr__sequence	integer	0		=	Row-ID	rfdr	30	0	200	SYSTEM			2075	19/10/2001 12:29:53.00 EST	source	A
2	rfdr__status	char	0		~*	Record status	rfdr	30	0	230	SYSTEM			2076	19/10/2001 12:29:54.00 EST	source	A
2	rfdr__timestamp	datetime	0		=	Timestamp	rfdr	30	0	210	SYSTEM			2077	19/10/2001 12:29:54.00 EST	source	A
2	rfdr__user_entry	text	0		~*	Entered by	rfdr	30	0	220	SYSTEM			2078	19/10/2001 12:29:54.00 EST	source	A
2	rfdr_code	text	0		~*	Code	rfdr	30	10	10	10			2079	19/10/2001 12:29:55.00 EST	source	A
2	rfdr_index	text	0		~*	Sort order	rfdr	30	90	90	10			2080	19/10/2001 12:29:55.00 EST	source	A
2	rfdr_name	text	0		~*	Name	rfdr	30	20	20	10			2081	19/10/2001 12:29:55.00 EST	source	A
2	rfdr_phone	text	1		~*	Phone	rfdr	10	75	75				2082	19/10/2001 12:29:56.00 EST	source	A
2	rfdr_postcode	text	0		~*	Postcode	rfdr	30	50	50	10			2083	19/10/2001 12:29:56.00 EST	source	A
2	rfdr_provider	text	0		~*	Provider number	rfdr	30	70	70	10			2084	19/10/2001 12:29:57.00 EST	source	A
2	rfdr_salutation	text	0		~*	Salutation	rfdr	30	80	80	10			2085	19/10/2001 12:29:57.00 EST	source	A
2	rfdr_state	text	0		~*	State	rfdr	30	60	60	10			2086	19/10/2001 12:29:57.00 EST	source	A
2	rfdr_street	text	0		~*	Street	rfdr	30	30	30	10			2087	19/10/2001 12:29:58.00 EST	source	A
2	rfdr_suburb	text	0		~*	Suburb	rfdr	30	40	40	10			2088	19/10/2001 12:29:58.00 EST	source	A
2	serv__sequence	integer	0		=	Row-ID	serv	30	0	200	SYSTEM			2089	19/10/2001 12:30:04.00 EST	source	A
2	serv__status	char	0		~*	Record status	serv	30	0	230	SYSTEM			2090	19/10/2001 12:30:04.00 EST	source	A
2	serv__timestamp	datetime	0		=	Timestamp	serv	30	0	210	SYSTEM			2091	19/10/2001 12:30:05.00 EST	source	A
2	serv__user_entry	text	0		~*	Entered by	serv	30	0	220				2092	19/10/2001 12:30:05.00 EST	source	A
31	surv_fsnam	text	30		~*	Firstname	surv	30	30	30	RO			2760	09/02/2002 08:02:12.00 EST	source	A
31	surv_operation	text	30		~*	Operation	surv	30	150	150	RO			2761	09/02/2002 08:02:12.00 EST	source	A
31	surv_oprn_codes	text	30		~*	Oprn Codes	surv	30	140	140	RO			2762	09/02/2002 08:02:12.00 EST	source	A
31	surv_oprn_date	timestamp	47		~*	Oprn Date	surv	47	160	160	RO			2763	09/02/2002 08:02:13.00 EST	source	A
31	surv_oprn_place	text	30		~*	Oprn Place	surv	30	170	170	RO			2764	09/02/2002 08:02:13.00 EST	source	A
31	surv_psnam	text	30		~*	Surname	surv	30	20	20	RO			2765	09/02/2002 08:02:13.00 EST	source	A
31	svpv__sequence	int4	10		~*	Sequence	svpv	10	270	270	SYSTEM			2766	09/02/2002 08:02:15.00 EST	source	A
31	svpv__status	bpchar	1		~*	Status	svpv	1	300	300	SYSTEM			2767	09/02/2002 08:02:15.00 EST	source	A
31	svpv__timestamp	timestamp	47		~*	Timestamp	svpv	47	280	280	SYSTEM			2768	09/02/2002 08:02:16.00 EST	source	A
31	svpv__user_entry	text	30		~*	User Entry	svpv	30	290	290	SYSTEM			2769	09/02/2002 08:02:16.00 EST	source	A
31	svpv_amount	numeric	786434		~*	Amount	svpv	786434	50	50	10			2770	09/02/2002 08:02:16.00 EST	source	A
31	svpv_cred_summary	text	30		~*	Cred Summary	svpv	30	130	130	10			2771	09/02/2002 08:02:17.00 EST	source	A
31	svpv_date_service	date	10		~*	Date Service	svpv	10	10	10	10			2772	09/02/2002 08:02:17.00 EST	source	A
31	svpv_dbtr_address	text	30		~*	Dbtr Address	svpv	30	220	220	10			2773	09/02/2002 08:02:17.00 EST	source	A
31	svpv_dbtr_name	text	30		~*	Dbtr Name	svpv	30	210	210	10			2774	09/02/2002 08:02:17.00 EST	source	A
31	svpv_dbtr_state	text	30		~*	Dbtr State	svpv	30	240	240	10			2775	09/02/2002 08:02:18.00 EST	source	A
31	svpv_dbtr_suburb	text	30		~*	Dbtr Suburb	svpv	30	230	230	10			2776	09/02/2002 08:02:18.00 EST	source	A
31	svpv_desc	text	30		~*	Desc	svpv	30	40	40	10			2777	09/02/2002 08:02:18.00 EST	source	A
31	svpv_empl_address	text	30		~*	Empl Address	svpv	30	370	370	10			2778	09/02/2002 08:02:18.00 EST	source	A
31	svpv_empl_code	text	30		~*	Empl Code	svpv	30	350	350	10			2779	09/02/2002 08:02:19.00 EST	source	A
31	svpv_empl_name	text	30		~*	Empl Name	svpv	30	360	360	10			2780	09/02/2002 08:02:19.00 EST	source	A
31	svpv_empl_postcode	text	30		~*	Empl Postcode	svpv	30	390	390	10			2781	09/02/2002 08:02:19.00 EST	source	A
31	svpv_empl_state	text	30		~*	Empl State	svpv	30	400	400	10			2782	09/02/2002 08:02:20.00 EST	source	A
2	invc_date_printed	timestamp	0		=	Date printed	invc	10	42	42	10			1920	19/10/2001 12:27:50.00 EST	source	A
31	mtcl_group_by	text	0		~*	Group By	mtcl	20	70	70	10			126	10/10/2001 12:24:52.00 EST	source	A
31	mtcl_matrix_order	int4	0		~*	Matrix Order	mtcl	5	50	50	10			127	10/10/2001 12:24:52.00 EST	source	A
31	mtcl_order_by	text	0		~*	Order By	mtcl	30	100	100	10			129	10/10/2001 12:24:53.00 EST	source	A
31	mtcl_primary	text	0		~*	Primary Key	mtcl	10	80	80	10			130	10/10/2001 12:24:54.00 EST	source	A
31	mtcl_query_limit	int4	0		~*	Query Limit	mtcl	5	90	90	10	200		131	10/10/2001 12:24:54.00 EST	source	A
31	mtcl_query_offset	int4	0		~*	Query Offset	mtcl	5	100	100	10	0		132	10/10/2001 12:24:54.00 EST	source	A
31	mtcl_userkey	text	1		=	User Key	mtcl	10	82	82	10			134	10/10/2001 12:24:55.00 EST	source	A
31	mtcl_userlabel	text	1		=	User Label	mtcl	10	84	84	10			135	10/10/2001 12:24:56.00 EST	source	A
31	mtat__sequence	int4	0		~*	attribute__sequence	mtat	10	0	200	10			136	10/10/2001 12:25:01.00 EST	source	A
31	mtat__status	bpchar	0		~*	attribute__status	mtat	10	0	200	10	N		137	10/10/2001 12:25:02.00 EST	source	A
31	mtat__timestamp	datetime	0		~*	attribute__timestamp	mtat	10	0	200	10	now		138	10/10/2001 12:25:02.00 EST	source	A
31	mtat__user_entry	text	0		~*	attribute__user_entry	mtat	10	0	200	10	CURRENT_USER		139	10/10/2001 12:25:03.00 EST	source	A
31	svpv_empl_suburb	text	30		~*	Empl Suburb	svpv	30	380	380	10			2783	09/02/2002 08:02:20.00 EST	source	A
31	svpv_feet_code	text	30		~*	Feet Code	svpv	30	410	410	10			2784	09/02/2002 08:02:20.00 EST	source	A
31	svpv_feet_desc	text	30		~*	Feet Desc	svpv	30	420	420	10			2785	09/02/2002 08:02:20.00 EST	source	A
31	svpv_gst_amount	numeric	786434		~*	Gst Amount	svpv	786434	60	60	10			2786	09/02/2002 08:02:21.00 EST	source	A
31	svpv_invc__sequence	int4	10		~*	Invc  Sequence	svpv	10	90	90	10			2787	09/02/2002 08:02:21.00 EST	source	A
31	svpv_invc_amount	numeric	786434		~*	Invc Amount	svpv	786434	100	100	10			2788	09/02/2002 08:02:21.00 EST	source	A
31	eftv_tdtp_desc	text	30		~*	Tdtp Desc	eftv	30	90	90	10			2696	09/02/2002 08:01:41.00 EST	source	A
31	eftv_tdtp_entity	text	30		~*	Tdtp Entity	eftv	30	100	100	10			2697	09/02/2002 08:01:41.00 EST	source	A
31	eftv_tdtp_list	text	30		~*	Tdtp List	eftv	30	70	70	10			2698	09/02/2002 08:01:41.00 EST	source	A
2	paym__status	char	0		~*	Record status	paym	30	0	230	SYSTEM			2033	19/10/2001 12:29:20.00 EST	source	A
2	paym__timestamp	datetime	0		=	Timestamp	paym	30	0	210	SYSTEM			2034	19/10/2001 12:29:20.00 EST	source	A
2	paym__user_entry	text	0		~*	Entered by	paym	30	0	220	SYSTEM			2035	19/10/2001 12:29:21.00 EST	source	A
2	paym_amount	numeric(12,2)	0		=	Amount	paym	30	10	40	10			2036	19/10/2001 12:29:21.00 EST	source	A
2	paym_bank	text	0		~*	Bank	paym	30	10	70	10	=tdtp_entity		2037	19/10/2001 12:29:21.00 EST	source	A
2	paym_bkdp__sequence	integer	0		=	Deposit-batch code	paym	30	10	90	RO			2038	19/10/2001 12:29:22.00 EST	source	A
2	paym_branch	text	0		~*	Branch	paym	30	10	80	10	=tdtp_location		2039	19/10/2001 12:29:22.00 EST	source	A
2	paym_drawer	text	0		~*	Drawer	paym	30	10	60	10			2041	19/10/2001 12:29:23.00 EST	source	A
2	paym_site_entry	text	0		~*	Reception site	paym	0	0	0	0			2042	19/10/2001 12:29:23.00 EST	source	A
2	paym_tdtp_code	text	0		~*	Tender type	paym	30	10	50	FSL=100		onchange="paym_js_check()"	2043	19/10/2001 12:29:24.00 EST	source	A
2	paym_user_entry	text	0		~*	Received by	paym	30	10	20	RO			2044	19/10/2001 12:29:24.00 EST	source	A
31	prnt__sequence	int4	1		=	prnt__sequence	prnt	10	0	0	SYSTEM			2045	19/10/2001 12:29:30.00 EST	source	A
2	lthd_target_id	text	1		~*	Target Form	lthd	20	12	12		INVOICE		1955	19/10/2001 12:28:18.00 EST	source	A
2	lthd_type	text	0		~*	Type	lthd	2	10	30	SELECT=1,LITERAL;3,LINE;4,DASHED LINE;5,RECTANGLE;6,IMAGE-JPEG;7,IMAGE-PNG;0,ORIGIN;	10		1956	19/10/2001 12:28:19.00 EST	source	A
2	lthd_x_coord	integer	0		=	X Co-ordinate	lthd	3	10	50	10	0		1957	19/10/2001 12:28:19.00 EST	source	A
2	lthd_y_coord	integer	0		=	Y Co-ordinate	lthd	3	10	60	10	0		1958	19/10/2001 12:28:19.00 EST	source	A
2	mdaf__sequence	integer	0		=	Row-ID	mdaf	30	0	200	SYSTEM			1959	19/10/2001 12:28:23.00 EST	source	A
2	mdaf__status	char	0		~*	Record status	mdaf	30	0	230	SYSTEM			1960	19/10/2001 12:28:24.00 EST	source	A
2	mdaf__timestamp	datetime	0		=	Timestamp	mdaf	30	0	210	SYSTEM			1961	19/10/2001 12:28:24.00 EST	source	A
2	mdaf__user_entry	text	0		~*	Entered by	mdaf	30	0	220				1962	19/10/2001 12:28:25.00 EST	source	A
2	mdaf_assign	text	0		~*	Assignment form number	mdaf	30	60	60	60			1963	19/10/2001 12:28:25.00 EST	source	A
2	mdaf_date_created	datetime	0		=	Date created	mdaf	30	40	40	40			1964	19/10/2001 12:28:25.00 EST	source	A
2	mdaf_date_printed	datetime	0		=	Date printed	mdaf	30	70	70	70			1965	19/10/2001 12:28:26.00 EST	source	A
2	mdaf_mdbt__sequence	integer	0		=	Batch serial number	mdaf	30	80	80	80			1966	19/10/2001 12:28:26.00 EST	source	A
2	mdaf_patn__sequence	integer	0		=	Patient file number	mdaf	30	10	10	10			1967	19/10/2001 12:28:27.00 EST	source	A
2	mdaf_prov_code	text	0		~*	Service provider code	mdaf	30	20	20	20			1968	19/10/2001 12:28:27.00 EST	source	A
2	mdaf_rfdr_code	text	0		~*	Referrer code	mdaf	30	30	30	30			1969	19/10/2001 12:28:28.00 EST	source	A
2	mdaf_user_created	text	0		~*	Creator	mdaf	30	50	50	50			1970	19/10/2001 12:28:28.00 EST	source	A
2	mdbt__sequence	integer	0		=	Row-ID	mdbt	30	0	200	SYSTEM			1971	19/10/2001 12:28:34.00 EST	source	A
2	mdbt__status	char	0		~*	Record status	mdbt	30	0	230	SYSTEM			1972	19/10/2001 12:28:34.00 EST	source	A
2	mdbt__timestamp	datetime	0		=	Timestamp	mdbt	30	0	210	SYSTEM			1973	19/10/2001 12:28:34.00 EST	source	A
2	mdbt__user_entry	text	0		~*	Entered by	mdbt	30	0	220				1974	19/10/2001 12:28:35.00 EST	source	A
2	mdbt_batch_amount	float	0		~*	Total amount claimed	mdbt	30	10	60	10			1975	19/10/2001 12:28:36.00 EST	source	A
2	mdbt_batch_code	char(8)	0		~*	Batch code	mdbt	30	10	40	10			1976	19/10/2001 12:28:36.00 EST	source	A
2	mdbt_batch_count	integer	0		=	Form count in batch	mdbt	30	10	50	10			1977	19/10/2001 12:28:36.00 EST	source	A
2	mdbt_date_created	date	0		=	Date created	mdbt	30	10	70	10			1978	19/10/2001 12:28:37.00 EST	source	A
2	mdbt_date_sent	date	0		=	Date sent	mdbt	30	10	100	10			1979	19/10/2001 12:28:37.00 EST	source	A
2	mdbt_first_assign	char(8)	0		~*	First form number in batch	mdbt	30	10	20	10			1980	19/10/2001 12:28:38.00 EST	source	A
2	mdbt_last_assign	char(8)	0		~*	Last form number in batch	mdbt	30	10	30	10			1981	19/10/2001 12:28:38.00 EST	source	A
2	mdbt_prov_code	char(4)	0		~*	Service provider code	mdbt	30	10	10	10			1982	19/10/2001 12:28:38.00 EST	source	A
2	mdbt_time_created	char(5)	0		~*	Time created	mdbt	30	10	80	10			1983	19/10/2001 12:28:39.00 EST	source	A
2	mdbt_time_sent	char(5)	0		~*	Time sent	mdbt	30	10	110	10			1984	19/10/2001 12:28:39.00 EST	source	A
2	mdbt_user_created	char(12)	0		~*	Created by	mdbt	30	10	90	10			1985	19/10/2001 12:28:40.00 EST	source	A
2	mdcr__sequence	integer	0		=	Row-ID	mdcr	30	0	200	SYSTEM			1986	19/10/2001 12:28:43.00 EST	source	A
2	mdcr__status	char	0		~*	Record status	mdcr	30	0	230	SYSTEM			1987	19/10/2001 12:28:43.00 EST	source	A
2	mdcr__timestamp	datetime	0		=	Timestamp	mdcr	30	0	210	SYSTEM			1988	19/10/2001 12:28:44.00 EST	source	A
2	mdcr__user_entry	text	0		~*	Entered by	mdcr	30	0	220				1989	19/10/2001 12:28:44.00 EST	source	A
2	mdcr_amount	money	0		=	Amount credited	mdcr	30	10	30	10			1990	19/10/2001 12:28:44.00 EST	source	A
2	mdcr_paym__sequence	integer	0		=	Payment serial number	mdcr	30	10	10	10			1991	19/10/2001 12:28:45.00 EST	source	A
2	mdcr_svpf__sequence	integer	0		=	Service serial number	mdcr	30	10	20	10			1992	19/10/2001 12:28:45.00 EST	source	A
2	note__sequence	integer	0		=	Row-ID	note	30	0	200	SYSTEM			1993	19/10/2001 12:28:49.00 EST	source	A
2	note__status	char	0		~*	Record status	note	30	0	230	SYSTEM			1994	19/10/2001 12:28:49.00 EST	source	A
2	note__timestamp	datetime	0		=	Timestamp	note	30	0	5	RO			1995	19/10/2001 12:28:49.00 EST	source	A
2	note__user_entry	text	0		~*	Entered by	note	30	0	220	SYSTEM			1996	19/10/2001 12:28:50.00 EST	source	A
2	note_desc	text	0		~*	Description	note	50	10	20	TEXTAREA=3		WRAP=VIRTUAL	1997	19/10/2001 12:28:50.00 EST	source	A
2	note_patn__sequence	integer	0		=	Patient ID	note	20	10	10	RO	=patn__sequence		1998	19/10/2001 12:28:51.00 EST	source	A
31	eftv_tdtp_location	text	30		~*	Tdtp Location	eftv	30	110	110	10			2699	09/02/2002 08:01:42.00 EST	source	A
2	inst_postc	text	0		~*	Postcode	inst	30	30	70	30			1911	19/10/2001 12:27:42.00 EST	source	A
2	inst_suburb	text	0		~*	Suburb	inst	30	30	60	30			1912	19/10/2001 12:27:43.00 EST	source	A
31	locn__sequence	int4	10		~*	Sequence	locn	10	30	30	SYSTEM			3162	24/10/2002 04:26:09.00 EST	source	A
31	cnrt_start_date	timestamp	47		~*	Start Date	cnrt	10	50	50	10			1773	19/10/2001 12:25:14.00 EST	source	A
31	gstv_bkdp_date_created	timestamp	47		~*	Bank Date	gstv	10	150	150	SYSTEM			2456	23/10/2001 15:35:05.00 EST	source	A
31	labl__sequence	int4	1		~*	labl__sequence	labl	10	1000	1000	SYSTEM			1933	19/10/2001 12:28:06.00 EST	source	A
31	labl__status	bpchar	1		~*	labl__status	labl	1	1000	1000	SYSTEM			1934	19/10/2001 12:28:07.00 EST	source	A
31	labl__timestamp	timestamp	1		~*	labl__timestamp	labl	20	1000	1000	SYSTEM			1935	19/10/2001 12:28:07.00 EST	source	A
31	labl__user_entry	text	1		~*	labl__user_entry	labl	10	1000	1000				1936	19/10/2001 12:28:07.00 EST	source	A
31	labl_attribute_name	text	1		~*	Attribute	labl	30	50	50	10			1937	19/10/2001 12:28:08.00 EST	source	A
31	labl_class_name	text	1		~*	Class	labl	10	40	40	10			1938	19/10/2001 12:28:08.00 EST	source	A
31	labl_column	int4	1		~*	Column	labl	3	70	70	10			1939	19/10/2001 12:28:09.00 EST	source	A
31	labl_id	text	1		~*	ID	labl	30	10	10	10			1940	19/10/2001 12:28:09.00 EST	source	A
31	labl_row	int4	1		~*	row	labl	3	60	60	10			1941	19/10/2001 12:28:09.00 EST	source	A
31	labl_subtype	text	1		~*	Fee Type	labl	10	20	20	10			1942	19/10/2001 12:28:10.00 EST	source	A
31	labl_text_label	text	1		~*	Text	labl	30	30	30	10			1943	19/10/2001 12:28:10.00 EST	source	A
2	lthd__sequence	integer	0		=	Row-ID	lthd	30	0	200	SYSTEM			1944	19/10/2001 12:28:14.00 EST	source	A
2	lthd__status	char	0		~*	Record status	lthd	30	0	230	SYSTEM			1945	19/10/2001 12:28:14.00 EST	source	A
2	lthd__timestamp	datetime	0		=	Timestamp	lthd	30	0	210	SYSTEM			1946	19/10/2001 12:28:14.00 EST	source	A
2	lthd__user_entry	text	0		~*	Entered by	lthd	30	0	220				1947	19/10/2001 12:28:15.00 EST	source	A
2	lthd_align	char(1)	0		~*	Alignment (L/R/C)	lthd	2	10	100	SELECT=R,RIGHT;C,CENTRE;L,LEFT	10		1948	19/10/2001 12:28:15.00 EST	source	A
2	lthd_data	text	0		~*	Content	lthd	30	10	40	10			1949	19/10/2001 12:28:16.00 EST	source	A
2	lthd_font	text	0		~*	Font Name	lthd	2	10	80	SELECT=Courier,Courier;Courier-BoldOblique,Courier-BoldOblique;Courier-Oblique,Courier-Oblique;Helvetica,Helvetica;Helvetica-Bold,Helvetica-Bold;Helvetica-BoldOblique,Helvetica-BoldOblique;Helvetica-Oblique,Helvetica-Oblique;Symbol,Symbol;Times-Roman,Times-Roman;Times-Bold,Times-Bold;Times-BoldItalic,Times-BoldItalic;Times-Italic,Times-Italic;ZapfDingbats,ZapfDingbats;	10		1950	19/10/2001 12:28:16.00 EST	source	A
2	lthd_order	integer	0		=	Display Order	lthd	5	10	20	10	100		1951	19/10/2001 12:28:16.00 EST	source	A
2	lthd_prov_code	text	0		~*	Letterhead Code	lthd	10	10	10	FSL=20	=prov_code		1952	19/10/2001 12:28:17.00 EST	source	A
2	lthd_scale	float	0		~*	Scale	lthd	2	10	70	10	1		1953	19/10/2001 12:28:17.00 EST	source	A
2	lthd_size	float	0		~*	Font Size (points)	lthd	4	10	90	10	12		1954	19/10/2001 12:28:18.00 EST	source	A
31	locn__status	bpchar	1		~*	Status	locn	1	60	60	SYSTEM			3163	24/10/2002 04:26:10.00 EST	source	A
31	locn__timestamp	timestamp	47		~*	Timestamp	locn	47	40	40	SYSTEM			3164	24/10/2002 04:26:10.00 EST	source	A
31	locn__user_entry	text	30		~*	User Entry	locn	30	50	50	SYSTEM			3165	24/10/2002 04:26:10.00 EST	source	A
31	locn_code	text	30		~*	Code	locn	30	10	10	10			3166	24/10/2002 04:26:11.00 EST	source	A
31	locn_colour	text	30		~*	Colour	locn	10	15	15	COLOUR			3167	24/10/2002 04:26:11.00 EST	source	A
31	gstv_bkdp_date_printed	timestamp	47		~*	Bkdp Date Printed	gstv	10	160	160	SYSTEM			2457	23/10/2001 15:35:05.00 EST	source	A
2	feeb__sequence	integer	0		=	Row-ID	feeb	30	0	200	SYSTEM			1870	19/10/2001 12:26:30.00 EST	source	A
2	feeb__status	char	0		~*	Record status	feeb	30	0	230	SYSTEM			1871	19/10/2001 12:26:31.00 EST	source	A
2	feeb__timestamp	datetime	0		=	Timestamp	feeb	30	0	210	SYSTEM			1872	19/10/2001 12:26:31.00 EST	source	A
2	feeb__user_entry	text	0		~*	Entered by	feeb	30	0	220				1873	19/10/2001 12:26:32.00 EST	source	A
2	feeb_amount	numeric(12,2)	0		=	Amount	feeb	30	30	30	30			1874	19/10/2001 12:26:32.00 EST	source	A
2	feeb_feet_code	text	0		~*	Fee level	feeb	30	20	20				1875	19/10/2001 12:26:32.00 EST	source	A
2	feeb_serv_code	text	0		~*	Service code	feeb	30	10	10				1876	19/10/2001 12:26:33.00 EST	source	A
2	feet__sequence	integer	0		=	Row-ID	feet	30	0	200	SYSTEM			1877	19/10/2001 12:26:37.00 EST	source	A
2	feet__status	char	0		~*	Record status	feet	30	0	230	SYSTEM			1878	19/10/2001 12:26:38.00 EST	source	A
2	feet__timestamp	datetime	0		=	Timestamp	feet	30	0	210	SYSTEM			1879	19/10/2001 12:26:38.00 EST	source	A
2	feet__user_entry	text	0		~*	Entered by	feet	30	0	220				1880	19/10/2001 12:26:38.00 EST	source	A
2	feet_code	text	0		~*	Code	feet	30	10	20	40			1881	19/10/2001 12:26:39.00 EST	source	A
2	feet_desc	text	0		~*	Description	feet	30	10	30	40			1882	19/10/2001 12:26:39.00 EST	source	A
2	hlfd__sequence	integer	0		=	Row-ID	hlfd	30	0	200	SYSTEM			1883	19/10/2001 12:26:55.00 EST	source	A
2	hlfd__status	char	0		~*	Record status	hlfd	30	0	230	SYSTEM			1884	19/10/2001 12:26:59.00 EST	source	A
2	hlfd__timestamp	datetime	0		=	Timestamp	hlfd	30	0	210	SYSTEM			1885	19/10/2001 12:26:59.00 EST	source	A
2	hlfd__user_entry	text	0		~*	Entered by	hlfd	30	0	220				1886	19/10/2001 12:27:00.00 EST	source	A
2	hlfd_code	text	0		~*	Code	hlfd	30	10	20	40			1887	19/10/2001 12:27:00.00 EST	source	A
2	hlfd_desc	text	0		~*	Description	hlfd	30	20	40	40			1888	19/10/2001 12:27:01.00 EST	source	A
2	icd9__sequence	integer	0		=	Row-ID	icd9	30	200	200				1889	19/10/2001 12:27:15.00 EST	source	A
2	icd9__status	char	0		~*	Record status	icd9	30	200	230				1890	19/10/2001 12:27:15.00 EST	source	A
2	icd9__timestamp	datetime	0		=	Timestamp	icd9	30	200	210				1891	19/10/2001 12:27:20.00 EST	source	A
2	icd9__user_entry	text	0		~*	Entered by	icd9	30	200	220				1892	19/10/2001 12:27:21.00 EST	source	A
2	icd9_age_edit	char	0		~*	Age limit	icd9	30	30	50	30			1893	19/10/2001 12:27:21.00 EST	source	A
2	icd9_area_edit	char	0		~*	Area Edit	icd9	30	30	100	30			1894	19/10/2001 12:27:22.00 EST	source	A
2	icd9_code	text	0		~*	ICD9 code	icd9	30	30	40	30			1895	19/10/2001 12:27:22.00 EST	source	A
2	icd9_code_edit	char	0		~*	Code edit	icd9	30	30	90	30			1896	19/10/2001 12:27:22.00 EST	source	A
2	icd9_codetype	char	0		~*	Code type	icd9	30	30	30	30			1897	19/10/2001 12:27:23.00 EST	source	A
2	icd9_desc	text	0		~*	Description	icd9	30	30	120	30			1898	19/10/2001 12:27:23.00 EST	source	A
2	icd9_digit_5	text	0		~*	Fifth digit edit	icd9	30	30	110	30			1899	19/10/2001 12:27:24.00 EST	source	A
2	icd9_high_age	smallint	0		=	High Age	icd9	30	30	70	30			1900	19/10/2001 12:27:27.00 EST	source	A
2	icd9_low_age	smallint	0		=	Low age	icd9	30	30	60	30			1901	19/10/2001 12:27:27.00 EST	source	A
2	icd9_sex_edit	char	0		~*	Gender limit	icd9	30	30	80	30			1902	19/10/2001 12:27:34.00 EST	source	A
2	inst__sequence	integer	0		=	Row-ID	inst	30	0	200	SYSTEM			1903	19/10/2001 12:27:38.00 EST	source	A
2	inst__status	char	0		~*	Record status	inst	30	0	230	SYSTEM			1904	19/10/2001 12:27:39.00 EST	source	A
2	inst__timestamp	datetime	0		=	Timestamp	inst	30	0	210	SYSTEM			1905	19/10/2001 12:27:40.00 EST	source	A
2	inst__user_entry	text	0		~*	Entered by	inst	30	0	220				1906	19/10/2001 12:27:40.00 EST	source	A
2	inst_addr	text	0		~*	Street	inst	30	30	50	30			1907	19/10/2001 12:27:40.00 EST	source	A
2	inst_code	text	0		~*	Code	inst	30	30	30	30			1908	19/10/2001 12:27:41.00 EST	source	A
2	inst_cont	text	0		~*	Contact name	inst	30	30	80	30			1909	19/10/2001 12:27:41.00 EST	source	A
2	inst_desc	text	0		~*	Description	inst	30	30	40	30			1910	19/10/2001 12:27:42.00 EST	source	A
2	diag_icd9	text	0		~*	ICD9 code number	diag	30	30	30	30			1818	19/10/2001 12:25:51.00 EST	source	A
2	diag_type	text	0		~*	Code type	diag	30	20	20	20			1819	19/10/2001 12:25:51.00 EST	source	A
31	docs__sequence	int4	10		~*	Document ID	docs	10	40	40	RO			1820	19/10/2001 12:25:54.00 EST	source	A
31	docs__status	bpchar	1		~*	Status	docs	1	70	70	SYSTEM			1821	19/10/2001 12:25:55.00 EST	source	A
31	docs__timestamp	timestamp	47		~*	Creattion time	docs	47	50	50	RO			1822	19/10/2001 12:25:55.00 EST	source	A
31	docs__user_entry	text	30		~*	Created by	docs	30	60	60	RO			1823	19/10/2001 12:25:56.00 EST	source	A
31	docs_patn__sequence	int4	10		~*	Patient ID	docs	10	10	10	RO			1824	19/10/2001 12:25:56.00 EST	source	A
31	docs_title	text	30		~*	Title	docs	30	30	30	10			1825	19/10/2001 12:25:56.00 EST	source	A
31	docs_url	text	30		~*	Location	docs	30	20	20	RO			1826	19/10/2001 12:25:57.00 EST	source	A
2	empl__sequence	integer	0		=	Row-ID	empl	30	0	200	SYSTEM			1827	19/10/2001 12:26:01.00 EST	source	A
2	empl__status	char	0		~*	Record status	empl	30	0	230	SYSTEM			1828	19/10/2001 12:26:01.00 EST	source	A
2	empl__timestamp	datetime	0		=	Timestamp	empl	30	0	210	SYSTEM			1829	19/10/2001 12:26:02.00 EST	source	A
2	empl__user_entry	text	0		~*	Entered by	empl	30	0	220				1830	19/10/2001 12:26:02.00 EST	source	A
2	empl_address	text	0		~*	Street	empl	30	10	30	10			1831	19/10/2001 12:26:03.00 EST	source	A
2	empl_code	text	0		~*	Code	empl	30	12	10	10			1832	19/10/2001 12:26:03.00 EST	source	A
2	empl_name	text	0		~*	Name	empl	30	10	20	10			1833	19/10/2001 12:26:03.00 EST	source	A
2	empl_postcode	text	0		~*	Postcode	empl	4	10	50	10			1834	19/10/2001 12:26:04.00 EST	source	A
2	empl_state	text	0		~*	State	empl	20	10	60	10			1835	19/10/2001 12:26:04.00 EST	source	A
2	empl_suburb	text	0		~*	Suburb	empl	30	10	40	10			1836	19/10/2001 12:26:05.00 EST	source	A
2	epsd__sequence	integer	0		=	Row-ID	epsd	30	0	230	SYSTEM			1837	19/10/2001 12:26:10.00 EST	source	A
2	epsd__status	char	0		~*	Record status	epsd	30	0	260	SYSTEM			1838	19/10/2001 12:26:10.00 EST	source	A
2	epsd__timestamp	datetime	0		=	Timestamp	epsd	30	0	240	SYSTEM			1839	19/10/2001 12:26:11.00 EST	source	A
2	epsd__user_entry	text	0		~*	Entered by	epsd	30	0	250				1840	19/10/2001 12:26:11.00 EST	source	A
2	epsd_admit_criteria	char	0		~*	Admission criteria	epsd	30	30	40	30			1841	19/10/2001 12:26:11.00 EST	source	A
2	epsd_admit_date	datetime	0		=	Admission date	epsd	30	30	30	30			1842	19/10/2001 12:26:12.00 EST	source	A
2	epsd_admit_source	text	0		~*	Admission source	epsd	30	30	60	30			1843	19/10/2001 12:26:12.00 EST	source	A
2	epsd_admit_type	text	0		~*	Admission type	epsd	30	30	50	30			1844	19/10/2001 12:26:13.00 EST	source	A
2	epsd_healthfund	text	0		~*	Healthfund	epsd	30	30	90	30			1845	19/10/2001 12:26:13.00 EST	source	A
2	epsd_ins_level	text	0		~*	Insurance level	epsd	30	30	100	30			1846	19/10/2001 12:26:13.00 EST	source	A
2	epsd_lvday_finyr	smallint	0		=	Leave days YTD	epsd	30	30	130	30			1847	19/10/2001 12:26:14.00 EST	source	A
2	epsd_lvday_month	smallint	0		=	Leave days MTD	epsd	30	30	120	30			1848	19/10/2001 12:26:14.00 EST	source	A
2	epsd_lvday_total	smallint	0		=	Leave days total	epsd	30	30	140	30			1849	19/10/2001 12:26:15.00 EST	source	A
2	epsd_neonate_weight	smallint	0		=	Neonate weight	epsd	30	30	70	30			1850	19/10/2001 12:26:15.00 EST	source	A
2	epsd_patn__sequence	integer	0		=	Patient OID	epsd	30	30	220	30			1851	19/10/2001 12:26:15.00 EST	source	A
2	epsd_re_admit	text	0		~*	Intention to readmit	epsd	30	30	180	30			1852	19/10/2001 12:26:16.00 EST	source	A
2	epsd_sepn_date	datetime	0		=	Separation date	epsd	30	30	150	30			1853	19/10/2001 12:26:16.00 EST	source	A
2	epsd_sepn_transfer	text	0		~*	Separation transfer	epsd	30	30	170	30			1854	19/10/2001 12:26:17.00 EST	source	A
2	epsd_sepn_type	text	0		~*	Separation type	epsd	30	30	160	30			1855	19/10/2001 12:26:17.00 EST	source	A
2	epsd_speciality	text	0		~*	Clinical speciality	epsd	30	30	110	30			1856	19/10/2001 12:26:17.00 EST	source	A
2	epsd_study	text	0		~*	Study ID	epsd	30	30	200	30			1857	19/10/2001 12:26:18.00 EST	source	A
2	epsd_trans_source	text	0		~*	Transfer source	epsd	30	30	80	30			1858	19/10/2001 12:26:18.00 EST	source	A
2	epsd_user_flag_diag	text	0		~*	Diagnosis flag	epsd	30	30	210	30			1859	19/10/2001 12:26:19.00 EST	source	A
2	epsd_user_flag_sepn	text	0		~*	Separation flag	epsd	30	30	190	30			1860	19/10/2001 12:26:19.00 EST	source	A
31	locn_desc	text	30		~*	Description	locn	30	20	20	10			3168	24/10/2002 04:26:11.00 EST	source	A
31	aptp__sequence	int4	10		~*	Sequence	aptp	10	40	40	SYSTEM			3169	24/10/2002 04:26:19.00 EST	source	A
31	aptp__status	bpchar	1		~*	Status	aptp	1	70	70	SYSTEM			3170	24/10/2002 04:26:19.00 EST	source	A
31	cnrt_serv_code	text	30		~*	Service code	cnrt	30	60	60	10			1772	19/10/2001 12:25:14.00 EST	source	A
31	cnrt_end_date	timestamp	47		~*	Final payment date	cnrt	10	110	110	RO			1767	19/10/2001 12:25:12.00 EST	source	A
31	ctrt_period	interval	47		~*	Interval	cnrt	47	30	30	10			1774	19/10/2001 12:25:15.00 EST	source	A
2	cnty__sequence	integer	0		=	Row-ID	cnty	30	0	200	SYSTEM			1775	19/10/2001 12:25:19.00 EST	source	A
2	cnty__status	char	0		~*	Record status	cnty	30	0	230	SYSTEM			1776	19/10/2001 12:25:19.00 EST	source	A
2	cnty__timestamp	datetime	0		=	Timestamp	cnty	30	0	210	SYSTEM			1777	19/10/2001 12:25:20.00 EST	source	A
2	cnty__user_entry	text	0		~*	Entered by	cnty	30	0	220				1778	19/10/2001 12:25:20.00 EST	source	A
2	cnty_code	text	0		~*	Code	cnty	30	10	10	10			1779	19/10/2001 12:25:20.00 EST	source	A
2	cnty_desc	text	0		~*	Description	cnty	30	20	20	20			1780	19/10/2001 12:25:21.00 EST	source	A
2	conf__sequence	integer	0		=	Row-ID	conf	30	0	200	SYSTEM			1781	19/10/2001 12:25:24.00 EST	source	A
2	conf__status	char	0		~*	Record status	conf	30	0	230	SYSTEM			1782	19/10/2001 12:25:24.00 EST	source	A
2	conf__timestamp	datetime	0		=	Timestamp	conf	30	0	210	SYSTEM			1783	19/10/2001 12:25:25.00 EST	source	A
2	conf__user_entry	text	0		~*	Entered by	conf	30	0	220				1784	19/10/2001 12:25:25.00 EST	source	A
2	conf_access	integer	0		=	Access	conf	2	10	30	SELECT=0,Guest;1,User;10,Administrator;	10		1785	19/10/2001 12:25:26.00 EST	source	A
2	conf_code	text	0		~*	Attribute Name	conf	30	10	40	10			1786	19/10/2001 12:25:26.00 EST	source	A
2	conf_desc	text	0		~*	Description	conf	30	10	50	10			1787	19/10/2001 12:25:26.00 EST	source	A
2	conf_scope	integer	0		=	Scope	conf	2	10	20	SELECT=1,Global;2,Database;3,User;4,Session;	10		1788	19/10/2001 12:25:27.00 EST	source	A
2	conf_type	integer	0		=	Type	conf	2	10	10	SELECT=1,Variable;2,Constant;	10		1789	19/10/2001 12:25:27.00 EST	source	A
2	conf_value	text	0		~*	Value	conf	30	10	60	10	0		1790	19/10/2001 12:25:28.00 EST	source	A
2	cred__sequence	integer	0		=	Row-ID	cred	30	0	200	SYSTEM			1791	19/10/2001 12:25:31.00 EST	source	A
2	cred__status	char	0		~*	Record status	cred	30	0	230	SYSTEM			1792	19/10/2001 12:25:31.00 EST	source	A
2	cred__timestamp	datetime	0		=	Timestamp	cred	30	0	210	SYSTEM			1793	19/10/2001 12:25:32.00 EST	source	A
2	cred__user_entry	text	0		~*	Entered by	cred	30	0	220				1794	19/10/2001 12:25:32.00 EST	source	A
2	cred_amount	numeric(12,2)	0		=	Credit Amount	cred	10	30	30	30			1795	19/10/2001 12:25:32.00 EST	source	A
2	cred_gst_amount	numeric(12,2)	1		~*	GST credit amount	cred	10	32	32		0.0		1796	19/10/2001 12:25:33.00 EST	source	A
31	fmdt__user_entry	text	30		~*	User Entry	fmdt	30	300	300	SYSTEM			200	10/10/2001 12:25:45.00 EST	source	A
31	fmdt_bd_colour	text	30		~*	Bd Colour	fmdt	30	120	120	10			201	10/10/2001 12:25:45.00 EST	source	A
31	fmdt_bd_style	int4	10		~*	Bd Style	fmdt	10	140	140	10			202	10/10/2001 12:25:46.00 EST	source	A
31	fmdt_bd_width	int4	10		~*	Bd Width	fmdt	10	130	130	10			203	10/10/2001 12:25:46.00 EST	source	A
31	fmdt_bg_colour	text	30		~*	Bg Colour	fmdt	30	100	100	10			204	10/10/2001 12:25:46.00 EST	source	A
31	fmdt_comma_sep	int4	10		~*	Comma Sep	fmdt	10	270	270	10			205	10/10/2001 12:25:47.00 EST	source	A
31	fmdt_currency	int4	10		~*	Currency	fmdt	10	250	250	10			206	10/10/2001 12:25:47.00 EST	source	A
31	fmdt_data_type	int4	10		~*	Data Type	fmdt	10	220	220	10			207	10/10/2001 12:25:48.00 EST	source	A
31	fmdt_date_format	int4	10		~*	Date Format	fmdt	10	230	230	10			208	10/10/2001 12:25:48.00 EST	source	A
31	fmdt_desc	text	30		~*	Desc	fmdt	30	20	20	10			209	10/10/2001 12:25:48.00 EST	source	A
31	fmdt_fg_colour	text	30		~*	Fg Colour	fmdt	30	110	110	10			210	10/10/2001 12:25:49.00 EST	source	A
31	fmdt_field_type	int4	10		~*	Field Type	fmdt	10	30	30	10			211	10/10/2001 12:25:49.00 EST	source	A
31	fmdt_form_code	text	30		~*	Form Code	fmdt	30	10	10	10			212	10/10/2001 12:25:50.00 EST	source	A
31	fmdt_ft_family	text	30		~*	Ft Family	fmdt	30	150	150	10			213	10/10/2001 12:25:50.00 EST	source	A
31	fmdt_ft_italic	int4	10		~*	Ft Italic	fmdt	10	180	180	10			214	10/10/2001 12:25:50.00 EST	source	A
31	fmdt_ft_size	int4	10		~*	Ft Size	fmdt	10	160	160	10			215	10/10/2001 12:25:51.00 EST	source	A
31	fmdt_ft_weight	int4	10		~*	Ft Weight	fmdt	10	170	170	10			216	10/10/2001 12:25:51.00 EST	source	A
31	fmdt_height	int4	10		~*	Height	fmdt	10	90	90	10			217	10/10/2001 12:25:51.00 EST	source	A
31	fmdt_hz_align	int4	10		~*	Hz Align	fmdt	10	190	190	10			218	10/10/2001 12:25:52.00 EST	source	A
31	fmdt_neg_colour	text	30		~*	Neg Colour	fmdt	30	260	260	10			219	10/10/2001 12:25:52.00 EST	source	A
31	fmdt_precision	int4	10		~*	Precision	fmdt	10	240	240	10			220	10/10/2001 12:25:53.00 EST	source	A
31	fmdt_section	int4	10		~*	Section	fmdt	10	40	40	10			221	10/10/2001 12:25:53.00 EST	source	A
31	fmdt_text	text	30		~*	Text	fmdt	30	50	50	10			222	10/10/2001 12:25:53.00 EST	source	A
31	fmdt_vt_align	int4	10		~*	Vt Align	fmdt	10	200	200	10			223	10/10/2001 12:25:54.00 EST	source	A
31	fmdt_width	int4	10		~*	Width	fmdt	10	80	80	10			224	10/10/2001 12:25:54.00 EST	source	A
31	fmdt_word_wrap	int4	10		~*	Word Wrap	fmdt	10	210	210	10			225	10/10/2001 12:25:55.00 EST	source	A
31	fmdt_x_coord	int4	10		~*	X Coord	fmdt	10	60	60	10			226	10/10/2001 12:25:55.00 EST	source	A
31	fmdt_y_coord	int4	10		~*	Y Coord	fmdt	10	70	70	10			227	10/10/2001 12:25:55.00 EST	source	A
2	cred_invc__sequence	integer	0		=	Invoice Serial Number	cred	30	10	20	RO	=invc__sequence		1797	19/10/2001 12:25:33.00 EST	source	A
2	cred_paym__sequence	integer	0		=	Payment Serial Number	cred	30	10	10	RO	=paym__sequence		1798	19/10/2001 12:25:34.00 EST	source	A
2	dbtr__sequence	integer	0		=	Row-ID	dbtr	30	0	200	SYSTEM			1799	19/10/2001 12:25:38.00 EST	source	A
2	dbtr__status	char	0		~*	Record status	dbtr	30	0	230	SYSTEM			1800	19/10/2001 12:25:38.00 EST	source	A
2	dbtr__timestamp	datetime	0		=	Timestamp	dbtr	30	0	210	SYSTEM			1801	19/10/2001 12:25:39.00 EST	source	A
2	dbtr__user_entry	text	0		~*	Entered by	dbtr	30	0	220				1802	19/10/2001 12:25:39.00 EST	source	A
2	dbtr_address	text	0		~*	Street	dbtr	60	10	40	40			1803	19/10/2001 12:25:40.00 EST	source	A
2	dbtr_code	text	0		~*	Code	dbtr	12	10	20	40			1804	19/10/2001 12:25:40.00 EST	source	A
2	dbtr_name	text	0		~*	Name	dbtr	60	10	30	40			1805	19/10/2001 12:25:40.00 EST	source	A
2	dbtr_phone	text	0		~*	Phone	dbtr	60	10	80	40			1806	19/10/2001 12:25:41.00 EST	source	A
2	dbtr_postcode	text	0		~*	Postcode	dbtr	4	10	60	40			1807	19/10/2001 12:25:41.00 EST	source	A
2	dbtr_state	text	0		~*	State	dbtr	60	10	70	40			1808	19/10/2001 12:25:41.00 EST	source	A
2	dbtr_suburb	text	0		~*	Suburb	dbtr	60	10	50	40			1809	19/10/2001 12:25:42.00 EST	source	A
2	diag__sequence	integer	0		=	Row-ID	diag	30	0	200	SYSTEM			1810	19/10/2001 12:25:48.00 EST	source	A
2	diag__status	char	0		~*	Record status	diag	30	0	230	SYSTEM			1811	19/10/2001 12:25:48.00 EST	source	A
2	diag__timestamp	datetime	0		=	Timestamp	diag	30	0	210	SYSTEM			1812	19/10/2001 12:25:49.00 EST	source	A
2	diag__user_entry	text	0		~*	Entered by	diag	30	0	220				1813	19/10/2001 12:25:49.00 EST	source	A
2	diag_date_end	datetime	0		=	End date	diag	30	30	50	30			1814	19/10/2001 12:25:49.00 EST	source	A
2	diag_date_start	datetime	0		=	Start date	diag	30	30	40	30			1815	19/10/2001 12:25:50.00 EST	source	A
2	diag_desc	text	0		~*	Description	diag	30	30	60	30			1816	19/10/2001 12:25:50.00 EST	source	A
31	mtfn__status	bpchar	0		~*	foreign__status	mtfn	10	0	200	10	N		155	10/10/2001 12:25:15.00 EST	source	A
31	mtfn__timestamp	datetime	0		~*	foreign__timestamp	mtfn	10	0	200	10	now		156	10/10/2001 12:25:16.00 EST	source	A
31	mtfn__user_entry	text	0		~*	foreign__user_entry	mtfn	10	0	200	10	CURRENT_USER		157	10/10/2001 12:25:16.00 EST	source	A
31	mtfn_title	text	0	not null	~*	Title	mtfn	30	10	10	10	New Foreign Relationship		162	10/10/2001 12:25:18.00 EST	source	A
31	mtrl__sequence	int4	0		~*	relation__sequence	mtrl	10	0	200	10			164	10/10/2001 12:25:23.00 EST	source	A
31	mtrl__status	bpchar	0		~*	relation__status	mtrl	10	0	200	10	N		165	10/10/2001 12:25:24.00 EST	source	A
31	mtrl__timestamp	datetime	0		~*	relation__timestamp	mtrl	10	0	200	10	now		166	10/10/2001 12:25:24.00 EST	source	A
31	mtrl__user_entry	text	0		~*	relation__user_entry	mtrl	10	0	200	10	CURRENT_USER		167	10/10/2001 12:25:25.00 EST	source	A
31	mtrl_join	text	0		~*	Child Class Key	mtrl	20	50	50	10			168	10/10/2001 12:25:25.00 EST	source	A
31	mtrl_key	text	0		~*	Master Class Key	mtrl	30	30	30	10			169	10/10/2001 12:25:25.00 EST	source	A
31	mtrl_title	text	0		~*	Relation Title	mtrl	30	10	10	10			172	10/10/2001 12:25:27.00 EST	source	A
31	form__sequence	int4	10		~*	ID Sequence #	form	10	180	180	SYSTEM			173	10/10/2001 12:25:31.00 EST	source	A
31	form__status	bpchar	1		~*	Status	form	10	210	210	SYSTEM			174	10/10/2001 12:25:31.00 EST	source	A
31	form__timestamp	timestamp	47		~*	Timestamp	form	10	190	190	SYSTEM			175	10/10/2001 12:25:32.00 EST	source	A
31	form__user_entry	text	30		~*	User Entry	form	10	200	200	SYSTEM			176	10/10/2001 12:25:32.00 EST	source	A
31	form_classname	text	1		=	Base Class	form	10	22	22	10			177	10/10/2001 12:25:33.00 EST	source	A
31	form_code	text	30		~*	Code	form	10	10	10	10			178	10/10/2001 12:25:33.00 EST	source	A
31	form_desc	text	30		~*	Description	form	10	20	20	10			179	10/10/2001 12:25:33.00 EST	source	A
31	form_dt_height	int4	10		~*	Detail Height	form	10	170	170	10			180	10/10/2001 12:25:34.00 EST	source	A
31	form_includes	text	30		~*	Include	form	10	26	26	10			181	10/10/2001 12:25:34.00 EST	source	A
31	form_mg_bottom	int4	10		~*	Bottom Margin	form	10	60	60	10			182	10/10/2001 12:25:35.00 EST	source	A
31	form_mg_left	int4	10		~*	Left Margin	form	10	70	70	10			183	10/10/2001 12:25:35.00 EST	source	A
31	form_mg_right	int4	10		~*	Right Maring	form	10	80	80	10			184	10/10/2001 12:25:35.00 EST	source	A
31	form_mg_top	int4	10		~*	Top Margin	form	10	50	50	10			185	10/10/2001 12:25:36.00 EST	source	A
31	form_orientation	int4	10		~*	Orientation	form	10	40	40	10			186	10/10/2001 12:25:36.00 EST	source	A
31	form_page_attribute	text	1		=	Page by	form	10	24	24	10			187	10/10/2001 12:25:36.00 EST	source	A
31	form_pagesize	int4	10		~*	Pagesize	form	10	30	30	10			188	10/10/2001 12:25:37.00 EST	source	A
31	form_pf_frequency	int4	10		~*	Page Footer Frequency	form	10	160	160	10			189	10/10/2001 12:25:37.00 EST	source	A
31	form_pf_height	int4	10		~*	Page Footer Height	form	10	150	150	10			190	10/10/2001 12:25:38.00 EST	source	A
31	form_ph_frequency	int4	10		~*	Page Header Frequency	form	10	140	140	10			191	10/10/2001 12:25:38.00 EST	source	A
31	form_ph_height	int4	10		~*	Page Header Height	form	10	130	130	10			192	10/10/2001 12:25:38.00 EST	source	A
31	form_rf_frequency	int4	10		~*	Report Footer Frequency	form	10	120	120	10			193	10/10/2001 12:25:39.00 EST	source	A
31	form_rf_height	int4	10		~*	Report Footer Height	form	10	110	110	10			194	10/10/2001 12:25:39.00 EST	source	A
31	form_rh_frequency	int4	10		~*	Report Header Frequency	form	10	100	100	10			195	10/10/2001 12:25:40.00 EST	source	A
31	form_rh_height	int4	10		~*	Report Header Height	form	10	90	90	10			196	10/10/2001 12:25:40.00 EST	source	A
31	fmdt__sequence	int4	10		~*	Sequence	fmdt	10	280	280	SYSTEM			197	10/10/2001 12:25:44.00 EST	source	A
31	fmdt__status	bpchar	1		~*	Status	fmdt	1	310	310	SYSTEM			198	10/10/2001 12:25:44.00 EST	source	A
31	fmdt__timestamp	timestamp	47		~*	Timestamp	fmdt	47	290	290	SYSTEM			199	10/10/2001 12:25:45.00 EST	source	A
31	mtsv_name	text	30	\N	~*	Name	mtsv	30	10	10	10			110	10/10/2001 12:24:25.00 EST	source	A
31	mtsv_master_class	text	30	\N	~*	Master Class	mtsv	30	20	20	10			111	10/10/2001 12:24:25.00 EST	source	A
31	mtsv_key	text	30	\N	~*	Key	mtsv	30	30	30	10			112	10/10/2001 12:24:25.00 EST	source	A
31	mtsv_other_class	text	30	\N	~*	Other Class	mtsv	30	40	40	10			113	10/10/2001 12:24:25.00 EST	source	A
31	mtsv_join	text	30	\N	~*	Join	mtsv	30	50	50	10			114	10/10/2001 12:24:25.00 EST	source	A
31	mtsv__sequence	oid	10	\N	~*	Sequence	mtsv	10	60	60	SYSTEM			115	10/10/2001 12:24:25.00 EST	source	A
31	mtsv__timestamp	timestamp	47	\N	~*	Timestamp	mtsv	47	70	70	SYSTEM			116	10/10/2001 12:24:25.00 EST	source	A
31	mtsv__user_entry	name	32	\N	~*	User Entry	mtsv	32	80	80	SYSTEM			117	10/10/2001 12:24:25.00 EST	source	A
31	mtsv__status	bpchar	1	\N	~*	Status	mtsv	1	90	90	SYSTEM			118	10/10/2001 12:24:25.00 EST	source	A
31	mtcl__sequence	int4	0		~*	class__sequence	mtcl	10	0	200	SYSTEM			119	10/10/2001 12:24:49.00 EST	source	A
31	mtcl__status	bpchar	0		~*	class__status	mtcl	10	0	200	SYSTEM	N		120	10/10/2001 12:24:50.00 EST	source	A
31	mtcl__user_entry	text	0		~*	class__user_entry	mtcl	10	0	200	10	CURRENT_USER		122	10/10/2001 12:24:50.00 EST	source	A
31	mtcl_extras	text	0		~*	Extra Code	mtcl	30	110	110	10			124	10/10/2001 12:24:51.00 EST	source	A
2	accl__sequence	integer	0		=	Row-ID	accl	30	0	200	SYSTEM			1708	19/10/2001 12:24:26.00 EST	source	A
2	accl__status	char	0		~*	Record status	accl	30	0	230	SYSTEM			1709	19/10/2001 12:24:27.00 EST	source	A
2	accl__timestamp	datetime	0		=	Timestamp	accl	30	0	210	SYSTEM			1710	19/10/2001 12:24:27.00 EST	source	A
2	accl__user_entry	text	0		~*	Entered by	accl	30	0	220				1711	19/10/2001 12:24:28.00 EST	source	A
2	accl_code	text	0		~*	Code	accl	30	10	10	10			1712	19/10/2001 12:24:28.00 EST	source	A
2	accl_desc	text	0		~*	Description	accl	20	20	20				1713	19/10/2001 12:24:28.00 EST	source	A
31	bank__sequence	int4	1		~*	Row-ID	bank	10	10	1000	SYSTEM			1714	19/10/2001 12:24:32.00 EST	source	A
31	bank__status	bpchar	1		~*	Status	bank	1	10	1000	SYSTEM			1715	19/10/2001 12:24:32.00 EST	source	A
31	bank__timestamp	timestamp	1		~*	Timestamp	bank	10	10	1000	SYSTEM			1716	19/10/2001 12:24:33.00 EST	source	A
31	bank__user_entry	text	1		~*	Entered By	bank	10	10	1000	RO			1717	19/10/2001 12:24:33.00 EST	source	A
31	bank_account	text	1		~*	Account	bank	30	10	100	10			1718	19/10/2001 12:24:33.00 EST	source	A
31	bank_address	text	1		~*	Business - Address	bank	30	10	30	10			1719	19/10/2001 12:24:34.00 EST	source	A
31	bank_bank	text	1		~*	Bank	bank	30	10	110	10			1720	19/10/2001 12:24:34.00 EST	source	A
31	bank_branch	text	1		~*	Branch	bank	30	10	120	10			1721	19/10/2001 12:24:35.00 EST	source	A
31	bank_code	text	1		~*	Code	bank	10	10	10	10			1722	19/10/2001 12:24:35.00 EST	source	A
31	bank_name	text	1		~*	Business - Name	bank	30	10	20	10			1723	19/10/2001 12:24:36.00 EST	source	A
31	bank_phone	text	1		~*	Phone	bank	30	10	70	10			1724	19/10/2001 12:24:36.00 EST	source	A
31	mtat_browse_order	int4	0		~*	Browse Order	mtat	5	100	100	100	900		142	10/10/2001 12:25:04.00 EST	source	A
31	mtat_default	text	0		~*	Default	mtat	30	130	130	10			144	10/10/2001 12:25:05.00 EST	source	A
31	mtat_displen	int4	0		~*	Display Length	mtat	5	90	90	5	10		145	10/10/2001 12:25:06.00 EST	source	A
31	mtat_htmltagatt	text	0		~*	HTML Tag	mtat	30	140	140	10			146	10/10/2001 12:25:07.00 EST	source	A
31	mtat_input_method	text	0		~*	Input Method	mtat	30	120	120	10			147	10/10/2001 12:25:07.00 EST	source	A
31	mtat_view_order	int4	0		~*	View Order	mtat	5	110	110	10	900		153	10/10/2001 12:25:10.00 EST	source	A
31	mtfn__sequence	int4	0		~*	foreign__sequence	mtfn	10	0	200	10			154	10/10/2001 12:25:15.00 EST	source	A
2	diag_epsdserl	integer	0		=	Episode Serial Number	diag	30	10	10				1817	19/10/2001 12:25:51.00 EST	source	A
31	bank_state	text	1		~*	State	bank	30	10	60	10			1726	19/10/2001 12:24:37.00 EST	source	A
31	bank_suburb	text	1		~*	Business -  Suburb	bank	30	10	40	10			1727	19/10/2001 12:24:37.00 EST	source	A
2	bkdp__sequence	integer	0		=	List-ID	bkdp	30	0	5	RO			1728	19/10/2001 12:24:42.00 EST	source	A
2	bkdp__status	char	0		~*	Record status	bkdp	30	0	230	SYSTEM			1729	19/10/2001 12:24:42.00 EST	source	A
2	bkdp__timestamp	datetime	0		=	Timestamp	bkdp	30	0	210	SYSTEM			1730	19/10/2001 12:24:43.00 EST	source	A
2	bkdp__user_entry	text	0		~*	Entered by	bkdp	30	0	220	SYSTEM			1731	19/10/2001 12:24:43.00 EST	source	A
2	bkdp_amount	numeric(12,2)	1		~*	Total amount	bkdp	10	18	18	RO			1732	19/10/2001 12:24:43.00 EST	source	A
2	bkdp_bank_code	text	1		~*	Bank Account	bkdp	10	22	22		-		1733	19/10/2001 12:24:44.00 EST	source	A
2	bkdp_date_created	text	0		~*	Date Created	bkdp	30	10	10	RO			1734	19/10/2001 12:24:44.00 EST	source	A
2	bkdp_date_printed	date	0		=	Date Printed	bkdp	30	20	20	RO			1735	19/10/2001 12:24:45.00 EST	source	A
2	bkdp_desc	text	1		~*	Annotation	bkdp	10	16	16		New Bank List		1736	19/10/2001 12:24:45.00 EST	source	A
2	bkdp_user_printed	text	0		~*	Printed by user	bkdp	30	30	30	RO			1737	19/10/2001 12:24:45.00 EST	source	A
2	cash__sequence	integer	0		=	Row-ID	cash	30	0	200	SYSTEM			1738	19/10/2001 12:24:49.00 EST	source	A
2	cash__status	char	0		~*	Record status	cash	30	0	230	SYSTEM			1739	19/10/2001 12:24:50.00 EST	source	A
2	cash__timestamp	datetime	0		=	Timestamp	cash	30	0	210	SYSTEM			1740	19/10/2001 12:24:50.00 EST	source	A
2	cash__user_entry	text	0		~*	Entered by	cash	30	0	220				1741	19/10/2001 12:24:51.00 EST	source	A
31	bank_postcode	text	1		~*	Business - Postcode	bank	10	10	50	10			1725	19/10/2001 12:24:36.00 EST	source	A
31	gstv__sequence	int4	10		~*	Sequence	gstv	10	540	540	SYSTEM			2450	23/10/2001 15:35:03.00 EST	source	A
31	gstv__status	bpchar	1		~*	Status	gstv	1	570	570	SYSTEM			2451	23/10/2001 15:35:03.00 EST	source	A
31	gstv__timestamp	timestamp	47		~*	Timestamp	gstv	47	550	550	SYSTEM			2452	23/10/2001 15:35:03.00 EST	source	A
31	gstv__user_entry	text	30		~*	User Entry	gstv	30	560	560	SYSTEM			2453	23/10/2001 15:35:04.00 EST	source	A
31	gstv_bkdp_amount	numeric	786434		~*	Bkdp Amount	gstv	786434	200	200	SYSTEM			2454	23/10/2001 15:35:04.00 EST	source	A
31	gstv_bkdp_bank_code	text	30		~*	Bkdp Bank Code	gstv	30	180	180	SYSTEM			2455	23/10/2001 15:35:04.00 EST	source	A
31	cnrt_last_date	timestamp	47		~*	Last paid date	cnrt	10	90	90	10			1769	19/10/2001 12:25:13.00 EST	source	A
31	gstv_invc_date_created	timestamp	47		~*	Invc Date Created	gstv	10	300	300	SYSTEM			2474	23/10/2001 15:35:10.00 EST	source	A
31	gstv_bkdp_desc	text	30		~*	Bkdp Desc	gstv	30	190	190	SYSTEM			2458	23/10/2001 15:35:05.00 EST	source	A
31	gstv_bkdp_user_printed	text	30		~*	Bkdp User Printed	gstv	30	170	170	SYSTEM			2459	23/10/2001 15:35:05.00 EST	source	A
31	gstv_cred_amount	numeric	786434		~*	Credit Amount	gstv	786434	30	180	RO			2460	23/10/2001 15:35:06.00 EST	source	A
31	gstv_cred_gst_amount	numeric	786434		~*	GST Amount	gstv	786434	40	15	RO			2461	23/10/2001 15:35:06.00 EST	source	A
31	gstv_cred_invc__sequence	int4	10		~*	Invoice Number	gstv	10	20	60	RO			2462	23/10/2001 15:35:06.00 EST	source	A
31	gstv_cred_paym__sequence	int4	10		~*	Payment Number	gstv	10	10	70	RO			2463	23/10/2001 15:35:07.00 EST	source	A
31	gstv_day_date	text	30		~*	Bank Date	gstv	30	50	10	RO			2464	23/10/2001 15:35:07.00 EST	source	A
31	gstv_dbtr_address	text	30		~*	Dbtr Address	gstv	30	490	490	SYSTEM			2465	23/10/2001 15:35:07.00 EST	source	A
2	cash_amount	numeric(12,2)	0		=	Amount	cash	30	40	40	40			1742	19/10/2001 12:24:51.00 EST	source	A
2	cash_creditor	text	0		~*	Creditor	cash	30	20	20				1743	19/10/2001 12:24:52.00 EST	source	A
2	cash_date	date	0		=	Date of assignment	cash	30	30	30				1744	19/10/2001 12:24:52.00 EST	source	A
2	cash_paym__sequence	integer	0		=	Payment ID	cash	30	10	10				1745	19/10/2001 12:24:52.00 EST	source	A
2	cash_text	text	0		~*	Annotation	cash	30	50	50	50			1746	19/10/2001 12:24:53.00 EST	source	A
2	clsp__sequence	integer	0		=	Row-ID	clsp	30	0	200	SYSTEM			1747	19/10/2001 12:24:56.00 EST	source	A
2	clsp__status	char	0		~*	Record status	clsp	30	0	230	SYSTEM			1748	19/10/2001 12:24:57.00 EST	source	A
2	clsp__timestamp	datetime	0		=	Timestamp	clsp	30	0	210	SYSTEM			1749	19/10/2001 12:24:57.00 EST	source	A
2	clsp__user_entry	text	0		~*	Entered by	clsp	30	0	220				1750	19/10/2001 12:24:58.00 EST	source	A
2	clsp_code	text	0		~*	Code	clsp	30	10	10	10			1751	19/10/2001 12:24:58.00 EST	source	A
2	clsp_desc	text	0		~*	Description	clsp	30	20	20	20			1752	19/10/2001 12:24:58.00 EST	source	A
2	clst__sequence	integer	0		=	Row-ID	clst	30	0	200	SYSTEM			1753	19/10/2001 12:25:02.00 EST	source	A
2	clst__status	char	0		~*	Record status	clst	30	0	230	SYSTEM			1754	19/10/2001 12:25:02.00 EST	source	A
2	clst__timestamp	datetime	0		=	Timestamp	clst	30	0	210	SYSTEM			1755	19/10/2001 12:25:02.00 EST	source	A
2	clst__user_entry	text	0		~*	Entered by	clst	30	0	220				1756	19/10/2001 12:25:03.00 EST	source	A
2	clst_feet_code	text	0		~*	Fee level	clst	30	20	20	20			1757	19/10/2001 12:25:03.00 EST	source	A
2	clst_serv_code_child	text	0		~*	Service code	clst	30	10	10	10			1758	19/10/2001 12:25:04.00 EST	source	A
2	clst_serv_code_parent	text	0		~*	Cluster Code	clst	30	5	5	5			1759	19/10/2001 12:25:04.00 EST	source	A
31	cnrt__sequence	int4	10		~*	Sequence	cnrt	10	120	120	SYSTEM			1760	19/10/2001 12:25:09.00 EST	source	A
31	cnrt__status	bpchar	1		~*	Status	cnrt	1	150	150	SYSTEM			1761	19/10/2001 12:25:10.00 EST	source	A
31	cnrt__timestamp	timestamp	47		~*	Timestamp	cnrt	47	130	130	SYSTEM			1762	19/10/2001 12:25:10.00 EST	source	A
31	cnrt__user_entry	text	30		~*	User Entry	cnrt	30	140	140	SYSTEM			1763	19/10/2001 12:25:10.00 EST	source	A
31	cnrt_amount	numeric	786434		~*	Total Amount	cnrt	786434	20	20	10			1764	19/10/2001 12:25:11.00 EST	source	A
31	cnrt_balance	numeric	786434		~*	Balance	cnrt	786434	100	100	RO			1765	19/10/2001 12:25:11.00 EST	source	A
31	cnrt_count	int4	10		~*	# Payments	cnrt	10	40	40	10			1766	19/10/2001 12:25:12.00 EST	source	A
31	gstv_invc_date_printed	timestamp	47		~*	Invc Date Printed	gstv	10	310	310	SYSTEM			2475	23/10/2001 15:35:10.00 EST	source	A
31	cnrt_first_installment	numeric	786434		~*	First amount	cnrt	786434	70	70	10			1768	19/10/2001 12:25:12.00 EST	source	A
31	gstv_invc_date_reprint	timestamp	47		~*	Invc Date Reprint	gstv	10	320	320	SYSTEM			2476	23/10/2001 15:35:10.00 EST	source	A
31	cnrt_other_installment	numeric	786434		~*	Other amounts	cnrt	786434	80	80	10			1770	19/10/2001 12:25:13.00 EST	source	A
31	cnrt_patn__sequence	int4	10		~*	Patient ID	cnrt	10	10	115	RO			1771	19/10/2001 12:25:14.00 EST	source	A
31	gstv_dbtr_code	text	30		~*	Dbtr Code	gstv	30	470	470	SYSTEM			2466	23/10/2001 15:35:07.00 EST	source	A
31	gstv_dbtr_name	text	30		~*	Debtor Name	gstv	30	480	50	RO			2467	23/10/2001 15:35:08.00 EST	source	A
31	gstv_dbtr_phone	text	30		~*	Dbtr Phone	gstv	30	530	530	SYSTEM			2468	23/10/2001 15:35:08.00 EST	source	A
31	gstv_dbtr_postcode	text	30		~*	Dbtr Postcode	gstv	30	510	510	SYSTEM			2469	23/10/2001 15:35:08.00 EST	source	A
31	gstv_dbtr_state	text	30		~*	Dbtr State	gstv	30	520	520	SYSTEM			2470	23/10/2001 15:35:08.00 EST	source	A
31	gstv_dbtr_suburb	text	30		~*	Dbtr Suburb	gstv	30	500	500	SYSTEM			2471	23/10/2001 15:35:09.00 EST	source	A
31	gstv_invc_amount	numeric	786434		~*	Invoice Amount	gstv	786434	330	330	RO			2472	23/10/2001 15:35:09.00 EST	source	A
31	gstv_invc_bank_code	text	30		~*	Invc Bank Code	gstv	30	220	220	SYSTEM			2473	23/10/2001 15:35:09.00 EST	source	A
31	gstv_invc_rfdr_date	timestamp	47		~*	Invc Rfdr Date	gstv	10	280	280	SYSTEM			2486	23/10/2001 15:35:13.00 EST	source	A
31	gstv_paym_date_entry	timestamp	47		~*	Payment Date	gstv	10	50	150	RO			2502	23/10/2001 15:35:17.00 EST	source	A
31	eftv_tdtp_subtotal	text	30		~*	Tdtp Subtotal	eftv	30	80	80	10			2700	09/02/2002 08:01:42.00 EST	source	A
31	gstv_invc_dbtr_code	text	30		~*	Debtor Code	gstv	30	210	40	RO			2477	23/10/2001 15:35:10.00 EST	source	A
31	gstv_invc_empl_code	text	30		~*	Invc Empl Code	gstv	30	250	250	SYSTEM			2478	23/10/2001 15:35:11.00 EST	source	A
31	gstv_invc_feet_code	text	30		~*	Invc Feet Code	gstv	30	260	260	SYSTEM			2479	23/10/2001 15:35:11.00 EST	source	A
31	gstv_invc_gst_amount	numeric	786434		~*	Invoice GST Amount	gstv	786434	350	350	RO			2480	23/10/2001 15:35:11.00 EST	source	A
31	gstv_invc_paid_amount	numeric	786434		~*	Invoice Paid	gstv	786434	340	340	RO			2481	23/10/2001 15:35:12.00 EST	source	A
31	gstv_invc_paid_gst_amount	numeric	786434		~*	Invoice Paid GST Amount	gstv	786434	360	360	RO			2482	23/10/2001 15:35:12.00 EST	source	A
31	gstv_invc_patn__sequence	int4	10		~*	Patient ID	gstv	10	240	20	RO			2483	23/10/2001 15:35:12.00 EST	source	A
31	gstv_invc_prov_code	text	30		~*	Invc Prov Code	gstv	30	230	230	SYSTEM			2484	23/10/2001 15:35:12.00 EST	source	A
31	gstv_invc_rfdr_code	text	30		~*	Invc Rfdr Code	gstv	30	270	270	SYSTEM			2485	23/10/2001 15:35:13.00 EST	source	A
31	eftv_user_entry	text	30		~*	User Entry	eftv	30	30	30	10			2701	09/02/2002 08:01:42.00 EST	source	A
31	gstv_invc_rfdr_period	text	30		~*	Invc Rfdr Period	gstv	30	290	290	SYSTEM			2487	23/10/2001 15:35:13.00 EST	source	A
31	gstv_patn_address	text	30		~*	Patn Address	gstv	30	430	430	SYSTEM			2488	23/10/2001 15:35:13.00 EST	source	A
31	gstv_patn_dob	text	30		~*	Patn Dob	gstv	30	420	420	SYSTEM			2489	23/10/2001 15:35:14.00 EST	source	A
31	gstv_patn_flno	text	30		~*	Patn Flno	gstv	30	380	380	SYSTEM			2490	23/10/2001 15:35:14.00 EST	source	A
31	gstv_patn_fsnam	text	30		~*	Patient Firstname	gstv	30	400	400	RO			2491	23/10/2001 15:35:14.00 EST	source	A
31	gstv_patn_phone	text	30		~*	Patn Phone	gstv	30	470	470	SYSTEM			2492	23/10/2001 15:35:15.00 EST	source	A
31	gstv_patn_postcode	text	30		~*	Patn Postcode	gstv	30	460	460	SYSTEM			2493	23/10/2001 15:35:15.00 EST	source	A
31	gstv_patn_psnam	text	30		~*	Surname	gstv	30	390	30	RO			2494	23/10/2001 15:35:15.00 EST	source	A
31	gstv_patn_state	text	30		~*	Patn State	gstv	30	450	450	SYSTEM			2495	23/10/2001 15:35:15.00 EST	source	A
31	gstv_patn_suburb	text	30		~*	Patn Suburb	gstv	30	440	440	SYSTEM			2496	23/10/2001 15:35:16.00 EST	source	A
31	gstv_patn_title	text	30		~*	Patn Title	gstv	30	410	410	SYSTEM			2497	23/10/2001 15:35:16.00 EST	source	A
31	gstv_paym_amount	numeric	786434		~*	Total Payment Amount	gstv	786434	80	80	RO			2498	23/10/2001 15:35:16.00 EST	source	A
31	gstv_paym_bank	text	30		~*	Bank	gstv	30	110	110	RO			2499	23/10/2001 15:35:16.00 EST	source	A
31	gstv_paym_bkdp__sequence	int4	10		~*	Bank Batch ID	gstv	10	130	130	RO			2500	23/10/2001 15:35:17.00 EST	source	A
31	gstv_paym_branch	text	30		~*	Branch	gstv	30	120	120	RO			2501	23/10/2001 15:35:17.00 EST	source	A
31	patf__sequence	int4	10		~*	Sequence	patf	10	30	30	SYSTEM			2702	09/02/2002 08:01:44.00 EST	source	A
31	gstv_paym_drawer	text	30		~*	Drawer	gstv	30	100	100	RO			2503	23/10/2001 15:35:18.00 EST	source	A
31	gstv_paym_site_entry	text	30		~*	Paym Site Entry	gstv	30	70	170	SYSTEM			2504	23/10/2001 15:35:18.00 EST	source	A
31	gstv_paym_tdtp_code	text	30		~*	Tender	gstv	30	90	90	RO			2505	23/10/2001 15:35:18.00 EST	source	A
31	gstv_paym_user_entry	text	30		~*	Paym User Entry	gstv	30	60	160	SYSTEM			2506	23/10/2001 15:35:18.00 EST	source	A
31	gstv_quarter_date	text	30		~*	Quarter Date	gstv	30	140	4	RO			2507	23/10/2001 15:35:19.00 EST	source	A
2	patv_dob	timestamp	0		=	Date of birth	patv	10	10	60	40			2402	19/10/2001 12:33:32.00 EST	source	A
31	crep_date_created	timestamp	47		~*	Invoice Created	crep	10	10	200	RO			2246	19/10/2001 12:32:13.00 EST	source	A
31	crep_date_printed	timestamp	47		~*	Invoice Printed	crep	10	10	210	RO			2247	19/10/2001 12:32:13.00 EST	source	A
31	patf__status	bpchar	1		~*	Status	patf	1	60	60	SYSTEM			2703	09/02/2002 08:01:44.00 EST	source	A
31	patf__timestamp	timestamp	47		~*	Timestamp	patf	47	40	40	SYSTEM			2704	09/02/2002 08:01:45.00 EST	source	A
31	patf__user_entry	text	30		~*	User Entry	patf	30	50	50	SYSTEM			2705	09/02/2002 08:01:45.00 EST	source	A
31	patf_code	text	30		~*	Code	patf	30	10	10	10			2706	09/02/2002 08:01:45.00 EST	source	A
31	patf_desc	text	30		~*	Description	patf	30	20	20	10			2707	09/02/2002 08:01:46.00 EST	source	A
31	eftr__sequence	int4	10		~*	Sequence	eftr	10	40	40	SYSTEM			2657	09/02/2002 08:01:28.00 EST	source	A
31	eftr__status	bpchar	1		~*	Status	eftr	1	70	70	SYSTEM			2658	09/02/2002 08:01:29.00 EST	source	A
31	eftr__timestamp	timestamp	47		~*	Timestamp	eftr	47	50	50	SYSTEM			2659	09/02/2002 08:01:29.00 EST	source	A
31	eftr__user_entry	text	30		~*	User Entry	eftr	30	60	60	SYSTEM			2660	09/02/2002 08:01:29.00 EST	source	A
31	eftr_date_created	timestamp	47		~*	Date Created	eftr	47	10	10	10			2661	09/02/2002 08:01:29.00 EST	source	A
31	eftr_first__sequence	int4	10		~*	First  Sequence	eftr	10	20	20	10			2662	09/02/2002 08:01:30.00 EST	source	A
31	eftr_last__sequence	int4	10		~*	Last  Sequence	eftr	10	30	30	10			2663	09/02/2002 08:01:30.00 EST	source	A
31	eftv__sequence	int4	10		~*	Sequence	eftv	10	340	340	SYSTEM			2664	09/02/2002 08:01:32.00 EST	source	A
31	eftv__status	bpchar	1		~*	Status	eftv	1	370	370	SYSTEM			2665	09/02/2002 08:01:32.00 EST	source	A
31	eftv__timestamp	timestamp	47		~*	Timestamp	eftv	47	350	350	SYSTEM			2666	09/02/2002 08:01:32.00 EST	source	A
31	eftv__user_entry	text	30		~*	User Entry	eftv	30	360	360	SYSTEM			2667	09/02/2002 08:01:33.00 EST	source	A
31	eftv_bank	text	30		~*	Bank	eftv	30	130	130	10			2668	09/02/2002 08:01:33.00 EST	source	A
31	eftv_bank_account	text	30		~*	Bank Account	eftv	30	330	330	10			2669	09/02/2002 08:01:33.00 EST	source	A
31	eftv_bank_address	text	30		~*	Bank Address	eftv	30	260	260	10			2670	09/02/2002 08:01:34.00 EST	source	A
31	eftv_bank_bank	text	30		~*	Bank Bank	eftv	30	310	310	10			2671	09/02/2002 08:01:34.00 EST	source	A
31	eftv_bank_branch	text	30		~*	Bank Branch	eftv	30	320	320	10			2672	09/02/2002 08:01:34.00 EST	source	A
31	eftv_bank_code	text	30		~*	Bank Code	eftv	30	240	240	10			2673	09/02/2002 08:01:34.00 EST	source	A
31	eftv_bank_name	text	30		~*	Bank Name	eftv	30	250	250	10			2674	09/02/2002 08:01:35.00 EST	source	A
31	eftv_bank_phone	text	30		~*	Bank Phone	eftv	30	300	300	10			2675	09/02/2002 08:01:35.00 EST	source	A
31	eftv_bank_postcode	text	30		~*	Bank Postcode	eftv	30	290	290	10			2676	09/02/2002 08:01:35.00 EST	source	A
31	eftv_bank_state	text	30		~*	Bank State	eftv	30	280	280	10			2677	09/02/2002 08:01:35.00 EST	source	A
31	eftv_bank_suburb	text	30		~*	Bank Suburb	eftv	30	270	270	10			2678	09/02/2002 08:01:36.00 EST	source	A
31	eftv_bkdp__sequence	int4	10		~*	Bkdp  Sequence	eftv	10	10	10	10			2679	09/02/2002 08:01:36.00 EST	source	A
31	eftv_branch	text	30		~*	Branch	eftv	30	140	140	10			2680	09/02/2002 08:01:36.00 EST	source	A
31	eftv_cred_amount	numeric	786434		~*	Cred Amount	eftv	786434	170	170	10			2681	09/02/2002 08:01:37.00 EST	source	A
31	eftv_cred_gst_amount	numeric	786434		~*	Cred Gst Amount	eftv	786434	180	180	10			2682	09/02/2002 08:01:37.00 EST	source	A
31	eftv_date_entry	text	30		~*	Date Entry	eftv	30	20	20	10			2683	09/02/2002 08:01:37.00 EST	source	A
31	eftv_dbtr_code	text	30		~*	Dbtr Code	eftv	30	220	220	10			2684	09/02/2002 08:01:37.00 EST	source	A
31	eftv_dbtr_name	text	30		~*	Dbtr Name	eftv	30	230	230	10			2685	09/02/2002 08:01:38.00 EST	source	A
31	eftv_drawer	text	30		~*	Drawer	eftv	30	120	120	10			2686	09/02/2002 08:01:38.00 EST	source	A
31	eftv_eftr__sequence	int4	10		~*	Eftr  Sequence	eftv	10	10	10	10			2687	09/02/2002 08:01:38.00 EST	source	A
31	eftv_invc__sequence	int4	10		~*	Invc  Sequence	eftv	10	160	160	10			2688	09/02/2002 08:01:39.00 EST	source	A
31	eftv_patn__sequence	int4	10		~*	Patn  Sequence	eftv	10	190	190	10			2689	09/02/2002 08:01:39.00 EST	source	A
31	eftv_patn_fsnam	text	30		~*	Patn Fsnam	eftv	30	210	210	10			2690	09/02/2002 08:01:39.00 EST	source	A
31	eftv_patn_psnam	text	30		~*	Patn Psnam	eftv	30	200	200	10			2691	09/02/2002 08:01:39.00 EST	source	A
31	eftv_paym__sequence	int4	10		~*	Paym  Sequence	eftv	10	150	150	10			2692	09/02/2002 08:01:40.00 EST	source	A
31	eftv_paym_amount	numeric	786434		~*	Paym Amount	eftv	786434	50	50	10			2693	09/02/2002 08:01:40.00 EST	source	A
31	eftv_site_entry	text	30		~*	Site Entry	eftv	30	40	40	10			2694	09/02/2002 08:01:40.00 EST	source	A
31	eftv_tdtp_code	text	30		~*	Tdtp Code	eftv	30	60	60	10			2695	09/02/2002 08:01:40.00 EST	source	A
31	dbag_last_statement	text	30	\N	~*	Last Statement	dbag	30	80	80	10			2834	18/04/2002 13:30:20.00 EST	source	A
31	dbag_delay_statement	interval	47	\N	~*	Delay Statement	dbag	47	90	90	10			2835	18/04/2002 13:30:20.00 EST	source	A
31	svpv_ts_service	timestamp	47	\N	~*	Ts Service	svpv	47	20	20	10			2917	05/10/2002 13:46:14.00 EST	source	A
31	svpv_date_printed	date	10	\N	~*	Date Printed	svpv	10	180	180	10			2918	05/10/2002 13:46:14.00 EST	source	A
31	svpv_date_reprint	date	10	\N	~*	Date Reprint	svpv	10	190	190	10			2919	05/10/2002 13:46:14.00 EST	source	A
31	dbag_date	date	10	\N	~*	Date	dbag	10	10	10	10			2839	29/09/2002 05:32:22.00 EST	source	A
31	dbag_patient_key	text	30	\N	~*	Patient Key	dbag	30	90	90	10			2840	29/09/2002 05:32:22.00 EST	source	A
31	dbst_full_address	text	30	\N	~*	Full Address	dbst	30	20	20	10			2841	29/09/2002 05:35:22.00 EST	source	A
31	dbst_patient_key	text	30	\N	~*	Patient Key	dbst	30	100	100	10			2842	29/09/2002 05:35:22.00 EST	source	A
31	dbst_group	text	30	\N	~*	Group	dbst	30	110	110	10			2843	29/09/2002 05:35:22.00 EST	source	A
31	dbst_last_statement	timestamp	47	\N	~*	Last Statement	dbst	47	120	120	10			2844	29/09/2002 05:35:22.00 EST	source	A
31	dbst_last_invoice	date	10	\N	~*	Last Invoice	dbst	10	130	130	10			2845	29/09/2002 05:35:22.00 EST	source	A
31	dbst_delay_statement	interval	47	\N	~*	Delay Statement	dbst	47	140	140	10			2846	29/09/2002 05:35:22.00 EST	source	A
31	svpv_rfdr_period	text	30	\N	~*	Rfdr Period	svpv	30	210	210	10			2920	05/10/2002 13:46:14.00 EST	source	A
31	aptp__timestamp	timestamp	47		~*	Timestamp	aptp	47	50	50	SYSTEM			3171	24/10/2002 04:26:19.00 EST	source	A
31	aptp__user_entry	text	30		~*	User Entry	aptp	30	60	60	SYSTEM			3172	24/10/2002 04:26:20.00 EST	source	A
31	aptp_code	text	30		~*	Code	aptp	30	10	10	10			3173	24/10/2002 04:26:20.00 EST	source	A
31	aptp_colour	text	30		~*	Colour	aptp	10	15	15	COLOUR			3174	24/10/2002 04:26:20.00 EST	source	A
31	aptp_desc	text	30		~*	Description	aptp	30	20	20	10			3175	24/10/2002 04:26:21.00 EST	source	A
31	aptp_duration	int4	10		~*	Duration	aptp	10	30	30	10			3176	24/10/2002 04:26:21.00 EST	source	A
31	aptp_repeat	int4	10		~*	Repeat	aptp	10	50	50	10			3177	24/10/2002 04:26:21.00 EST	source	A
31	aptd_prov_code	text	30		~*	Provider	aptd	30	40	40	FSL=30			3212	25/10/2002 09:52:20.00 EST	source	A
31	aptd_starting	time	10		~*	Starting	aptd	10	110	110	10			3213	25/10/2002 09:52:20.00 EST	source	A
31	aptd_weekofyear	text	30		~*	Week of year	aptd	30	70	70	SELECT=1,Odd Weeks;0,Even Weeks;			3214	25/10/2002 09:52:20.00 EST	source	A
31	aptd_year	int4	10		~*	Year	aptd	10	90	90	SELECT=2002,2002;2003,2003;2004,2004;2005,2005;2006,2006;2007,2007;2008,2008;2009,2009;2010,2010;			3215	25/10/2002 09:52:21.00 EST	source	A
2	prov__sequence	integer	0		=	Row-ID	prov	30	0	200	SYSTEM			3216	25/10/2002 09:57:37.00 EST	source	A
2	prov__status	char	0		~*	Record status	prov	30	0	230	SYSTEM			3217	25/10/2002 09:57:37.00 EST	source	A
2	prov__timestamp	datetime	0		=	Timestamp	prov	30	0	210	SYSTEM			3218	25/10/2002 09:57:38.00 EST	source	A
2	prov__user_entry	text	0		~*	Entered by	prov	30	0	220				3219	25/10/2002 09:57:38.00 EST	source	A
2	prov_address	text	0		~*	Street	prov	50	10	40	10			3220	25/10/2002 09:57:38.00 EST	source	A
2	prov_bank_code	text	1		~*	Bank Account	prov	10	100	100		-		3221	25/10/2002 09:57:38.00 EST	source	A
2	prov_code	text	0		~*	Provider Code	prov	20	10	10	10			3222	25/10/2002 09:57:39.00 EST	source	A
31	prov_colour	text	30		~*	Colour	prov	10	10	15	COLOUR			3223	25/10/2002 09:57:39.00 EST	source	A
2	prov_name	text	0		~*	Name	prov	50	10	30	10			3224	25/10/2002 09:57:39.00 EST	source	A
2	prov_phone	text	0		~*	Phone	prov	50	10	90	10			3225	25/10/2002 09:57:40.00 EST	source	A
2	prov_postcode	text	0		~*	Postcode	prov	4	10	70	10			3226	25/10/2002 09:57:40.00 EST	source	A
31	apst__sequence	int4	10		~*	Sequence	apst	10	30	30	SYSTEM			3193	24/10/2002 04:26:40.00 EST	source	A
31	apst__status	bpchar	1		~*	Status	apst	1	60	60	SYSTEM			3194	24/10/2002 04:26:41.00 EST	source	A
31	apst__timestamp	timestamp	47		~*	Timestamp	apst	47	40	40	SYSTEM			3195	24/10/2002 04:26:41.00 EST	source	A
31	apst__user_entry	text	30		~*	User Entry	apst	30	50	50	SYSTEM			3196	24/10/2002 04:26:41.00 EST	source	A
31	apst_code	text	30		~*	Code	apst	30	10	10	10			3197	24/10/2002 04:26:41.00 EST	source	A
31	apst_colour	text	30		~*	Colour	apst	10	15	15	COLOUR			3198	24/10/2002 04:26:42.00 EST	source	A
31	apst_desc	text	30		~*	Desc	apst	30	20	20	10			3199	24/10/2002 04:26:42.00 EST	source	A
31	evnv_ev_date	text	30		~*	Ev Date	evnv	30	80	80	SYSTEM			3117	24/10/2002 04:23:42.00 EST	source	A
31	evnv_ev_minutes	float8	24		~*	Ev Minutes	evnv	24	90	90	SYSTEM			3118	24/10/2002 04:23:42.00 EST	source	A
31	evnv_ev_time	text	30		~*	Ev Time	evnv	30	70	70	SYSTEM			3119	24/10/2002 04:23:42.00 EST	source	A
31	evnv_locn_code	text	30		~*	Location	evnv	30	64	64	FSL=30			3120	24/10/2002 04:23:42.00 EST	source	A
31	evnv_locn_desc	text	30		~*	Location Name	evnv	30	180	180	SYSTEM			3121	24/10/2002 04:23:43.00 EST	source	A
31	evnv_patn__sequence	int4	10		~*	Patient ID	evnv	12	75	75	RO			3122	24/10/2002 04:23:43.00 EST	source	A
31	evnv_patn_aboriginality	bpchar	1		~*	Aboriginality	evnv	1	400	400	SYSTEM			3123	24/10/2002 04:23:43.00 EST	source	A
31	evnv_patn_accl_code	text	30		~*	Account Class	evnv	30	430	430	SYSTEM			3124	24/10/2002 04:23:44.00 EST	source	A
31	evnv_patn_accommodation	bpchar	1		~*	Accommodation	evnv	1	440	440	SYSTEM			3125	24/10/2002 04:23:44.00 EST	source	A
31	evnv_patn_address	text	30		~*	Address	evnv	30	120	120	RO			3126	24/10/2002 04:23:44.00 EST	source	A
31	evnv_patn_care	bpchar	1		~*	Care	evnv	1	450	450	SYSTEM			3127	24/10/2002 04:23:44.00 EST	source	A
31	evnv_patn_country	text	30		~*	Country	evnv	30	390	390	SYSTEM			3128	24/10/2002 04:23:45.00 EST	source	A
31	evnv_patn_desc	text	30		~*	Patn Desc	evnv	30	100	100	SYSTEM			3129	24/10/2002 04:23:45.00 EST	source	A
31	evnv_patn_dob	text	30		~*	DOB	evnv	30	110	110	RO			3130	24/10/2002 04:23:45.00 EST	source	A
31	evnv_patn_flno	text	30		~*	Patient ID	evnv	30	70	70	SYSTEM			3131	24/10/2002 04:23:46.00 EST	source	A
31	evnv_patn_fsnam	text	30		~*	Firstname	evnv	30	90	90	RO			3132	24/10/2002 04:23:46.00 EST	source	A
2	prov_provider_num	text	0		~*	Provider number	prov	10	10	20	10			3227	25/10/2002 09:57:40.00 EST	source	A
31	evnv_patn_marital	bpchar	1		~*	Marital	evnv	1	420	420	SYSTEM			3133	24/10/2002 04:23:46.00 EST	source	A
31	evnv_patn_phone	text	30		~*	Patn Phone	evnv	30	160	160	SYSTEM			3134	24/10/2002 04:23:46.00 EST	source	A
31	evnv_patn_psnam	text	30		~*	Surname	evnv	30	80	80	RO			3136	24/10/2002 04:23:47.00 EST	source	A
31	svpv_dbtr_full_address	text	30	\N	~*	Dbtr Full Address	svpv	30	340	340	10			2921	05/10/2002 13:46:14.00 EST	source	A
31	evnv_patn_sex	bpchar	1		~*	Sex	evnv	1	410	410	SYSTEM			3137	24/10/2002 04:23:47.00 EST	source	A
31	evnv_patn_state	text	30		~*	Patn State	evnv	30	140	140	SYSTEM			3138	24/10/2002 04:23:48.00 EST	source	A
31	evnv_patn_title	text	30		~*	Title	evnv	30	100	100	RO			3140	24/10/2002 04:23:48.00 EST	source	A
31	evnv_prov_address	text	30		~*	Provider Address	evnv	30	220	220	SYSTEM			3141	24/10/2002 04:23:48.00 EST	source	A
31	evnv_prov_bank_code	text	30		~*	Prov Bank Code	evnv	30	280	280	SYSTEM			3142	24/10/2002 04:23:49.00 EST	source	A
31	evnv_prov_code	text	30		~*	Provider	evnv	30	62	62	FSL=20			3143	24/10/2002 04:23:49.00 EST	source	A
31	evnv_prov_name	text	30		~*	Provider Name	evnv	30	210	210	SYSTEM			3144	24/10/2002 04:23:49.00 EST	source	A
31	evnv_prov_phone	text	30		~*	Prov Phone	evnv	30	270	270	SYSTEM			3145	24/10/2002 04:23:50.00 EST	source	A
31	evnv_prov_postcode	text	30		~*	Provider PC	evnv	30	250	250	SYSTEM			3146	24/10/2002 04:23:50.00 EST	source	A
31	evnv_prov_provider_num	text	30		~*	Provider Number	evnv	30	200	200	SYSTEM			3147	24/10/2002 04:23:50.00 EST	source	A
31	evnv_prov_salutation	text	30		~*	Provider Salutation	evnv	30	260	260	SYSTEM			3148	24/10/2002 04:23:51.00 EST	source	A
31	evnv_prov_state	text	30		~*	Provider State	evnv	30	240	240	SYSTEM			3149	24/10/2002 04:23:51.00 EST	source	A
31	evnv_prov_suburb	text	30		~*	Provider Suburb	evnv	30	230	230	SYSTEM			3150	24/10/2002 04:23:51.00 EST	source	A
31	evnv_rfdr_code	text	30		~*	Referrer Code	evnv	30	290	290	SYSTEM			3151	24/10/2002 04:23:51.00 EST	source	A
31	evnv_rfdr_index	text	30		~*	Referrer Index	evnv	30	380	380	SYSTEM			3152	24/10/2002 04:23:52.00 EST	source	A
31	evnv_rfdr_name	text	30		~*	Referrer Name	evnv	30	300	300	SYSTEM			3153	24/10/2002 04:23:52.00 EST	source	A
31	evnv_rfdr_phone	text	30		~*	Referrer Phone	evnv	30	360	360	SYSTEM			3154	24/10/2002 04:23:52.00 EST	source	A
31	evnv_rfdr_postcode	text	30		~*	Referrer Postcode	evnv	30	330	330	SYSTEM			3155	24/10/2002 04:23:53.00 EST	source	A
31	evnv_rfdr_provider	text	30		~*	Referrer Provider Number	evnv	30	350	350	SYSTEM			3156	24/10/2002 04:23:53.00 EST	source	A
31	evnv_rfdr_salutation	text	30		~*	Referrer Salutation	evnv	30	370	370	SYSTEM			3157	24/10/2002 04:23:53.00 EST	source	A
31	evnv_rfdr_state	text	30		~*	Referrer State	evnv	30	340	340	SYSTEM			3158	24/10/2002 04:23:53.00 EST	source	A
31	evnv_rfdr_street	text	30		~*	Referrer Street	evnv	30	310	310	SYSTEM			3159	24/10/2002 04:23:54.00 EST	source	A
31	evnv_rfdr_suburb	text	30		~*	Referrer Suburb	evnv	30	320	320	SYSTEM			3160	24/10/2002 04:23:54.00 EST	source	A
31	evnv_starttime	timestamp	47		~*	Start	evnv	16	40	40	10			3161	24/10/2002 04:23:54.00 EST	source	A
31	evnt__sequence	int4	10		~*	Sequence	evnt	10	50	50	SYSTEM			3094	24/10/2002 04:23:29.00 EST	source	A
31	evnt__status	bpchar	1		~*	Status	evnt	1	80	80	SYSTEM			3095	24/10/2002 04:23:29.00 EST	source	A
31	evnt__timestamp	timestamp	47		~*	Creation time	evnt	47	60	60	RO			3096	24/10/2002 04:23:30.00 EST	source	A
31	evnt__user_entry	text	30		~*	Created by	evnt	30	70	70	RO			3097	24/10/2002 04:23:30.00 EST	source	A
31	evnt_apst_code	text	30		~*	Apst Code	evnt	30	90	90	10			3098	24/10/2002 04:23:30.00 EST	source	A
31	evnt_aptp_code	text	30		~*	Aptp Code	evnt	30	50	50	10			3099	24/10/2002 04:23:31.00 EST	source	A
31	evnt_desc	text	30		~*	Notes	evnt	30	40	40	10			3100	24/10/2002 04:23:31.00 EST	source	A
31	evnt_duration	interval	47		~*	Duration	evnt	47	30	30	10			3101	24/10/2002 04:23:31.00 EST	source	A
31	evnt_locn_code	text	30		~*	Locn Code	evnt	30	30	30	10			3102	24/10/2002 04:23:31.00 EST	source	A
31	evnt_patn__sequence	int4	10		~*	Patient ID	evnt	10	10	10	10			3103	24/10/2002 04:23:32.00 EST	source	A
31	evnt_prov_code	text	1		~*	Provider Code	evnt	10	15	15	10			3104	24/10/2002 04:23:32.00 EST	source	A
31	evnt_rfdr_code	text	30		~*	Rfdr Code	evnt	30	30	30	10			3105	24/10/2002 04:23:32.00 EST	source	A
31	evnt_starttime	timestamp	47		~*	Start	evnt	47	20	20	10			3106	24/10/2002 04:23:32.00 EST	source	A
31	evnv__sequence	int4	10		~*	Sequence	evnv	10	480	480	SYSTEM			3107	24/10/2002 04:23:39.00 EST	source	A
31	evnv__status	bpchar	1		~*	Status	evnv	1	510	510	SYSTEM			3108	24/10/2002 04:23:39.00 EST	source	A
2	prov_salutation	text	0		~*	Salutation	prov	50	10	80	10			3228	25/10/2002 09:57:40.00 EST	source	A
2	prov_state	text	0		~*	State	prov	50	10	60	10			3229	25/10/2002 09:57:41.00 EST	source	A
2	prov_suburb	text	0		~*	Suburb	prov	50	10	50	10			3230	25/10/2002 09:57:41.00 EST	source	A
31	evnv__timestamp	timestamp	47		~*	Timestamp	evnv	47	490	490	SYSTEM			3109	24/10/2002 04:23:39.00 EST	source	A
31	evnv__user_entry	text	30		~*	User Entry	evnv	30	500	500	SYSTEM			3110	24/10/2002 04:23:40.00 EST	source	A
31	evnv_apst_code	text	30		~*	Status	evnv	30	60	60	FSL=20			3111	24/10/2002 04:23:40.00 EST	source	A
31	evnv_apst_desc	text	30		~*	Apst Desc	evnv	30	250	250	SYSTEM			3112	24/10/2002 04:23:40.00 EST	source	A
31	evnv_aptp_code	text	30		~*	Type	evnv	30	55	55	FSL=20			3113	24/10/2002 04:23:40.00 EST	source	A
31	evnv_aptp_desc	text	30		~*	Aptp Desc	evnv	30	240	240	SYSTEM			3114	24/10/2002 04:23:41.00 EST	source	A
31	evnv_desc	text	30		~*	Note	evnv	30	60	60	10			3115	24/10/2002 04:23:41.00 EST	source	A
31	evnv_duration	interval	47		~*	Duration	evnv	47	50	50	10			3116	24/10/2002 04:23:41.00 EST	source	A
31	mtcl_group	text	0		~*	Group	mtcl	15	40	40	10			125	10/10/2001 12:24:52.00 EST	source	A
31	mtcl__timestamp	datetime	0		~*	class__timestamp	mtcl	20	0	200	SYSTEM	now		121	10/10/2001 12:24:50.00 EST	source	A
31	mtcl_name	text	0		~*	Name	mtcl	5	20	10	10			128	10/10/2001 12:24:53.00 EST	source	A
31	mtcl_access	text	0		~*	Access	mtcl	4	10	30	10	user		123	10/10/2001 12:24:51.00 EST	source	A
31	mtcl_title	text	0		~*	Title	mtcl	15	30	20	10	New Class		133	10/10/2001 12:24:55.00 EST	source	A
31	mtat_type	text	0		~*	Data Type	mtat	10	10	20	10			152	10/10/2001 12:25:09.00 EST	source	A
31	mtat_attributes	text	0		~*	Attributes	mtat	4	50	50	10			141	10/10/2001 12:25:03.00 EST	source	A
31	mtat_operator	text	0		~*	Query Operator	mtat	4	60	60	10	~*		150	10/10/2001 12:25:08.00 EST	source	A
31	mtat_title	text	0	not null	~*	Title	mtat	15	70	70	10	New Attribute		151	10/10/2001 12:25:09.00 EST	source	A
31	mtat_class_name	text	0		~*	Parent Class	mtat	6	80	80				143	10/10/2001 12:25:04.00 EST	source	A
31	mtat_name	text	0		~*	Name	mtat	15	20	10	10			149	10/10/2001 12:25:08.00 EST	source	A
31	mtat_access	text	0		~*	Access	mtat	4	4	30	10	user		140	10/10/2001 12:25:03.00 EST	source	A
31	mtat_length	int4	0		~*	Char Length	mtat	4	3	40	10			148	10/10/2001 12:25:08.00 EST	source	A
2	patn_aboriginality	char	0		~*	Aboriginality	patn	1	0	0	SYSTEM			2712	09/02/2002 08:01:49.00 EST	source	A
2	patn_accl_code	text	0		~*	Account type	patn	3	0	0	SYSTEM			2713	09/02/2002 08:01:49.00 EST	source	A
2	patn_accommodation	char	0		~*	Accommodation type	patn	1	0	0	SYSTEM			2714	09/02/2002 08:01:50.00 EST	source	A
2	patn_care	char	0		~*	Care type	patn	1	0	0	SYSTEM			2716	09/02/2002 08:01:50.00 EST	source	A
2	patn_country	text	0		~*	Country of birth	patn	4	0	0	SYSTEM			2717	09/02/2002 08:01:50.00 EST	source	A
2	patn_marital	char	0		~*	Marital Status	patn	1	0	0	SYSTEM			2728	09/02/2002 08:01:53.00 EST	source	A
2	patn_sex	char	0		~*	Gender	patn	1	0	0	SYSTEM			2738	09/02/2002 08:01:56.00 EST	source	A
2	patn_psnam	text	0		~*	Surname	patn	15	11	30	20			2734	09/02/2002 08:01:55.00 EST	source	A
2	patn_fsnam	text	0		~*	Firstname	patn	10	12	40	20			2723	09/02/2002 08:01:52.00 EST	source	A
2	patn_feet_code	text	0		~*	Fee level	patn	5	10	45	40	-		2721	09/02/2002 08:01:52.00 EST	source	A
31	patn_patf_code	text	30		~*	Flag	patn	5	300	47	10			2730	09/02/2002 08:01:54.00 EST	source	A
2	patn_title	text	0		~*	Title	patn	6	10	50	20			2741	09/02/2002 08:01:57.00 EST	source	A
2	patn_address	text	0		~*	Street	patn	15	10	70	40			2715	09/02/2002 08:01:50.00 EST	source	A
2	patn_state	text	0		~*	State	patn	3	10	90	10	Victoria		2739	09/02/2002 08:01:57.00 EST	source	A
2	patn_phone	text	0		~*	Phone	patn	15	10	110	40			2731	09/02/2002 08:01:54.00 EST	source	A
2	patn_flno	text	0		~*	File number	patn	10	10	150	40			2722	09/02/2002 08:01:52.00 EST	source	A
2	patn_medicare	text	0		~*	Medicare Number	patn	15	10	160	40			2729	09/02/2002 08:01:54.00 EST	source	A
2	patn_healthcard	text	0		~*	HealthCard/Ref/VX	patn	15	10	170	20			2724	09/02/2002 08:01:52.00 EST	source	A
2	patn_hlfd_code	text	0		~*	Insurance Fund	patn	10	172	172	40			2726	09/02/2002 08:01:53.00 EST	source	A
2	patn_ins_level	char	0		~*	Insurance Level	patn	3	173	173	40			2727	09/02/2002 08:01:53.00 EST	source	A
2	patn_healthnumb	text	0		~*	Insurance Number	patn	15	174	174	40			2725	09/02/2002 08:01:53.00 EST	source	A
2	patn_dbtr_code	text	0		~*	Usual Debtor (code)	patn	12	10	180	40			2718	09/02/2002 08:01:51.00 EST	source	A
2	patn_rfdr_code	text	0		~*	Usual Referrer (code)	patn	12	10	200	40			2737	09/02/2002 08:01:56.00 EST	source	A
2	patn_ref_date	timestamp	0		=	Referral date	patn	10	10	210	40	today		2735	09/02/2002 08:01:55.00 EST	source	A
2	patn_ref_period	integer	0		=	Referral period	patn	5	10	220	40	12		2736	09/02/2002 08:01:56.00 EST	source	A
2	patn_prov_code	text	0		~*	Usual   provider (code)	patn	5	10	230	40	-		2733	09/02/2002 08:01:55.00 EST	source	A
2	patn_empl_code	text	0		~*	Usual Employer (code)	patn	12	10	240	40	-		2720	09/02/2002 08:01:51.00 EST	source	A
2	patn__sequence	integer	0		=	Row-ID	patn	12	0	310	SYSTEM			2708	09/02/2002 08:01:48.00 EST	source	A
2	patn__timestamp	datetime	0		=	Timestamp	patn	15	0	320	SYSTEM			2710	09/02/2002 08:01:48.00 EST	source	A
2	patn__user_entry	text	0		~*	Entered by	patn	8	0	330	SYSTEM			2711	09/02/2002 08:01:49.00 EST	source	A
2	patn__status	char	0		~*	Record status	patn	1	0	340	SYSTEM			2709	09/02/2002 08:01:48.00 EST	source	A
2	svpf_mdaf__sequence	integer	0		=	Medicare form number	svpf	12	0	0	SYSTEM			2115	19/10/2001 12:30:23.00 EST	source	A
2	svpf_date_service	datetime	0		=	Date of service	svpf	10	10	10	10	now		2111	19/10/2001 12:30:22.00 EST	source	A
2	svpf_serv_code	text	0		~*	Service code	svpf	8	10	40			onchange="svpf_js_check()"	2118	19/10/2001 12:30:24.00 EST	source	A
2	svpf_percentage	float	0		~*	%	svpf	3	0	50		100	onblur="chk_svpf_amounts()"	2117	19/10/2001 12:30:24.00 EST	source	A
2	svpf_desc	text	0		~*	Description	svpf	30	10	60	TEXTAREA=3	~serv_desc(serv_code)	WRAP=VIRTUAL	2112	19/10/2001 12:30:22.00 EST	source	A
2	svpf_amount	numeric(12,2)	0		=	Amount	svpf	8	10	70	30	~feeb_amount(feeb_serv_code,feeb_feet_code)	onblur="chk_svpf_amounts()"	2110	19/10/2001 12:30:21.00 EST	source	A
2	svpf_gst_amount	numeric(12,2)	0		=	GST	svpf	8	10	80	RO		onblur="chk_svpf_amounts()"	2113	19/10/2001 12:30:22.00 EST	source	A
2	svpf__sequence	integer	0		=	Row-ID	svpf	12	0	200	SYSTEM			2106	19/10/2001 12:30:20.00 EST	source	A
2	svpf__timestamp	datetime	0		=	Timestamp	svpf	12	0	210	SYSTEM			2108	19/10/2001 12:30:20.00 EST	source	A
2	svpf__user_entry	text	0		~*	Entered by	svpf	12	0	220	SYSTEM			2109	19/10/2001 12:30:21.00 EST	source	A
2	svpf__status	char	0		~*	Record status	svpf	1	0	230	SYSTEM			2107	19/10/2001 12:30:20.00 EST	source	A
2	invc__sequence	integer	0		=	Invoice Number	invc	12	0	4	RO			1913	19/10/2001 12:27:47.00 EST	source	A
2	invc_amount	numeric(12,2)	0		=	Amount	invc	10	50	5	RO			1917	19/10/2001 12:27:49.00 EST	source	A
2	invc_gst_amount	numeric(12,2)	0		=	GST Amount	invc	8	60	6	RO	0.00		1925	19/10/2001 12:27:52.00 EST	source	A
2	invc_paid_amount	numeric(12,2)	0		=	Amount Paid	invc	10	55	7	RO			1926	19/10/2001 12:27:53.00 EST	source	A
2	invc_paid_gst_amount	numeric(12,2)	0		=	GST Paid	invc	8	65	8	RO			1927	19/10/2001 12:27:53.00 EST	source	A
2	invc_dbtr_code	text	0		~*	Debtor ID code	invc	12	10	10	10			1922	19/10/2001 12:27:51.00 EST	source	A
2	invc_bank_code	text	1		~*	Bank Account	invc	4	12	12	RO	-		1918	19/10/2001 12:27:49.00 EST	source	A
2	invc_prov_code	text	1		~*	Provider	invc	8	14	14	RO	-		1929	19/10/2001 12:27:54.00 EST	source	A
2	invc_patn__sequence	integer	1		=	Patient	invc	8	16	16	RO			1928	19/10/2001 12:27:54.00 EST	source	A
2	invc_empl_code	text	1		~*	Employer	invc	8	20	20	10	-		1923	19/10/2001 12:27:52.00 EST	source	A
2	invc_feet_code	text	1		~*	Fee type	invc	8	22	22	10	-		1924	19/10/2001 12:27:52.00 EST	source	A
2	invc_rfdr_code	text	1		~*	Referrer	invc	8	24	24	10	-		1930	19/10/2001 12:27:55.00 EST	source	A
2	invc_rfdr_date	timestamp	1		=	Referral Date	invc	10	26	26	10			1931	19/10/2001 12:27:55.00 EST	source	A
2	invc_rfdr_period	text	1		~*	Referral Period	invc	4	28	28	10			1932	19/10/2001 12:27:55.00 EST	source	A
2	invc_date_created	timestamp	0		=	Date created	invc	10	40	40	RO			1919	19/10/2001 12:27:50.00 EST	source	A
2	invc_date_reprint	timestamp	0		=	Date re-printed	invc	10	44	44	10			1921	19/10/2001 12:27:51.00 EST	source	A
2	invc__timestamp	timestamp	0		=	Timestamp	invc	15	0	210	SYSTEM			1915	19/10/2001 12:27:48.00 EST	source	A
2	invc__user_entry	text	0		~*	Entered by	invc	8	0	220	SYSTEM			1916	19/10/2001 12:27:49.00 EST	source	A
2	invc__status	char	0		~*	Record status	invc	1	0	230	SYSTEM			1914	19/10/2001 12:27:47.00 EST	source	A
31	notv__sequence	int4	10		~*	Note ID	notv	10	220	220	SYSTEM			3231	13/03/2003 15:31:02.24 EST	source	A
31	notv__status	bpchar	1		~*	Status	notv	1	250	250	SYSTEM			3232	13/03/2003 15:31:02.51 EST	source	A
31	notv__timestamp	timestamp	47		~*	Timestamp	notv	47	230	230	SYSTEM			3233	13/03/2003 15:31:02.52 EST	source	A
31	notv__user_entry	text	30		~*	User Entry	notv	30	240	240	SYSTEM			3234	13/03/2003 15:31:02.52 EST	source	A
31	notv_desc	text	30		~*	Note Details	notv	40	30	30	10			3235	13/03/2003 15:31:02.52 EST	source	A
31	notv_patn__sequence	int4	10		~*	Patient ID	notv	10	10	10	SYSTEM			3236	13/03/2003 15:31:02.53 EST	source	A
31	notv_patn_aboriginality	bpchar	1		~*	Aboriginality	notv	1	160	160	SYSTEM			3237	13/03/2003 15:31:02.53 EST	source	A
31	notv_patn_accl_code	text	30		~*	Account Code	notv	30	190	190	SYSTEM			3238	13/03/2003 15:31:02.54 EST	source	A
31	notv_patn_accommodation	bpchar	1		~*	Accomodation	notv	1	200	200	SYSTEM			3239	13/03/2003 15:31:02.54 EST	source	A
31	notv_patn_address	text	30		~*	Street	notv	30	100	100	SYSTEM			3240	13/03/2003 15:31:02.54 EST	source	A
31	notv_patn_care	bpchar	1		~*	Care Type	notv	1	210	210	SYSTEM			3241	13/03/2003 15:31:02.64 EST	source	A
31	notv_patn_country	text	30		~*	County of Birth	notv	30	150	150	SYSTEM			3242	13/03/2003 15:31:02.64 EST	source	A
31	notv_patn_desc	text	30		~*	Patn Desc	notv	30	50	50	SYSTEM			3243	13/03/2003 15:31:02.65 EST	source	A
31	notv_patn_dob	text	30		~*	DOB	notv	30	90	90	SYSTEM			3244	13/03/2003 15:31:02.65 EST	source	A
31	notv_patn_flno	text	30		~*	FileNo.	notv	30	40	40	SYSTEM			3245	13/03/2003 15:31:02.66 EST	source	A
31	notv_patn_fsnam	text	30		~*	Firstname	notv	30	70	70	SYSTEM			3246	13/03/2003 15:31:02.66 EST	source	A
31	notv_patn_marital	bpchar	1		~*	Marital Status	notv	1	180	180	SYSTEM			3247	13/03/2003 15:31:02.66 EST	source	A
31	notv_patn_phone	text	30		~*	Phone	notv	30	140	140	SYSTEM			3248	13/03/2003 15:31:02.67 EST	source	A
31	notv_patn_postcode	text	30		~*	Postcode	notv	30	130	130	SYSTEM			3249	13/03/2003 15:31:02.67 EST	source	A
31	notv_patn_psnam	text	30		~*	Surname	notv	30	60	60	SYSTEM			3250	13/03/2003 15:31:02.67 EST	source	A
31	notv_patn_sex	bpchar	1		~*	Sex	notv	1	170	170	SYSTEM			3251	13/03/2003 15:31:02.68 EST	source	A
31	notv_patn_state	text	30		~*	State	notv	30	120	120	SYSTEM			3252	13/03/2003 15:31:02.68 EST	source	A
31	notv_patn_suburb	text	30		~*	Suburb	notv	30	110	110	SYSTEM			3253	13/03/2003 15:31:02.69 EST	source	A
31	notv_patn_title	text	30		~*	Title	notv	30	80	80	SYSTEM			3254	13/03/2003 15:31:02.69 EST	source	A
31	notv_time	text	30		~*	Time	notv	20	20	20	RO			3255	13/03/2003 15:31:02.70 EST	source	A
2	patn_dob	timestamp	0		=	Date of birth	patn	10	10	60	40			2719	09/02/2002 08:01:51.00 EST	source	A
31	mtop__sequence	int4	30	\N	~*	Sequence	mtop	30	30	30	SYSTEM			3259	04/04/2004 11:45:18.00 EST	source	A
31	mtop__timestamp	timestamp	30	\N	~*	Timestamp	mtop	30	40	40	SYSTEM			3260	04/04/2004 11:45:18.00 EST	source	A
31	mtop__user_entry	text	30	\N	~*	User Entry	mtop	30	50	50	SYSTEM			3261	04/04/2004 11:45:18.00 EST	source	A
31	mtop__status	bpchar	1	\N	~*	Status	mtop	1	60	60	SYSTEM			3262	04/04/2004 11:45:18.00 EST	source	A
31	mtop_code	text	30	\N	~*	Code	mtop	30	10	10	10			3257	04/04/2004 11:45:18.00 EST	source	A
31	mtop_desc	text	30	\N	~*	Description	mtop	30	20	20	10			3258	04/04/2004 11:45:18.00 EST	source	A
31	mtal__sequence	int4	30	\N	~*	Sequence	mtal	30	60	60	SYSTEM			3268	04/04/2004 11:45:19.00 EST	source	A
31	mtal__timestamp	timestamp	30	\N	~*	Timestamp	mtal	30	70	70	SYSTEM			3269	04/04/2004 11:45:19.00 EST	source	A
31	mtal__user_entry	text	30	\N	~*	User Entry	mtal	30	80	80	SYSTEM			3270	04/04/2004 11:45:19.00 EST	source	A
31	mtal__status	bpchar	1	\N	~*	Status	mtal	1	90	90	SYSTEM			3271	04/04/2004 11:45:19.00 EST	source	A
31	mtal_mtat_name	text	30	\N	~*	Attribute	mtal	10	10	10	10			3263	04/04/2004 11:45:19.00 EST	source	A
31	mtal_value	text	30	\N	~*	Value	mtal	30	30	30	10			3265	04/04/2004 11:45:19.00 EST	source	A
31	mtal_priority	int4	30	\N	~*	Priority	mtal	30	50	50	10			3267	04/04/2004 11:45:19.00 EST	source	A
31	mtal_colour	text	30	\N	~*	Colour	mtal	30	40	40	COLOUR			3266	04/04/2004 11:45:19.00 EST	source	A
31	mtal_mtop_code	text	30	\N	~*	Operator	mtal	30	20	20	FSL=100			3264	04/04/2004 11:45:19.00 EST	source	A
31	mtag__sequence	int4	30	\N	~*	Sequence	mtag	30	60	60	SYSTEM			3277	04/04/2004 11:45:21.00 EST	source	A
31	mtag__timestamp	timestamp	30	\N	~*	Timestamp	mtag	30	70	70	SYSTEM			3278	04/04/2004 11:45:21.00 EST	source	A
31	mtag__user_entry	text	30	\N	~*	User Entry	mtag	30	80	80	SYSTEM			3279	04/04/2004 11:45:21.00 EST	source	A
31	mtag__status	bpchar	1	\N	~*	Status	mtag	1	90	90	SYSTEM			3280	04/04/2004 11:45:21.00 EST	source	A
31	mtag_name	text	30	\N	~*	Name	mtag	10	10	10	10			3272	04/04/2004 11:45:21.00 EST	source	A
31	mtag_title	text	30	\N	~*	Title	mtag	20	20	20	10			3273	04/04/2004 11:45:21.00 EST	source	A
31	mtag_parent	text	30	\N	~*	Parent Menu	mtag	10	30	30	10			3274	04/04/2004 11:45:21.00 EST	source	A
31	mtag_access	int4	30	\N	~*	Access	mtag	5	40	40	10			3275	04/04/2004 11:45:21.00 EST	source	A
31	mtag_list_order	text	30	\N	~*	List Order	mtag	10	50	50	10			3276	04/04/2004 11:45:21.00 EST	source	A
31	mtad__sequence	int4	30	\N	~*	Sequence	mtad	30	70	70	SYSTEM			3287	04/04/2004 11:45:22.00 EST	source	A
31	mtad__timestamp	timestamp	30	\N	~*	Timestamp	mtad	30	80	80	SYSTEM			3288	04/04/2004 11:45:22.00 EST	source	A
31	mtad__user_entry	text	30	\N	~*	User Entry	mtad	30	90	90	SYSTEM			3289	04/04/2004 11:45:22.00 EST	source	A
31	mtad__status	bpchar	1	\N	~*	Status	mtad	1	100	100	SYSTEM			3290	04/04/2004 11:45:22.00 EST	source	A
31	mtad_title	text	30	\N	~*	Title	mtad	20	10	10	10			3281	04/04/2004 11:45:22.00 EST	source	A
31	mtad_icon	text	30	\N	~*	Icon	mtad	10	20	20	10			3282	04/04/2004 11:45:22.00 EST	source	A
31	mtad_parent	text	30	\N	~*	Parent	mtad	10	30	30	10			3283	04/04/2004 11:45:22.00 EST	source	A
31	mtad_class	text	30	\N	~*	Class	mtad	10	40	40	10			3284	04/04/2004 11:45:22.00 EST	source	A
31	mtad_access	int4	30	\N	~*	Access	mtad	10	50	50	10			3285	04/04/2004 11:45:22.00 EST	source	A
31	mtad_list_order	text	30	\N	~*	List Order	mtad	10	60	60	10			3286	04/04/2004 11:45:22.00 EST	source	A
31	mttk_code	text	30	\N	~*	Code	mttk	30	10	10	10			3291	04/04/2004 11:45:25.00 EST	source	A
31	mttk_expires	timestamp	30	\N	~*	Expires	mttk	30	20	20	10			3292	04/04/2004 11:45:25.00 EST	source	A
31	mttk__sequence	int4	30	\N	~*	Sequence	mttk	30	30	30	SYSTEM			3293	04/04/2004 11:45:25.00 EST	source	A
31	mttk__timestamp	timestamp	30	\N	~*	Timestamp	mttk	30	40	40	SYSTEM			3294	04/04/2004 11:45:25.00 EST	source	A
31	mttk__user_entry	text	30	\N	~*	User Entry	mttk	30	50	50	SYSTEM			3295	04/04/2004 11:45:25.00 EST	source	A
31	mttk__status	bpchar	1	\N	~*	Status	mttk	1	60	60	SYSTEM			3296	04/04/2004 11:45:25.00 EST	source	A
31	mtau_table_name	text	30	\N	~*	Table Name	mtau	30	10	10	10			3297	04/04/2004 11:45:25.00 EST	source	A
31	mtau_row_sequence	int4	30	\N	~*	Row Sequence	mtau	30	20	20	10			3298	04/04/2004 11:45:25.00 EST	source	A
31	mtau_operation	text	30	\N	~*	Operation	mtau	30	30	30	10			3299	04/04/2004 11:45:25.00 EST	source	A
31	mtau_attributes	text	30	\N	~*	Attributes	mtau	30	40	40	10			3300	04/04/2004 11:45:25.00 EST	source	A
31	mtau_before	text	30	\N	~*	Before	mtau	30	50	50	10			3301	04/04/2004 11:45:25.00 EST	source	A
31	mtau_after	text	30	\N	~*	After	mtau	30	60	60	10			3302	04/04/2004 11:45:25.00 EST	source	A
31	mtau__sequence	int4	30	\N	~*	Sequence	mtau	30	70	70	SYSTEM			3303	04/04/2004 11:45:25.00 EST	source	A
31	mtau__timestamp	timestamp	30	\N	~*	Timestamp	mtau	30	80	80	SYSTEM			3304	04/04/2004 11:45:25.00 EST	source	A
31	mtau__user_entry	text	30	\N	~*	User Entry	mtau	30	90	90	SYSTEM			3305	04/04/2004 11:45:25.00 EST	source	A
31	mtau__status	bpchar	1	\N	~*	Status	mtau	1	100	100	SYSTEM			3306	04/04/2004 11:45:25.00 EST	source	A
31	pcde_postcode	text	30	\N	~*	Postcode	pcde	6	10	10	10			3307	04/04/2004 11:45:26.00 EST	source	A
31	pcde_locality	text	30	\N	~*	Locality	pcde	20	20	20	10			3308	04/04/2004 11:45:26.00 EST	source	A
31	pcde_state	text	30	\N	~*	State	pcde	5	30	30	10			3309	04/04/2004 11:45:26.00 EST	source	A
31	pcde_comments	text	30	\N	~*	Comments	pcde	20	40	40	10			3310	04/04/2004 11:45:26.00 EST	source	A
31	pcde_delivery_office	text	30	\N	~*	Delivery Office	pcde	20	50	50	10			3311	04/04/2004 11:45:26.00 EST	source	A
31	pcde_presort_indicator	text	30	\N	~*	Presort Indicator	pcde	5	60	60	10			3312	04/04/2004 11:45:26.00 EST	source	A
31	pcde_parcelzone	text	30	\N	~*	Parcelzone	pcde	5	70	70	10			3313	04/04/2004 11:45:26.00 EST	source	A
31	pcde_bsp_number	text	30	\N	~*	Bsp Number	pcde	5	80	80	10			3314	04/04/2004 11:45:26.00 EST	source	A
31	pcde_bsp_name	text	30	\N	~*	Bsp Name	pcde	20	90	90	10			3315	04/04/2004 11:45:26.00 EST	source	A
31	pcde_category	text	30	\N	~*	Category	pcde	20	100	100	10			3316	04/04/2004 11:45:26.00 EST	source	A
31	pcde__sequence	int4	30	\N	~*	Sequence	pcde	30	110	110	SYSTEM			3317	04/04/2004 11:45:26.00 EST	source	A
31	pcde__status	bpchar	1	\N	~*	Status	pcde	1	140	140	SYSTEM			3320	04/04/2004 11:45:26.00 EST	source	A
31	pcde__timestamp	timestamp	30	\N	~*	Timestamp	pcde	30	120	120	SYSTEM			3318	04/04/2004 11:45:26.00 EST	source	A
31	pcde__user_entry	text	30	\N	~*	User Entry	pcde	30	130	130	SYSTEM			3319	04/04/2004 11:45:26.00 EST	source	A
2	patn_postcode	text	0		~*	Postcode	patn	4	10	100	COPYTEXT=pcde;pcde_postcode;pcde_locality;patn_suburb			2732	09/02/2002 08:01:55.00 EST	source	A
2	patn_suburb	text	0		~*	Suburb	patn	15	10	80	COPYTEXT=pcde;pcde_locality;pcde_postcode;patn_postcode			2740	09/02/2002 08:01:57.00 EST	source	A
31	evnv_patn_postcode	text	30		~*	Patn Postcode	evnv	30	150	150	COPYTEXT=pcde;pcde_postcode;pcde_locality;evnv_patn_suburb			3135	24/10/2002 04:23:47.00 EST	source	A
31	evnv_patn_suburb	text	30		~*	Suburb	evnv	30	130	130	COPYTEXT=pcde;pcde_locality;pcde_postcode;evnv_patn_postcode			3139	24/10/2002 04:23:48.00 EST	source	A
31	ptts_count	int4	30	\N	~*	Count	ptss	30	50	50	RO			3325	04/04/2004 11:45:27.00 EST	source	A
31	ptss__sequence	int4	30	\N	~*	Sequence	ptss	30	60	60	SYSTEM			3326	04/04/2004 11:45:27.00 EST	source	A
31	ptss__status	text	30	\N	~*	Status	ptss	30	90	90	SYSTEM			3329	04/04/2004 11:45:27.00 EST	source	A
31	ptss__timestamp	timestamp	30	\N	~*	Timestamp	ptss	30	70	70	SYSTEM			3327	04/04/2004 11:45:27.00 EST	source	A
31	ptss__user_entry	name	30	\N	~*	User Entry	ptss	30	80	80	SYSTEM			3328	04/04/2004 11:45:27.00 EST	source	A
31	ptss_year_service	text	30	\N	~*	Year	ptss	8	10	10	RO			3321	04/04/2004 11:45:27.00 EST	source	A
31	ptss_serv_code	text	30	\N	~*	Item	ptss	8	20	20	RO			3322	04/04/2004 11:45:27.00 EST	source	A
31	ptss_feet_code	text	30	\N	~*	Fee-type	ptss	8	30	30	RO			3323	04/04/2004 11:45:27.00 EST	source	A
31	ptss_hlfd_code	text	30	\N	~*	HealthFund	ptss	10	40	40	RO			3324	04/04/2004 11:45:27.00 EST	source	A
31	addr__sequence	int4	30	\N	~*	Sequence	addr	30	220	220	SYSTEM			3351	04/04/2004 11:45:28.00 EST	source	A
31	addr__timestamp	timestamp	30	\N	~*	Timestamp	addr	30	230	230	SYSTEM			3352	04/04/2004 11:45:28.00 EST	source	A
31	addr__user_entry	text	30	\N	~*	User Entry	addr	30	240	240	SYSTEM			3353	04/04/2004 11:45:28.00 EST	source	A
31	addr__status	bpchar	1	\N	~*	Status	addr	1	250	250	SYSTEM			3354	04/04/2004 11:45:28.00 EST	source	A
31	addr_name	text	30	\N	~*	Name	addr	12	10	10	10			3330	04/04/2004 11:45:28.00 EST	source	A
31	addr_contact	text	30	\N	~*	Contact	addr	12	20	20	10			3331	04/04/2004 11:45:28.00 EST	source	A
31	addr_organisation	text	30	\N	~*	Work Organisation	addr	12	30	30	10			3332	04/04/2004 11:45:28.00 EST	source	A
31	addr_work_phone	text	30	\N	~*	Work Phone	addr	12	40	40	10			3333	04/04/2004 11:45:28.00 EST	source	A
31	addr_work_fax	text	30	\N	~*	Work Fax	addr	12	50	50	10			3334	04/04/2004 11:45:28.00 EST	source	A
31	addr_mobile_phone	text	30	\N	~*	Mobile Phone	addr	12	60	60	10			3335	04/04/2004 11:45:28.00 EST	source	A
31	addr_work_email	text	30	\N	~*	Work Email	addr	12	70	70	10			3336	04/04/2004 11:45:28.00 EST	source	A
31	addr_work_www	text	30	\N	~*	Work WWW	addr	12	80	80	10			3337	04/04/2004 11:45:28.00 EST	source	A
31	addr_work_im	text	30	\N	~*	Work IM	addr	12	90	90	10			3338	04/04/2004 11:45:28.00 EST	source	A
31	addr_work_street	text	30	\N	~*	Work Street	addr	12	100	100	10			3339	04/04/2004 11:45:28.00 EST	source	A
31	addr_work_suburb	text	30	\N	~*	Work Suburb	addr	12	110	110	10			3340	04/04/2004 11:45:28.00 EST	source	A
31	addr_work_postcode	text	30	\N	~*	Work Postcode	addr	12	120	120	10			3341	04/04/2004 11:45:28.00 EST	source	A
31	addr_home_email	text	30	\N	~*	Home Email	addr	12	130	130	10			3342	04/04/2004 11:45:28.00 EST	source	A
31	addr_home_www	text	30	\N	~*	Home WWW	addr	12	140	140	10			3343	04/04/2004 11:45:28.00 EST	source	A
31	addr_home_im	text	30	\N	~*	Home IM	addr	12	150	150	10			3344	04/04/2004 11:45:28.00 EST	source	A
31	addr_home_street	text	30	\N	~*	Home Street	addr	12	160	160	10			3345	04/04/2004 11:45:28.00 EST	source	A
31	addr_home_suburb	text	30	\N	~*	Home Suburb	addr	12	170	170	10			3346	04/04/2004 11:45:28.00 EST	source	A
31	addr_home_postcode	text	30	\N	~*	Home Postcode	addr	12	180	180	10			3347	04/04/2004 11:45:28.00 EST	source	A
31	addr_home_phone	text	30	\N	~*	Home Phone	addr	12	190	190	10			3348	04/04/2004 11:45:28.00 EST	source	A
31	addr_home_fax	text	30	\N	~*	Home Fax	addr	12	200	200	10			3349	04/04/2004 11:45:28.00 EST	source	A
31	addr_comments	text	30	\N	~*	Comments	addr	12	210	210	10			3350	04/04/2004 11:45:28.00 EST	source	A
31	evnv_patn_ref_date	timestamp	30	\N	~*	Patn Ref Date	evnv	30	240	240	10			3358	04/04/2004 11:45:31.00 EST	source	A
31	evnv_patn_ref_period	int4	30	\N	~*	Patn Ref Period	evnv	30	250	250	10			3359	04/04/2004 11:45:31.00 EST	source	A
31	svpf_invc_balance	numeric(12,2)	1	\N	=	Invoice Balance	svpf	8	120	120	VIRTUAL=invc_balance(svpf_invc__sequence)	\N	\N	3362	04/04/2004 11:45:32.00 EST	source	A
2	svpf_invc__sequence	integer	0		=	Invoice-#	svpf	8	10	100	RO			2114	19/10/2001 12:30:23.00 EST	source	A
2	svpf_patn__sequence	integer	0		=	Patient ID	svpf	8	0	150	RO	=patn__sequence		2116	19/10/2001 12:30:24.00 EST	source	A
31	patn_ref_expired	char(1)	1	\N	=	Referral Expired	patn	3	10	182	VIRTUAL=isreferralexpired( patn_ref_date, patn_ref_period)	\N	\N	3363	04/04/2004 11:45:32.00 EST	source	A
31	patn_last_visit	timestamp	1	\N	=	Last Visit	patn	30	350	350	RO	\N	\N	3355	04/04/2004 11:45:29.00 EST	source	A
31	patn_last_service	timestamp	1	\N	=	Last Service	patn	30	360	360	RO	\N	\N	3356	04/04/2004 11:45:30.00 EST	source	A
31	patn_amount_outstanding	numeric(12,2)	1	\N	=	Amount Outstanding	patn	30	370	370	RO	\N	\N	3357	04/04/2004 11:45:30.00 EST	source	A
31	evnv_patn_last_visit	timestamp	30	\N	~*	Patn Last Visit	evnv	30	260	260	RO			3360	04/04/2004 11:45:31.00 EST	source	A
31	evnv_patn_amount_outstanding	numeric	786434	\N	~*	Patn Amount Outstanding	evnv	786434	270	270	RO			3361	04/04/2004 11:45:31.00 EST	source	A
31	dbtr_amount_outstanding	numeric	786434	\N	~*	Amount Outstanding	dbtr	786434	150	150	10			3364	04/04/2004 11:45:32.00 EST	source	A
31	dbtr_first_statement	interval	30	\N	~*	First Statement	dbtr	30	160	160	10			3365	04/04/2004 11:45:32.00 EST	source	A
31	dbst_first_statement	interval	30	\N	~*	First Statement	dbst	30	130	130	10			3366	04/04/2004 11:45:35.00 EST	source	A
31	dbst_amount_outstanding	numeric	786434	\N	~*	Amount Outstanding	dbst	786434	170	170	10			3367	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_name	text	30	\N	~*	Patn Name	dbst	30	320	320	10			3368	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_address	text	30	\N	~*	Patn Address	dbst	30	330	330	10			3369	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_suburb	text	30	\N	~*	Patn Suburb	dbst	30	340	340	10			3370	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_state	text	30	\N	~*	Patn State	dbst	30	350	350	10			3371	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_postcode	text	30	\N	~*	Patn Postcode	dbst	30	360	360	10			3372	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_dob	text	30	\N	~*	Patn Dob	dbst	30	370	370	10			3373	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_hlfd_code	text	30	\N	~*	Patn Hlfd Code	dbst	30	380	380	10			3374	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_ins_level	bpchar	1	\N	~*	Patn Ins Level	dbst	1	390	390	10			3375	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_healthnumb	text	30	\N	~*	Patn Healthnumb	dbst	30	400	400	10			3376	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_medicare	text	30	\N	~*	Patn Medicare	dbst	30	410	410	10			3377	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_healthcard	text	30	\N	~*	Patn Healthcard	dbst	30	420	420	10			3378	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn_patf_code	text	30	\N	~*	Patn Patf Code	dbst	30	430	430	10			3379	04/04/2004 11:45:35.00 EST	source	A
31	dbst_patn__sequence	int4	30	\N	~*	Patn  Sequence	dbst	30	440	440	10			3380	04/04/2004 11:45:35.00 EST	source	A
31	svlt_date_service	date	30	\N	~*	Date Service	svlt	30	10	10	10			3381	04/04/2004 11:45:38.00 EST	source	A
31	svlt_ts_service	timestamp	30	\N	~*	Ts Service	svlt	30	20	20	10			3382	04/04/2004 11:45:38.00 EST	source	A
31	svlt_serv_code	text	30	\N	~*	Serv Code	svlt	30	30	30	10			3383	04/04/2004 11:45:38.00 EST	source	A
31	svlt_percentage	int4	30	\N	~*	Percentage	svlt	30	40	40	10			3384	04/04/2004 11:45:38.00 EST	source	A
31	svlt_desc	text	30	\N	~*	Desc	svlt	30	50	50	10			3385	04/04/2004 11:45:38.00 EST	source	A
31	svlt_amount	numeric	786434	\N	~*	Amount	svlt	786434	60	60	10			3386	04/04/2004 11:45:38.00 EST	source	A
31	svlt_gst_amount	numeric	786434	\N	~*	Gst Amount	svlt	786434	70	70	10			3387	04/04/2004 11:45:38.00 EST	source	A
31	svlt_total_amount	numeric	30	\N	~*	Total Amount	svlt	30	80	80	10			3388	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn__sequence	int4	30	\N	~*	Patn  Sequence	svlt	30	90	90	10			3389	04/04/2004 11:45:38.00 EST	source	A
31	svlt_invc__sequence	int4	30	\N	~*	Invc  Sequence	svlt	30	100	100	10			3390	04/04/2004 11:45:38.00 EST	source	A
31	svlt_invc_date_printed	timestamp	30	\N	~*	Invc Date Printed	svlt	30	110	110	10			3391	04/04/2004 11:45:38.00 EST	source	A
31	svlt_invc_date_reprint	timestamp	30	\N	~*	Invc Date Reprint	svlt	30	120	120	10			3392	04/04/2004 11:45:38.00 EST	source	A
31	svlt_invc_amount	numeric	786434	\N	~*	Invc Amount	svlt	786434	130	130	10			3393	04/04/2004 11:45:38.00 EST	source	A
31	svlt_invc_gst_amount	numeric	786434	\N	~*	Invc Gst Amount	svlt	786434	140	140	10			3394	04/04/2004 11:45:38.00 EST	source	A
31	svlt_invc_credits	numeric	30	\N	~*	Invc Credits	svlt	30	150	150	10			3395	04/04/2004 11:45:38.00 EST	source	A
31	svlt_cred_summary	text	30	\N	~*	Cred Summary	svlt	30	160	160	10			3396	04/04/2004 11:45:38.00 EST	source	A
31	svlt_invc_balance	numeric	30	\N	~*	Invc Balance	svlt	30	170	170	10			3397	04/04/2004 11:45:38.00 EST	source	A
31	svlt_date_printed	date	30	\N	~*	Date Printed	svlt	30	180	180	10			3398	04/04/2004 11:45:38.00 EST	source	A
31	svlt_date_reprint	date	30	\N	~*	Date Reprint	svlt	30	190	190	10			3399	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_date	date	30	\N	~*	Rfdr Date	svlt	30	200	200	10			3400	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_period	text	30	\N	~*	Rfdr Period	svlt	30	210	210	10			3401	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_name	text	30	\N	~*	Patn Name	svlt	30	220	220	10			3402	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_address	text	30	\N	~*	Patn Address	svlt	30	230	230	10			3403	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_suburb	text	30	\N	~*	Patn Suburb	svlt	30	240	240	10			3404	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_state	text	30	\N	~*	Patn State	svlt	30	250	250	10			3405	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_postcode	text	30	\N	~*	Patn Postcode	svlt	30	260	260	10			3406	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_dob	text	30	\N	~*	Patn Dob	svlt	30	270	270	10			3407	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_hlfd_code	text	30	\N	~*	Patn Hlfd Code	svlt	30	280	280	10			3408	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_ins_level	bpchar	1	\N	~*	Patn Ins Level	svlt	1	290	290	10			3409	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_healthnumb	text	30	\N	~*	Patn Healthnumb	svlt	30	300	300	10			3410	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_medicare	text	30	\N	~*	Patn Medicare	svlt	30	310	310	10			3411	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_healthcard	text	30	\N	~*	Patn Healthcard	svlt	30	320	320	10			3412	04/04/2004 11:45:38.00 EST	source	A
31	svlt_patn_patf_code	text	30	\N	~*	Patn Patf Code	svlt	30	330	330	10			3413	04/04/2004 11:45:38.00 EST	source	A
31	svlt_dbtr_full_address	text	30	\N	~*	Dbtr Full Address	svlt	30	340	340	10			3414	04/04/2004 11:45:38.00 EST	source	A
31	svlt_dbtr_name	text	30	\N	~*	Dbtr Name	svlt	30	350	350	10			3415	04/04/2004 11:45:38.00 EST	source	A
31	svlt_dbtr_address	text	30	\N	~*	Dbtr Address	svlt	30	360	360	10			3416	04/04/2004 11:45:38.00 EST	source	A
31	svlt_dbtr_suburb	text	30	\N	~*	Dbtr Suburb	svlt	30	370	370	10			3417	04/04/2004 11:45:38.00 EST	source	A
31	svlt_dbtr_state	text	30	\N	~*	Dbtr State	svlt	30	380	380	10			3418	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_code	text	30	\N	~*	Rfdr Code	svlt	30	390	390	10			3419	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_name	text	30	\N	~*	Rfdr Name	svlt	30	400	400	10			3420	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_street	text	30	\N	~*	Rfdr Street	svlt	30	410	410	10			3421	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_suburb	text	30	\N	~*	Rfdr Suburb	svlt	30	420	420	10			3422	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_postcode	text	30	\N	~*	Rfdr Postcode	svlt	30	430	430	10			3423	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_state	text	30	\N	~*	Rfdr State	svlt	30	440	440	10			3424	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_provider	text	30	\N	~*	Rfdr Provider	svlt	30	450	450	10			3425	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_phone	text	30	\N	~*	Rfdr Phone	svlt	30	460	460	10			3426	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_salutation	text	30	\N	~*	Rfdr Salutation	svlt	30	470	470	10			3427	04/04/2004 11:45:38.00 EST	source	A
31	svlt_rfdr_index	text	30	\N	~*	Rfdr Index	svlt	30	480	480	10			3428	04/04/2004 11:45:38.00 EST	source	A
31	svlt_empl_code	text	30	\N	~*	Empl Code	svlt	30	490	490	10			3429	04/04/2004 11:45:38.00 EST	source	A
31	svlt_empl_name	text	30	\N	~*	Empl Name	svlt	30	500	500	10			3430	04/04/2004 11:45:38.00 EST	source	A
31	svlt_empl_address	text	30	\N	~*	Empl Address	svlt	30	510	510	10			3431	04/04/2004 11:45:38.00 EST	source	A
31	svlt_empl_suburb	text	30	\N	~*	Empl Suburb	svlt	30	520	520	10			3432	04/04/2004 11:45:38.00 EST	source	A
31	svlt_empl_postcode	text	30	\N	~*	Empl Postcode	svlt	30	530	530	10			3433	04/04/2004 11:45:38.00 EST	source	A
31	svlt_empl_state	text	30	\N	~*	Empl State	svlt	30	540	540	10			3434	04/04/2004 11:45:38.00 EST	source	A
31	svlt_feet_code	text	30	\N	~*	Feet Code	svlt	30	550	550	10			3435	04/04/2004 11:45:38.00 EST	source	A
31	svlt_feet_desc	text	30	\N	~*	Feet Desc	svlt	30	560	560	10			3436	04/04/2004 11:45:38.00 EST	source	A
31	svlt_prov_code	text	30	\N	~*	Prov Code	svlt	30	570	570	10			3437	04/04/2004 11:45:38.00 EST	source	A
31	svlt_prov_provider_num	text	30	\N	~*	Prov Provider Num	svlt	30	580	580	10			3438	04/04/2004 11:45:38.00 EST	source	A
31	svlt_prov_name	text	30	\N	~*	Prov Name	svlt	30	590	590	10			3439	04/04/2004 11:45:38.00 EST	source	A
31	svlt_prov_address	text	30	\N	~*	Prov Address	svlt	30	600	600	10			3440	04/04/2004 11:45:38.00 EST	source	A
31	svlt_prov_suburb	text	30	\N	~*	Prov Suburb	svlt	30	610	610	10			3441	04/04/2004 11:45:38.00 EST	source	A
31	svlt_prov_state	text	30	\N	~*	Prov State	svlt	30	620	620	10			3442	04/04/2004 11:45:38.00 EST	source	A
31	svlt_prov_postcode	text	30	\N	~*	Prov Postcode	svlt	30	630	630	10			3443	04/04/2004 11:45:38.00 EST	source	A
31	svlt_prov_salutation	text	30	\N	~*	Prov Salutation	svlt	30	640	640	10			3444	04/04/2004 11:45:38.00 EST	source	A
31	svlt_prov_phone	text	30	\N	~*	Prov Phone	svlt	30	650	650	10			3445	04/04/2004 11:45:38.00 EST	source	A
31	svlt_prov_bank_code	text	30	\N	~*	Prov Bank Code	svlt	30	660	660	10			3446	04/04/2004 11:45:38.00 EST	source	A
31	svlt__sequence	int4	30	\N	~*	Sequence	svlt	30	670	670	SYSTEM			3447	04/04/2004 11:45:38.00 EST	source	A
31	svlt__timestamp	timestamp	30	\N	~*	Timestamp	svlt	30	680	680	SYSTEM			3448	04/04/2004 11:45:38.00 EST	source	A
31	svlt__user_entry	text	30	\N	~*	User Entry	svlt	30	690	690	SYSTEM			3449	04/04/2004 11:45:38.00 EST	source	A
31	svlt__status	bpchar	1	\N	~*	Status	svlt	1	700	700	SYSTEM			3450	04/04/2004 11:45:38.00 EST	source	A
\.
--
-- Data for TOC Entry ID 513 (OID 17555319)
--
-- Name: mtfn Type: TABLE DATA Owner: source
--


COPY "mtfn"  FROM stdin;
Debtor	agdd	agdd_dbtr_code	dbtr	dbtr_code	dbtr_name	378	19/10/2001 12:30:54.00 EST	source	A
Debtor	agdi	agdi_dbtr_code	agdd	agdd_dbtr_code	agdd_dbtr_code	379	19/10/2001 12:30:54.00 EST	source	A
Aged Period	agdi	agdi_period	agdp	agdp_period	agdp_period	380	19/10/2001 12:31:01.00 EST	source	A
Fee Type	agdi	agdi_feet_code	agdt	agdt_feet_code	agdt_feet_code	381	19/10/2001 12:31:08.00 EST	source	A
Fee type	agdt	agdt_feet_code	feet	feet_code	feet_desc	382	19/10/2001 12:31:08.00 EST	source	A
Invoice	pmsc	pmsc_invc__sequence	invc	invc__sequence	invc_dbtr_code	383	19/10/2001 12:31:16.00 EST	source	A
Payment	pmsc	pmsc_paym__sequence	paym	paym__sequence	paym_drawer	385	19/10/2001 12:31:16.00 EST	source	A
Period	pmsc	pmsc_month	pmsp	pmsp_month	pmsp_month	386	19/10/2001 12:31:24.00 EST	source	A
Summary	ssms	ssms_month	ssmp	ssmp_month	ssmp_month	390	19/10/2001 12:31:40.00 EST	source	A
Summary	ssmc	ssmc_month	ssmp	ssmp_month	ssmp_month	391	19/10/2001 12:31:47.00 EST	source	A
Service	ssmc	ssmc_serv_code	serv	serv_code	serv_desc	392	19/10/2001 12:31:48.00 EST	source	A
Code total	ssms	ssms_serv_code	ssmc	ssmc_serv_code	ssmc_serv_code	393	19/10/2001 12:31:48.00 EST	source	A
Parent Class	mtat	mtat_class_name	mtcl	mtcl_name	mtcl_title	22	10/10/2001 12:25:11.00 EST	source	A
New Foreign Relationship	mtfn	mtfn_join	mtat	mtat_name	mtat_title	26	10/10/2001 12:25:19.00 EST	source	A
Foreign Key	mtfn	mtfn_key	mtat	mtat_name	mtat_title	27	10/10/2001 12:25:19.00 EST	source	A
Local Class	mtfn	mtfn_master_class	mtcl	mtcl_name	mtcl_title	28	10/10/2001 12:25:20.00 EST	source	A
Foreign Class	mtfn	mtfn_other_class	mtcl	mtcl_name	mtcl_title	29	10/10/2001 12:25:20.00 EST	source	A
Tender Type	crev	crev_tdtp_code	tdtp	tdtp_code	tdtp_desc	394	19/10/2001 12:31:58.00 EST	source	A
patv	cnrt	cnrt_patn__sequence	patv	patv__sequence	patv__sequence	395	19/10/2001 12:33:54.00 EST	source	A
Patient	invc	invc_patn__sequence	patv	patv__sequence	patv_psnam	396	19/10/2001 12:33:55.00 EST	source	A
Patient Demographics	mdaf	mdaf_patn__sequence	patv	patv__sequence	patv__sequence	397	19/10/2001 12:33:55.00 EST	source	A
Debtor	patv	patv_dbtr_code	dbtr	dbtr_code	dbtr_name	399	19/10/2001 12:33:56.00 EST	source	A
View Attribute	mtfn	mtfn_view	mtat	mtat_name	mtat_title	30	10/10/2001 12:25:20.00 EST	source	A
Employer	patv	patv_empl_code	empl	empl_code	empl_name	400	19/10/2001 12:33:56.00 EST	source	A
Fee Type	patv	patv_feet_code	feet	feet_code	feet_desc	401	19/10/2001 12:33:56.00 EST	source	A
Parent Class	mtrl	mtrl_master_class	mtcl	mtcl_name	mtcl_title	31	10/10/2001 12:25:27.00 EST	source	A
Healthfund	patv	patv_hlfd_code	hlfd	hlfd_code	hlfd_desc	402	19/10/2001 12:33:57.00 EST	source	A
Type	aptd	aptd_aptp_code	aptp	aptp_code	aptp_desc	492	25/10/2002 09:52:21.00 EST	source	A
Referrer	patv	patv_rfdr_code	rfdr	rfdr_code	rfdr_name	404	19/10/2001 12:33:57.00 EST	source	A
Patient	svpf	svpf_patn__sequence	patv	patv__sequence	patv_psnam	405	19/10/2001 12:33:58.00 EST	source	A
Cluster Parent	clst	clst_serv_code_parent	serv	serv_code	serv_code	363	19/10/2001 12:30:09.00 EST	source	A
Child Class	mtrl	mtrl_other_class	mtcl	mtcl_name	mtcl_title	32	10/10/2001 12:25:28.00 EST	source	A
Service	feeb	feeb_serv_code	serv	serv_code	serv_desc	364	19/10/2001 12:30:09.00 EST	source	A
Invoice	svpf	svpf_invc__sequence	invc	invc__sequence	invc_date_created	367	19/10/2001 12:30:26.00 EST	source	A
Medicare Voucher	svpf	svpf_mdaf__sequence	mdaf	mdaf__sequence	mdaf_date_created	368	19/10/2001 12:30:27.00 EST	source	A
Service	svpf	svpf_serv_code	serv	serv_code	serv_desc	371	19/10/2001 12:30:28.00 EST	source	A
Tender Type	paym	paym_tdtp_code	tdtp	tdtp_code	tdtp_desc	373	19/10/2001 12:30:36.00 EST	source	A
Invoice	agdi	agdi_invc__sequence	invc	invc__sequence	invc__sequence	376	19/10/2001 12:30:46.00 EST	source	A
Fee Type	clst	clst_feet_code	feet	feet_code	feet_code	308	19/10/2001 12:26:41.00 EST	source	A
Fee Level	feeb	feeb_feet_code	feet	feet_code	feet_desc	309	19/10/2001 12:26:41.00 EST	source	A
Invoice credited	cred	cred_invc__sequence	invc	invc__sequence	invc_amount	316	19/10/2001 12:27:59.00 EST	source	A
Payment	cash	cash_paym__sequence	paym	paym__sequence	paym__sequence	348	19/10/2001 12:29:25.00 EST	source	A
Payment Source	cred	cred_paym__sequence	paym	paym__sequence	paym_drawer	349	19/10/2001 12:29:26.00 EST	source	A
Bank Deposit Reports	paym	paym_bkdp__sequence	bkdp	bkdp__sequence	bkdp_desc	350	19/10/2001 12:29:26.00 EST	source	A
Location	aptd	aptd_locn_code	locn	locn_code	locn_desc	493	25/10/2002 09:52:23.00 EST	source	A
Provider	aptd	aptd_prov_code	prov	prov_code	prov_name	495	25/10/2002 09:57:42.00 EST	source	A
prov	evnt	evnt_prov_code	prov	prov_code	prov_name	496	25/10/2002 09:57:42.00 EST	source	A
Bank	invc	invc_bank_code	bank	bank_code	bank_name	317	19/10/2001 12:28:00.00 EST	source	A
Referrer	invc	invc_rfdr_code	rfdr	rfdr_code	rfdr_name	358	19/10/2001 12:30:00.00 EST	source	A
Referring Doctor	mdaf	mdaf_rfdr_code	rfdr	rfdr_code	rfdr_code	359	19/10/2001 12:30:00.00 EST	source	A
Debtor	invc	invc_dbtr_code	dbtr	dbtr_code	dbtr_name	318	19/10/2001 12:28:00.00 EST	source	A
Component	clst	clst_serv_code_child	serv	serv_code	serv_code	362	19/10/2001 12:30:08.00 EST	source	A
Type	evnv	evnv_aptp_code	aptp	aptp_code	aptp_desc	487	24/10/2002 04:26:22.00 EST	source	A
Provider	evnv	evnv_prov_code	prov	prov_code	prov_name	497	25/10/2002 09:57:42.00 EST	source	A
Provider	invc	invc_prov_code	prov	prov_code	prov_name	498	25/10/2002 09:57:42.00 EST	source	A
Provider	lthd	lthd_prov_code	prov	prov_code	prov_name	499	25/10/2002 09:57:43.00 EST	source	A
patn	evnt	evnt_patn__sequence	patn	patn__sequence	patn_psnam	477	24/10/2002 04:23:33.00 EST	source	A
Service Provider	mdaf	mdaf_prov_code	prov	prov_code	prov_code	500	25/10/2002 09:57:43.00 EST	source	A
Provider	patn	patn_prov_code	prov	prov_code	prov_name	501	25/10/2002 09:57:43.00 EST	source	A
Provider	patv	patv_prov_code	prov	prov_code	prov_name	502	25/10/2002 09:57:43.00 EST	source	A
Employer	invc	invc_empl_code	empl	empl_code	empl_name	319	19/10/2001 12:28:00.00 EST	source	A
Fee Type	invc	invc_feet_code	feet	feet_code	feet_desc	320	19/10/2001 12:28:01.00 EST	source	A
locn	evnt	evnt_locn_code	locn	locn_code	locn_desc	484	24/10/2002 04:26:12.00 EST	source	A
Location	evnv	evnv_locn_code	locn	locn_code	locn_desc	485	24/10/2002 04:26:12.00 EST	source	A
patn	cnrt	cnrt_patn__sequence	patn	patn__sequence	patn__sequence	424	09/02/2002 08:02:00.00 EST	source	A
patn	docs	docs_patn__sequence	patn	patn__sequence	patn__sequence	425	09/02/2002 08:02:00.00 EST	source	A
Status	evnv	evnv_apst_code	apst	apst_code	apst_desc	491	24/10/2002 04:26:42.00 EST	source	A
Patient	invc	invc_patn__sequence	patn	patn__sequence	patn_psnam	427	09/02/2002 08:02:00.00 EST	source	A
Patient Demographics	mdaf	mdaf_patn__sequence	patn	patn__sequence	patn__sequence	428	09/02/2002 08:02:00.00 EST	source	A
Debtor	patn	patn_dbtr_code	dbtr	dbtr_code	dbtr_name	430	09/02/2002 08:02:01.00 EST	source	A
Employer	patn	patn_empl_code	empl	empl_code	empl_name	431	09/02/2002 08:02:01.00 EST	source	A
Fee Type	patn	patn_feet_code	feet	feet_code	feet_desc	432	09/02/2002 08:02:01.00 EST	source	A
Healthfund	patn	patn_hlfd_code	hlfd	hlfd_code	hlfd_desc	433	09/02/2002 08:02:02.00 EST	source	A
patf	patn	patn_patf_code	patf	patf_code	patf_code	434	09/02/2002 08:02:02.00 EST	source	A
Referrer	patn	patn_rfdr_code	rfdr	rfdr_code	rfdr_name	436	09/02/2002 08:02:02.00 EST	source	A
Patient	svpf	svpf_patn__sequence	patn	patn__sequence	patn_psnam	438	09/02/2002 08:02:03.00 EST	source	A
Patient	surg	surg_patn__sequence	patn	patn__sequence	patn__sequence	439	09/02/2002 08:02:08.00 EST	source	A
Patient	notv	notv_patn__sequence	patn	patn__sequence	patn_psnam	504	13/03/2003 15:31:02.86 EST	source	A
Patient	notv	notv_patn__sequence	patv	patv__sequence	patv_psnam	398	19/10/2001 12:33:55.00 EST	source	A
Referror	evnv	evnv_rfdr_code	rfdr	rfdr_code	rfdr_name	503	24/10/2002 04:26:22.00 EST	source	A
mtat	mtal	mtal_mtat_name	mtat	mtat_name	mtat_name	506	04/04/2004 11:45:20.00 EST	source	A
mtop	mtal	mtal_mtop_code	mtop	mtop_code	mtop_code	507	04/04/2004 11:45:20.00 EST	source	A
mtcl	mtad	mtad_class	mtcl	mtcl_name	mtcl_name	509	04/04/2004 11:45:23.00 EST	source	A
Menus	mtad	mtad_parent	mtag	mtag_name	mtag_name	508	04/04/2004 11:45:23.00 EST	source	A
Menus	mtag	mtag_parent	mtag	mtag_name	mtag_name	510	04/04/2004 11:45:23.00 EST	source	A
\.
--
-- Data for TOC Entry ID 514 (OID 17555385)
--
-- Name: mtrl Type: TABLE DATA Owner: source
--


COPY "mtrl"  FROM stdin;
Patients covered	dbtr	dbtr_code	patv	patv_dbtr_code	265	19/10/2001 12:33:52.00 EST	source	A
Patients	hlfd	hlfd_code	patv	patv_hlfd_code	266	19/10/2001 12:33:52.00 EST	source	A
Attributes	mtcl	mtcl_name	mtat	mtat_class_name	12	10/10/2001 12:25:10.00 EST	source	A
Foreigns	mtcl	mtcl_name	mtfn	mtfn_master_class	13	10/10/2001 12:25:19.00 EST	source	A
Relations	mtcl	mtcl_name	mtrl	mtrl_master_class	14	10/10/2001 12:25:27.00 EST	source	A
Details	form	form_code	fmdt	fmdt_form_code	16	10/10/2001 12:25:56.00 EST	source	A
Contracts	patv	patv__sequence	cnrv	cnrv_patn__sequence	267	19/10/2001 12:33:52.00 EST	source	A
Care Episodes	patv	patv__sequence	epsd	epsd_patn__sequence	268	19/10/2001 12:33:53.00 EST	source	A
Invoices	patv	patv__sequence	invc	invc_patn__sequence	269	19/10/2001 12:33:53.00 EST	source	A
Services Performed	patv	patv__sequence	svpf	svpf_patn__sequence	271	19/10/2001 12:33:54.00 EST	source	A
Patients referred	rfdr	rfdr_code	patv	patv_rfdr_code	272	19/10/2001 12:33:54.00 EST	source	A
TITLE	bank	bank_code	invc	invc_bank_code	209	19/10/2001 12:27:56.00 EST	source	A
Invoices	dbtr	dbtr_code	invc	invc_dbtr_code	210	19/10/2001 12:27:56.00 EST	source	A
TITLE	empl	empl_code	invc	invc_empl_code	211	19/10/2001 12:27:56.00 EST	source	A
TITLE	feet	feet_code	invc	invc_feet_code	212	19/10/2001 12:27:57.00 EST	source	A
Conditions	aptp	aptp_code	aptd	aptd_aptp_code	315	25/10/2002 09:52:21.00 EST	source	A
Invoices	patn	patn__sequence	invc	invc_patn__sequence	292	09/02/2002 08:01:58.00 EST	source	A
Services Performed	patn	patn__sequence	svpf	svpf_patn__sequence	295	09/02/2002 08:01:59.00 EST	source	A
Patients referred	rfdr	rfdr_code	patn	patn_rfdr_code	296	09/02/2002 08:01:59.00 EST	source	A
Surgical Note	patn	patn__sequence	surg	surg_patn__sequence	297	09/02/2002 08:02:08.00 EST	source	A
Payments Deposited	bkdp	bkdp__sequence	paym	paym_bkdp__sequence	233	19/10/2001 12:29:25.00 EST	source	A
Invoices referred	rfdr	rfdr_code	invc	invc_rfdr_code	237	19/10/2001 12:29:58.00 EST	source	A
TITLE	prov	prov_code	invc	invc_prov_code	316	25/10/2002 09:57:41.00 EST	source	A
Components	serv	serv_code	clst	clst_serv_code_parent	240	19/10/2001 12:30:07.00 EST	source	A
Fees	serv	serv_code	feeb	feeb_serv_code	241	19/10/2001 12:30:08.00 EST	source	A
Services Invoiced	invc	invc__sequence	svpf	svpf_invc__sequence	242	19/10/2001 12:30:25.00 EST	source	A
Services Performed	mdaf	mdaf__sequence	svpf	svpf_mdaf__sequence	243	19/10/2001 12:30:25.00 EST	source	A
Letterhead	prov	prov_code	lthd	lthd_prov_code	317	25/10/2002 09:57:42.00 EST	source	A
Aged Invoices	agdd	agdd_dbtr_code	agdi	agdi_dbtr_code	250	19/10/2001 12:30:53.00 EST	source	A
Aged Debt	dbtr	dbtr_code	agdd	agdd_dbtr_code	251	19/10/2001 12:30:54.00 EST	source	A
Aged Invoices	agdp	agdp_period	agdi	agdi_period	252	19/10/2001 12:31:00.00 EST	source	A
Aged Invoices	agdt	agdt_feet_code	agdi	agdi_feet_code	253	19/10/2001 12:31:07.00 EST	source	A
Credits in period	pmsp	pmsp_month	pmsc	pmsc_month	255	19/10/2001 12:31:23.00 EST	source	A
Services	ssmp	ssmp_month	ssms	ssms_month	258	19/10/2001 12:31:39.00 EST	source	A
Service Codes	ssmp	ssmp_month	ssmc	ssmc_month	259	19/10/2001 12:31:47.00 EST	source	A
Credits to Invoice	invc	invc__sequence	crev	crev_invc__sequence	260	19/10/2001 12:31:58.00 EST	source	A
Credits	svpf	svpf_invc__sequence	crev	crev_invc__sequence	261	19/10/2001 12:31:58.00 EST	source	A
Payment Distribution	paym	paym__sequence	crep	crep_paym__sequence	262	19/10/2001 12:32:19.00 EST	source	A
Fees	feet	feet_code	feeb	feeb_feet_code	205	19/10/2001 12:26:40.00 EST	source	A
Appointments	patn	patn__sequence	evnv	evnv_patn__sequence	311	24/10/2002 04:23:55.00 EST	source	A
evnt	locn	locn_code	evnt	evnt_locn_code	312	24/10/2002 04:26:11.00 EST	source	A
Patients covered	dbtr	dbtr_code	patn	patn_dbtr_code	287	09/02/2002 08:01:57.00 EST	source	A
Patients	hlfd	hlfd_code	patn	patn_hlfd_code	288	09/02/2002 08:01:58.00 EST	source	A
patn	patf	patf_code	patn	patn_patf_code	289	09/02/2002 08:01:58.00 EST	source	A
Documents	patn	patn__sequence	docs	docs_patn__sequence	290	09/02/2002 08:01:58.00 EST	source	A
Patient Notes	patn	patn__sequence	notv	notv_patn__sequence	318	13/03/2003 15:31:02.70 EST	source	A
Patient Notes	patv	patv__sequence	notv	notv_patn__sequence	270	19/10/2001 12:33:53.00 EST	source	A
Menu Items	mtag	mtag_name	mtad	mtad_parent	320	04/04/2004 11:45:24.00 EST	source	A
Menus	mtag	mtag_name	mtag	mtag_parent	321	04/04/2004 11:45:24.00 EST	source	A
Classes	mtag	mtag_name	mtcl	mtcl_group	322	04/04/2004 11:45:24.00 EST	source	A
\.
--
-- Data for TOC Entry ID 515 (OID 17555449)
--
-- Name: form Type: TABLE DATA Owner: source
--


COPY "form"  FROM stdin;
\.
--
-- Data for TOC Entry ID 516 (OID 17555539)
--
-- Name: fmdt Type: TABLE DATA Owner: source
--


COPY "fmdt"  FROM stdin;
\.
--
-- Data for TOC Entry ID 517 (OID 17555669)
--
-- Name: accl Type: TABLE DATA Owner: source
--


COPY "accl"  FROM stdin;
-	\N	0	11/10/2001 07:37:46.00 EST	source	N
\.
--
-- Data for TOC Entry ID 518 (OID 17555725)
--
-- Name: bank Type: TABLE DATA Owner: source
--


COPY "bank"  FROM stdin;
-	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	18/04/2003 16:06:08.26 EST	source	N
\.
--
-- Data for TOC Entry ID 519 (OID 17555789)
--
-- Name: cash Type: TABLE DATA Owner: source
--


COPY "cash"  FROM stdin;
\.
--
-- Data for TOC Entry ID 520 (OID 17555851)
--
-- Name: clsp Type: TABLE DATA Owner: source
--


COPY "clsp"  FROM stdin;
-	\N	0	11/10/2001 07:37:48.00 EST	source	N
\.
--
-- Data for TOC Entry ID 521 (OID 17555907)
--
-- Name: clst Type: TABLE DATA Owner: source
--


COPY "clst"  FROM stdin;
104	\N	4	0	23/10/2002 11:48:03.00 EST	source	N
\.
--
-- Data for TOC Entry ID 522 (OID 17555964)
--
-- Name: cnty Type: TABLE DATA Owner: source
--


COPY "cnty"  FROM stdin;
-	\N	0	11/10/2001 07:37:48.00 EST	source	N
\.
--
-- Data for TOC Entry ID 523 (OID 17556020)
--
-- Name: conf Type: TABLE DATA Owner: source
--


COPY "conf"  FROM stdin;
-	\N	\N	0	\N	\N	0	11/10/2001 07:37:49.00 EST	source	N
\.
--
-- Data for TOC Entry ID 524 (OID 17556082)
--
-- Name: cred Type: TABLE DATA Owner: source
--


COPY "cred"  FROM stdin;
\.
--
-- Data for TOC Entry ID 525 (OID 17556142)
--
-- Name: diag Type: TABLE DATA Owner: source
--


COPY "diag"  FROM stdin;
\.
--
-- Data for TOC Entry ID 526 (OID 17556202)
--
-- Name: empl Type: TABLE DATA Owner: source
--


COPY "empl"  FROM stdin;
-	\N	\N	\N	\N	\N	0	18/04/2003 15:49:28.65 EST	source	N
\.
--
-- Data for TOC Entry ID 527 (OID 17556262)
--
-- Name: epsd Type: TABLE DATA Owner: source
--


COPY "epsd"  FROM stdin;
\.
--
-- Data for TOC Entry ID 528 (OID 17556336)
--
-- Name: feeb Type: TABLE DATA Owner: source
--


COPY "feeb"  FROM stdin;
\.
--
-- Data for TOC Entry ID 529 (OID 17556396)
--
-- Name: feet Type: TABLE DATA Owner: source
--


COPY "feet"  FROM stdin;
-	\N	0	18/04/2003 16:06:08.50 EST	source	N
\.
--
-- Data for TOC Entry ID 530 (OID 17556452)
--
-- Name: hlfd Type: TABLE DATA Owner: source
--


COPY "hlfd"  FROM stdin;
-	\N	\N	1	11/10/2001 07:37:50.00 EST	source	N
98	\N	\N	2	16/10/2001 16:56:46.00 EST	source	N
3	\N	\N	3	16/10/2001 16:56:46.00 EST	source	N
MBP	\N	Medibank Private	4	09/02/2002 09:42:20.00 EST	source	N
GEHF	\N	Government Employees Health Fund	10	22/06/2002 08:22:26.00 EST	source	N
Defense Health	\N	Defense Health	9	28/03/2002 09:15:50.00 EST	source	N
HBA	\N	HBA	5	09/02/2002 09:42:40.00 EST	source	N
MBF	\N	MBF	6	09/02/2002 09:42:50.00 EST	source	N
AU	\N	Australian Unity	7	09/02/2002 09:42:58.00 EST	source	N
GMH	\N	GMHBA	8	09/02/2002 09:43:14.00 EST	source	N
\.
--
-- Data for TOC Entry ID 531 (OID 17556509)
--
-- Name: icd9 Type: TABLE DATA Owner: source
--


COPY "icd9"  FROM stdin;
\N	-	\N	\N	\N	\N	\N	\N	\N	\N	0	11/10/2001 07:37:50.00 EST	source	N
\.
--
-- Data for TOC Entry ID 532 (OID 17556573)
--
-- Name: inst Type: TABLE DATA Owner: source
--


COPY "inst"  FROM stdin;
-	\N	\N	\N	\N	\N	0	11/10/2001 07:37:51.00 EST	source	N
\.
--
-- Data for TOC Entry ID 533 (OID 17556633)
--
-- Name: invc Type: TABLE DATA Owner: source
--


COPY "invc"  FROM stdin;
\.
--
-- Data for TOC Entry ID 534 (OID 17556715)
--
-- Name: labl Type: TABLE DATA Owner: source
--


COPY "labl"  FROM stdin;
\.
--
-- Data for TOC Entry ID 535 (OID 17556776)
--
-- Name: lthd Type: TABLE DATA Owner: source
--


COPY "lthd"  FROM stdin;
\.
--
-- Data for TOC Entry ID 536 (OID 17556841)
--
-- Name: mdaf Type: TABLE DATA Owner: source
--


COPY "mdaf"  FROM stdin;
\N	\N	\N	\N	\N	\N	\N	\N	0	11/10/2001 13:11:03.00 EST	source	N
\.
--
-- Data for TOC Entry ID 537 (OID 17556903)
--
-- Name: mdbt Type: TABLE DATA Owner: source
--


COPY "mdbt"  FROM stdin;
\.
--
-- Data for TOC Entry ID 538 (OID 17556968)
--
-- Name: mdcr Type: TABLE DATA Owner: source
--


COPY "mdcr"  FROM stdin;
\.
--
-- Data for TOC Entry ID 539 (OID 17557026)
--
-- Name: note Type: TABLE DATA Owner: source
--


COPY "note"  FROM stdin;
\.
--
-- Data for TOC Entry ID 540 (OID 17557082)
--
-- Name: paym Type: TABLE DATA Owner: source
--


COPY "paym"  FROM stdin;
\.
--
-- Data for TOC Entry ID 541 (OID 17557150)
--
-- Name: prnt Type: TABLE DATA Owner: source
--


COPY "prnt"  FROM stdin;
\.
--
-- Data for TOC Entry ID 542 (OID 17557209)
--
-- Name: prov Type: TABLE DATA Owner: source
--


COPY "prov"  FROM stdin;
-	\N	\N	\N	\N	\N	\N	\N	\N	-	0	18/04/2003 15:48:53.99 EST	source	N	\N
\.
--
-- Data for TOC Entry ID 543 (OID 17557275)
--
-- Name: pyas Type: TABLE DATA Owner: source
--


COPY "pyas"  FROM stdin;
\.
--
-- Data for TOC Entry ID 544 (OID 17557333)
--
-- Name: rfdr Type: TABLE DATA Owner: source
--


COPY "rfdr"  FROM stdin;
-	\N	\N	\N	\N	\N	\N	\N	\N	\N	0	26/04/2002 09:00:17.00 EST	source	N
\.
--
-- Data for TOC Entry ID 545 (OID 17557397)
--
-- Name: serv Type: TABLE DATA Owner: source
--


COPY "serv"  FROM stdin;
-	1	0	\N	0	18/04/2003 16:06:08.86 EST	source	N
\.
--
-- Data for TOC Entry ID 546 (OID 17557457)
--
-- Name: stts Type: TABLE DATA Owner: source
--


COPY "stts"  FROM stdin;
\.
--
-- Data for TOC Entry ID 547 (OID 17557516)
--
-- Name: svpf Type: TABLE DATA Owner: source
--


COPY "svpf"  FROM stdin;
\.
--
-- Data for TOC Entry ID 548 (OID 17557587)
--
-- Name: tdtp Type: TABLE DATA Owner: source
--


COPY "tdtp"  FROM stdin;
C	Cash and Cheques	Cash	Cash	\N	\N	4	13/10/2001 08:15:57.00 EST	source	N
Q	Cash and Cheques	Cheques	Cheque	\N	\N	9	13/10/2001 08:15:57.00 EST	source	N
W	Adjustments	Write Off	Write off	\N	\N	12	13/10/2001 08:15:57.00 EST	source	N
-	Unknown	Unknown	\N	\N	\N	2	13/10/2001 08:15:57.00 EST	source	N
B	EFTPOS	Credit Cards	BankCard	\N	\N	3	13/10/2001 08:15:57.00 EST	source	N
E	EFTPOS	EFTPOS	Eftpos	\N	\N	5	13/10/2001 08:15:57.00 EST	source	N
F	EFTPOS	Directed Payment	Directed	\N	\N	6	13/10/2001 08:15:57.00 EST	source	N
M	EFTPOS	Credit Cards	Mastercard	\N	\N	7	13/10/2001 08:15:57.00 EST	source	N
O	EFTPOS	Credit Cards	Other	\N	\N	8	13/10/2001 08:15:57.00 EST	source	N
V	EFTPOS	Credit Cards	Visa	\N	\N	11	13/10/2001 08:15:57.00 EST	source	N
R	Adjustments	Rebates	Rebate	\N	\N	10	13/10/2001 08:15:57.00 EST	source	N
G	GST-OLD	GST(old ledger)	GST(old ledger)	\N	\N	13	13/10/2001 11:51:07.00 EST	jenny	N
\.
--
-- Data for TOC Entry ID 549 (OID 17557761)
--
-- Name: bkdp Type: TABLE DATA Owner: source
--


COPY "bkdp"  FROM stdin;
\.
--
-- Data for TOC Entry ID 550 (OID 17557853)
--
-- Name: docs Type: TABLE DATA Owner: source
--


COPY "docs"  FROM stdin;
\.
--
-- Data for TOC Entry ID 551 (OID 17557915)
--
-- Name: patf Type: TABLE DATA Owner: source
--


COPY "patf"  FROM stdin;
-	\N	0	18/04/2003 16:06:08.61 EST	source	N
\.
--
-- Data for TOC Entry ID 552 (OID 17557971)
--
-- Name: patn Type: TABLE DATA Owner: source
--


COPY "patn"  FROM stdin;
\.
--
-- Data for TOC Entry ID 553 (OID 17558065)
--
-- Name: surg Type: TABLE DATA Owner: source
--


COPY "surg"  FROM stdin;
\.
--
-- Data for TOC Entry ID 554 (OID 17558152)
--
-- Name: eftr Type: TABLE DATA Owner: source
--


COPY "eftr"  FROM stdin;
\.
--
-- Data for TOC Entry ID 555 (OID 17558212)
--
-- Name: dbtr Type: TABLE DATA Owner: source
--


COPY "dbtr"  FROM stdin;
-	\N	\N	\N	\N	\N	\N	\N	\N	@ 1 mon	0	12/10/2001 06:09:27.00 EST	source	N	\N	\N
\.
--
-- Data for TOC Entry ID 556 (OID 17558563)
--
-- Name: mtpt Type: TABLE DATA Owner: source
--


COPY "mtpt"  FROM stdin;
agedbydate.sql	$Id: agedbydate.sql,v 1.3 2002/09/26 05:46:59 source Exp $	1	29/09/2002 05:32:35.00 EST	source	A
dbtraddress.sql	$Id: dbtraddress.sql,v 1.2 2002/09/26 07:11:28 source Exp $	2	29/09/2002 05:35:27.00 EST	source	A
appointment-add.sql	$Id: appointment-add.sql,v 1.1 2002/09/27 04:38:33 source Exp $	3	29/09/2002 11:47:56.00 EST	source	A
agedbydate.sql	$Id: appt_patch_01.sql,v 1.4 2002/10/14 00:03:46 source Exp $	4	16/10/2002 07:13:29.00 EST	source	A
agedbydate.sql	$Id: appt_patch_01.sql,v 1.5 2002/10/14 00:16:31 source Exp $	5	16/10/2002 07:17:44.00 EST	source	A
agedbydate.sql	$Id: appt_patch_01.sql,v 1.6 2002/10/16 02:45:28 source Exp $	6	24/10/2002 04:23:56.00 EST	source	A
agedbydate.sql	$Id: appt_patch_01.sql,v 1.7 2002/10/21 21:31:50 source Exp $	7	24/10/2002 04:32:41.00 EST	source	A
mtcl-userlabels.sql	$Id: mtcl-userlabels.sql,v 1.1 2003/02/16 21:01:38 source Exp $	9	18/02/2003 16:01:53.62 EST	source	A
mtat-widths.sql	$Id: mtat-widths.sql,v 1.1 2003/03/11 19:52:39 source Exp $	10	13/03/2003 15:00:44.82 EST	source	A
notv-add.sql	$Id: notv-add.sql,v 1.10 2003/01/22 23:22:44 source Exp $	11	13/03/2003 15:31:04.13 EST	source	A
mtcl-userlabels.sql	$Id: mtcl-userlabels.sql,v 1.6 2004/02/25 10:33:35 source Exp $	12	04/04/2004 11:45:40.00 EST	source	A
patch-41to42.sql	$Id: patch-41to42.sql,v 1.14 2004/03/04 09:28:28 source Exp $	13	04/04/2004 11:45:40.00 EST	source	A
\.
--
-- Data for TOC Entry ID 557 (OID 17558856)
--
-- Name: mttb Type: TABLE DATA Owner: source
--


COPY "mttb"  FROM stdin;
svpv	$Id: svpv-crea.sql,v 1.15 2002/10/03 06:54:12 source Exp $	\N	1	05/10/2002 13:55:42.00 EST	source	A
locn	$Id: locn-crea.sql,v 1.2 2002/09/29 07:24:23 source Exp $	\N	2	16/10/2002 07:12:54.00 EST	source	A
aptp	$Id: aptp-crea.sql,v 1.2 2002/09/29 07:23:08 source Exp $	\N	3	16/10/2002 07:13:00.00 EST	source	A
apst	$Id: apst-crea.sql,v 1.1 2002/10/05 08:40:16 source Exp $	\N	4	16/10/2002 07:13:06.00 EST	source	A
evnt	$Id: evnt-crea.sql,v 1.7 2002/10/05 08:41:48 source Exp $	\N	5	16/10/2002 07:13:11.00 EST	source	A
evnt	$Id: evnt-addconstraints.sql,v 1.3 2002/10/05 08:41:35 source Exp $	Triggers	6	16/10/2002 07:13:13.00 EST	source	A
evnv	$Id: evnv-functions.sql,v 1.2 2002/09/29 07:13:26 source Exp $	\N	7	16/10/2002 07:13:20.00 EST	source	A
evnv	$Id: evnv-crea.sql,v 1.6 2002/09/29 10:44:48 source Exp $	\N	8	16/10/2002 07:13:23.00 EST	source	A
locn	$Id: locn-crea.sql,v 1.2 2002/09/29 07:24:23 source Exp $	\N	9	16/10/2002 07:16:56.00 EST	source	A
aptp	$Id: aptp-crea.sql,v 1.2 2002/09/29 07:23:08 source Exp $	\N	10	16/10/2002 07:17:01.00 EST	source	A
apst	$Id: apst-crea.sql,v 1.1 2002/10/05 08:40:16 source Exp $	\N	11	16/10/2002 07:17:06.00 EST	source	A
evnt	$Id: evnt-crea.sql,v 1.7 2002/10/05 08:41:48 source Exp $	\N	12	16/10/2002 07:17:13.00 EST	source	A
evnt	$Id: evnt-addconstraints.sql,v 1.3 2002/10/05 08:41:35 source Exp $	Triggers	13	16/10/2002 07:17:15.00 EST	source	A
evnv	$Id: evnv-functions.sql,v 1.2 2002/09/29 07:13:26 source Exp $	\N	14	16/10/2002 07:17:22.00 EST	source	A
evnv	$Id: evnv-crea.sql,v 1.6 2002/09/29 10:44:48 source Exp $	\N	15	16/10/2002 07:17:25.00 EST	source	A
locn	$Id: locn-crea.sql,v 1.3 2002/10/16 02:44:01 source Exp $	\N	16	24/10/2002 04:22:59.00 EST	source	A
aptp	$Id: aptp-crea.sql,v 1.3 2002/10/16 02:44:01 source Exp $	\N	17	24/10/2002 04:23:05.00 EST	source	A
aptd	$Id: aptd-crea.sql,v 1.3 2002/10/16 02:44:01 source Exp $	\N	18	24/10/2002 04:23:12.00 EST	source	A
aptd	$Id: aptd-addconstraints.sql,v 1.3 2002/10/05 08:41:35 source Exp $	Triggers	19	24/10/2002 04:23:13.00 EST	source	A
apst	$Id: apst-crea.sql,v 1.2 2002/10/16 02:44:01 source Exp $	\N	20	24/10/2002 04:23:21.00 EST	source	A
evnt	$Id: evnt-crea.sql,v 1.7 2002/10/05 08:41:48 source Exp $	\N	21	24/10/2002 04:23:26.00 EST	source	A
evnt	$Id: evnt-addconstraints.sql,v 1.3 2002/10/05 08:41:35 source Exp $	Triggers	22	24/10/2002 04:23:28.00 EST	source	A
evnv	$Id: evnv-functions.sql,v 1.2 2002/09/29 07:13:26 source Exp $	\N	23	24/10/2002 04:23:35.00 EST	source	A
evnv	$Id: evnv-crea.sql,v 1.7 2002/10/16 02:44:43 source Exp $	\N	24	24/10/2002 04:23:38.00 EST	source	A
aptd	$Id: aptd-crea.sql,v 1.1 2002/10/23 01:39:20 source Exp $	\N	25	25/10/2002 09:52:14.00 EST	source	A
aptd	$Id: aptd-addconstraints.sql,v 1.3 2002/10/05 08:41:35 source Exp $	Triggers	26	25/10/2002 09:52:15.00 EST	source	A
svpf	$Id: svpf-triggers.sql,v 1.22 2003/02/13 03:27:00 source Exp $	\N	27	14/02/2003 22:27:39.26 EST	source	A
evnv	$Id: evnv-crea.sql,v 1.7 2002/10/16 02:44:43 source Exp $	\N	28	28/02/2003 05:28:57.11 EST	source	A
evnv	$Id: evnv-crea.sql,v 1.8 2003/02/26 19:50:46 source Exp $	\N	29	28/02/2003 20:38:13.39 EST	source	A
notv	$Id: notv-functions.sql,v 1.1 2003/02/26 03:27:15 source Exp $	\N	30	13/03/2003 15:31:01.31 EST	source	A
notv	$Id: notv-crea.sql,v 1.1 2003/02/26 03:27:29 source Exp $	\N	31	13/03/2003 15:31:01.91 EST	source	A
cnrt	$Id: cnrt-crea.sql,v 1.5 2003/04/16 02:54:27 source Exp $	\N	32	18/04/2003 16:27:42.64 EST	source	A
cnrv	$Id:	\N	33	18/04/2003 16:29:10.67 EST	source	A
mtop	$Id: mtop-crea.sql,v 1.5 2004/02/10 22:12:46 source Exp $	\N	34	04/04/2004 11:45:19.00 EST	source	A
mtal	$Id: mtal-crea.sql,v 1.3 2004/02/01 05:39:56 source Exp $	\N	35	04/04/2004 11:45:20.00 EST	source	A
mtag	$Id: mtag-crea.sql,v 1.4 2004/02/01 05:40:23 source Exp $	\N	36	04/04/2004 11:45:22.00 EST	source	A
mtad	$Id: mtag-crea.sql,v 1.4 2004/02/01 05:40:23 source Exp $	\N	37	04/04/2004 11:45:24.00 EST	source	A
mttk	$Id: mttk-crea.sql,v 1.1 2004/01/28 23:32:28 source Exp $	\N	38	04/04/2004 11:45:25.00 EST	source	A
mtau	$Id: mtau-crea.sql,v 1.4 2004/02/25 03:11:40 source Exp $	\N	39	04/04/2004 11:45:26.00 EST	source	A
pcde	$Id: pcde-crea.sql,v 1.4 2004/02/01 06:39:31 source Exp $	\N	40	04/04/2004 11:45:27.00 EST	source	A
ptss	$Id: ptss-crea.sql,v 1.5 2004/02/01 06:39:31 source Exp $	\N	41	04/04/2004 11:45:28.00 EST	source	A
addr	$Id:	\N	42	04/04/2004 11:45:29.00 EST	source	A
patn	$Id: patn_last_visit.sql,v 1.3 2004/02/12 23:22:36 source Exp $	\N	43	04/04/2004 11:45:29.00 EST	source	A
patn	$Id: patn_last_service.sql,v 1.3 2004/02/11 04:02:44 source Exp $	\N	44	04/04/2004 11:45:30.00 EST	source	A
patn	$Id: patn_amount_outstanding.sql,v 1.8 2004/02/24 21:23:33 source Exp $	\N	45	04/04/2004 11:45:30.00 EST	source	A
evnv	$Id: evnv-crea.sql,v 1.12 2004/01/23 05:10:55 source Exp $	\N	46	04/04/2004 11:45:32.00 EST	source	A
svpf	$Id: svpf_invc_balance.sql,v 1.2 2004/03/04 04:18:28 source Exp $	\N	47	04/04/2004 11:45:32.00 EST	source	A
patn	$Id: patn_ref_expired.sql,v 1.3 2004/02/11 03:04:33 source Exp $	\N	48	04/04/2004 11:45:32.00 EST	source	A
mvac_label	$Id: mvac_label-crea.sql,v 1.2 2004/02/24 20:53:49 source Exp $	\N	49	04/04/2004 11:45:34.00 EST	source	A
cred	$Id: cred-functions.sql,v 1.6 2004/02/26 06:16:43 source Exp $	\N	50	04/04/2004 11:45:34.00 EST	source	A
paym	$Id: paym-triggers.sql,v 1.12 2004/02/26 04:36:47 source Exp $	\N	51	04/04/2004 11:45:34.00 EST	source	A
invc	$Id: invc-triggers.sql,v 1.15 2004/03/14 04:46:59 source Exp $	\N	52	04/04/2004 11:45:35.00 EST	source	A
svpf	$Id: svpf-triggers.sql,v 1.26 2004/03/14 04:37:28 source Exp $	\N	53	04/04/2004 11:45:35.00 EST	source	A
dbst	$Id: dbst-crea.sql,v 1.19 2004/02/25 08:01:11 source Exp $	\N	54	04/04/2004 11:45:36.00 EST	source	A
dbag	$Id:	\N	55	04/04/2004 11:45:37.00 EST	source	A
\.
--
-- Data for TOC Entry ID 558 (OID 17559000)
--
-- Name: locn Type: TABLE DATA Owner: source
--


COPY "locn"  FROM stdin;
-	Default	#FF0000	0	18/04/2003 16:06:08.59 EST	source	N
\.
--
-- Data for TOC Entry ID 559 (OID 17559058)
--
-- Name: aptp Type: TABLE DATA Owner: source
--


COPY "aptp"  FROM stdin;
-	Default	#FF0000	\N	1	0	18/04/2003 16:06:08.15 EST	source	N
\.
--
-- Data for TOC Entry ID 560 (OID 17559120)
--
-- Name: apst Type: TABLE DATA Owner: source
--


COPY "apst"  FROM stdin;
-	Default	#FF0000	0	18/04/2003 16:06:07.97 EST	source	N
\.
--
-- Data for TOC Entry ID 561 (OID 17559178)
--
-- Name: evnt Type: TABLE DATA Owner: source
--


COPY "evnt"  FROM stdin;
\.
--
-- Data for TOC Entry ID 562 (OID 17559249)
--
-- Name: aptd Type: TABLE DATA Owner: source
--


COPY "aptd"  FROM stdin;
\.
--
-- Data for TOC Entry ID 563 (OID 17559445)
--
-- Name: cnrt Type: TABLE DATA Owner: source
--


COPY "cnrt"  FROM stdin;
\.
--
-- Data for TOC Entry ID 564 (OID 17561461)
--
-- Name: mtop Type: TABLE DATA Owner: source
--


COPY "mtop"  FROM stdin;
0	Matches	1	04/04/2004 11:45:19.00 EST	source	N
1	Like	2	04/04/2004 11:45:19.00 EST	source	N
2	Contains	3	04/04/2004 11:45:19.00 EST	source	N
3	Equals	4	04/04/2004 11:45:19.00 EST	source	N
4	GreaterThan	5	04/04/2004 11:45:19.00 EST	source	N
5	LessThan	6	04/04/2004 11:45:19.00 EST	source	N
6	GreaterThanOrEqual	7	04/04/2004 11:45:19.00 EST	source	N
7	LessThanOrEqual	8	04/04/2004 11:45:19.00 EST	source	N
8	NotEqual	9	04/04/2004 11:45:19.00 EST	source	N
9	All	10	04/04/2004 11:45:19.00 EST	source	N
\.
--
-- Data for TOC Entry ID 565 (OID 17561538)
--
-- Name: mtal Type: TABLE DATA Owner: source
--


COPY "mtal"  FROM stdin;
patn_amount_outstanding	4	0.00	#FF0000	1	1	04/04/2004 11:45:30.00 EST	source	N
svpf_invc_balance	4	0.00	#FF0000	1	2	04/04/2004 11:45:32.00 EST	source	N
patn_ref_expired	3	Y	#FF0000	1	3	04/04/2004 11:45:32.00 EST	source	N
\.
--
-- Data for TOC Entry ID 566 (OID 17561623)
--
-- Name: mtag Type: TABLE DATA Owner: source
--


COPY "mtag"  FROM stdin;
METADATA	Meta Data	\N	64	Z-LAST	1	04/04/2004 11:45:21.00 EST	source	N
\.
--
-- Data for TOC Entry ID 567 (OID 17561713)
--
-- Name: mtad Type: TABLE DATA Owner: source
--


COPY "mtad"  FROM stdin;
Application Detail	\N	METADATA	mtad	31	Z-LAST	1	04/04/2004 11:45:24.00 EST	source	N
Application Groups	\N	METADATA	mtag	31	Z-LAST	2	04/04/2004 11:45:24.00 EST	source	N
Alerts	\N	METADATA	mtal	31	Z-LAST	3	04/04/2004 11:45:24.00 EST	source	N
Attribute Meta Data	\N	METADATA	mtat	31	Z-LAST	4	04/04/2004 11:45:24.00 EST	source	N
Class Meta Data	\N	METADATA	mtcl	31	Z-LAST	5	04/04/2004 11:45:24.00 EST	source	N
Foreign Meta Data	\N	METADATA	mtfn	31	Z-LAST	6	04/04/2004 11:45:24.00 EST	source	N
Comparison Operators	\N	METADATA	mtop	31	Z-LAST	7	04/04/2004 11:45:24.00 EST	source	N
Relation Meta Data	\N	METADATA	mtrl	31	Z-LAST	8	04/04/2004 11:45:24.00 EST	source	N
mtsv	\N	METADATA	mtsv	31	Z-LAST	9	04/04/2004 11:45:24.00 EST	source	N
\.
--
-- Data for TOC Entry ID 568 (OID 17561814)
--
-- Name: mttk Type: TABLE DATA Owner: source
--


COPY "mttk"  FROM stdin;
\.
--
-- Data for TOC Entry ID 569 (OID 17561884)
--
-- Name: mtau Type: TABLE DATA Owner: source
--


COPY "mtau"  FROM stdin;
\.
--
-- Data for TOC Entry ID 570 (OID 17561956)
--
-- Name: pcde Type: TABLE DATA Owner: source
--


COPY "pcde"  FROM stdin;
\.
--
-- Data for TOC Entry ID 571 (OID 17562116)
--
-- Name: addr Type: TABLE DATA Owner: source
--


COPY "addr"  FROM stdin;
\.
--
-- Data for TOC Entry ID 572 (OID 17562317)
--
-- Name: mvac_label Type: TABLE DATA Owner: source
--


COPY "mvac_label"  FROM stdin;
1	guest
2	user
4	supervisor
8	medical
16	office
32	office-admin
64	local-admin
127	support-admin
\.
--
--
--
-- Name: "k_username" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "k_username" on "mvac_user" using btree ( "username" "text_ops" );

--
--
--
-- Name: "k_database" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "k_database" on "mvac_database" using btree ( "db_name" "text_ops" );

--
--
--
-- Name: "mtcl_mtcl__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "mtcl_mtcl__sequence_key" on "mtcl" using btree ( "mtcl__sequence" "int4_ops" );

--
--
--
-- Name: "mtat_mtat__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "mtat_mtat__sequence_key" on "mtat" using btree ( "mtat__sequence" "int4_ops" );

--
--
--
-- Name: "form_form__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "form_form__sequence_key" on "form" using btree ( "form__sequence" "int4_ops" );

--
--
--
-- Name: "bank_bank__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "bank_bank__sequence_key" on "bank" using btree ( "bank__sequence" "int4_ops" );

--
--
--
-- Name: "ix_clst_1" Type: INDEX Owner: source
--

CREATE  INDEX "ix_clst_1" on "clst" using btree ( "clst_serv_code_parent" "text_ops" );

--
--
--
-- Name: "conf_conf__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "conf_conf__sequence_key" on "conf" using btree ( "conf__sequence" "int4_ops" );

--
--
--
-- Name: "ix_cred_invc" Type: INDEX Owner: source
--

CREATE  INDEX "ix_cred_invc" on "cred" using btree ( "cred_invc__sequence" "int4_ops" );

--
--
--
-- Name: "ix_cred_paym" Type: INDEX Owner: source
--

CREATE  INDEX "ix_cred_paym" on "cred" using btree ( "cred_paym__sequence" "int4_ops" );

--
--
--
-- Name: "empl_empl__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "empl_empl__sequence_key" on "empl" using btree ( "empl__sequence" "int4_ops" );

--
--
--
-- Name: "ix_feeb_1" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "ix_feeb_1" on "feeb" using btree ( "feeb_serv_code" "text_ops", "feeb_feet_code" "text_ops" );

--
--
--
-- Name: "feet_feet__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "feet_feet__sequence_key" on "feet" using btree ( "feet__sequence" "int4_ops" );

--
--
--
-- Name: "hlfd_hlfd__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "hlfd_hlfd__sequence_key" on "hlfd" using btree ( "hlfd__sequence" "int4_ops" );

--
--
--
-- Name: "ix_invc_dbtr" Type: INDEX Owner: source
--

CREATE  INDEX "ix_invc_dbtr" on "invc" using btree ( "invc_dbtr_code" "text_ops" );

--
--
--
-- Name: "ix_invc_patn" Type: INDEX Owner: source
--

CREATE  INDEX "ix_invc_patn" on "invc" using btree ( "invc_patn__sequence" "int4_ops" );

--
--
--
-- Name: "ix_paym_1" Type: INDEX Owner: source
--

CREATE  INDEX "ix_paym_1" on "paym" using btree ( "paym_bkdp__sequence" "int4_ops" );

--
--
--
-- Name: "ix_paym_2" Type: INDEX Owner: source
--

CREATE  INDEX "ix_paym_2" on "paym" using btree ( "paym_date_entry" "timestamp_ops" );

--
--
--
-- Name: "prnt_prnt__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "prnt_prnt__sequence_key" on "prnt" using btree ( "prnt__sequence" "int4_ops" );

--
--
--
-- Name: "prov_prov__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "prov_prov__sequence_key" on "prov" using btree ( "prov__sequence" "int4_ops" );

--
--
--
-- Name: "ix_pyas_svpf" Type: INDEX Owner: source
--

CREATE  INDEX "ix_pyas_svpf" on "pyas" using btree ( "pyas_svpf__sequence" "int4_ops" );

--
--
--
-- Name: "ix_pyas_paym" Type: INDEX Owner: source
--

CREATE  INDEX "ix_pyas_paym" on "pyas" using btree ( "pyas_paym__sequence" "int4_ops" );

--
--
--
-- Name: "rfdr_rfdr__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "rfdr_rfdr__sequence_key" on "rfdr" using btree ( "rfdr__sequence" "int4_ops" );

--
--
--
-- Name: "ix_rfdr_code" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "ix_rfdr_code" on "rfdr" using btree ( "rfdr_code" "text_ops" );

--
--
--
-- Name: "serv_serv__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "serv_serv__sequence_key" on "serv" using btree ( "serv__sequence" "int4_ops" );

--
--
--
-- Name: "ix_svpf_patn" Type: INDEX Owner: source
--

CREATE  INDEX "ix_svpf_patn" on "svpf" using btree ( "svpf_patn__sequence" "int4_ops" );

--
--
--
-- Name: "ix_svpf_invc" Type: INDEX Owner: source
--

CREATE  INDEX "ix_svpf_invc" on "svpf" using btree ( "svpf_invc__sequence" "int4_ops" );

--
--
--
-- Name: "ix_svpf_serv" Type: INDEX Owner: source
--

CREATE  INDEX "ix_svpf_serv" on "svpf" using btree ( "svpf_serv_code" "text_ops" );

--
--
--
-- Name: "tdtp_tdtp__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "tdtp_tdtp__sequence_key" on "tdtp" using btree ( "tdtp__sequence" "int4_ops" );

--
--
--
-- Name: "patf_patf__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "patf_patf__sequence_key" on "patf" using btree ( "patf__sequence" "int4_ops" );

--
--
--
-- Name: "ix_patn_dbtr" Type: INDEX Owner: source
--

CREATE  INDEX "ix_patn_dbtr" on "patn" using btree ( "patn_dbtr_code" "text_ops" );

--
--
--
-- Name: "ix_patn_rfdr" Type: INDEX Owner: source
--

CREATE  INDEX "ix_patn_rfdr" on "patn" using btree ( "patn_rfdr_code" "text_ops" );

--
--
--
-- Name: "ix_patn_psnam" Type: INDEX Owner: source
--

CREATE  INDEX "ix_patn_psnam" on "patn" using btree ( "patn_psnam" "text_ops" );

--
--
--
-- Name: "ix_surg_patn" Type: INDEX Owner: source
--

CREATE  INDEX "ix_surg_patn" on "surg" using btree ( "surg_patn__sequence" "int4_ops" );

--
--
--
-- Name: "dbtr_dbtr__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "dbtr_dbtr__sequence_key" on "dbtr" using btree ( "dbtr__sequence" "int4_ops" );

--
--
--
-- Name: "locn_locn__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "locn_locn__sequence_key" on "locn" using btree ( "locn__sequence" "int4_ops" );

--
--
--
-- Name: "aptp_aptp__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "aptp_aptp__sequence_key" on "aptp" using btree ( "aptp__sequence" "int4_ops" );

--
--
--
-- Name: "apst_apst__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "apst_apst__sequence_key" on "apst" using btree ( "apst__sequence" "int4_ops" );

--
--
--
-- Name: "ix_cnrt_patn" Type: INDEX Owner: source
--

CREATE  INDEX "ix_cnrt_patn" on "cnrt" using btree ( "cnrt_patn__sequence" "int4_ops" );

--
--
--
-- Name: "ix_cnrt_serv" Type: INDEX Owner: source
--

CREATE  INDEX "ix_cnrt_serv" on "cnrt" using btree ( "cnrt_serv_code" "text_ops" );

--
--
--
-- Name: "mtop_mtop__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "mtop_mtop__sequence_key" on "mtop" using btree ( "mtop__sequence" "int4_ops" );

--
--
--
-- Name: "mtag_mtag__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "mtag_mtag__sequence_key" on "mtag" using btree ( "mtag__sequence" "int4_ops" );

--
--
--
-- Name: "mttk_mttk__sequence_key" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "mttk_mttk__sequence_key" on "mttk" using btree ( "mttk__sequence" "int4_ops" );

--
--
--
-- Name: "ix_pcde_postcode" Type: INDEX Owner: source
--

CREATE  INDEX "ix_pcde_postcode" on "pcde" using btree ( "pcde_postcode" "text_ops" );

--
--
--
-- Name: "ix_pcde_locality" Type: INDEX Owner: source
--

CREATE  INDEX "ix_pcde_locality" on "pcde" using btree ( "pcde_locality" "text_ops" );

--
--
--
-- Name: "ix_postcode__sequence" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "ix_postcode__sequence" on "pcde" using btree ( "pcde_postcode" "text_ops", "pcde__sequence" "int4_ops" );

--
--
--
-- Name: "ix_locality__sequence" Type: INDEX Owner: source
--

CREATE UNIQUE INDEX "ix_locality__sequence" on "pcde" using btree ( "pcde_locality" "text_ops", "pcde__sequence" "int4_ops" );

--
--
--
-- Name: "RI_ConstraintTrigger_17561087" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtat_fk_mtcl" AFTER INSERT OR UPDATE ON "mtat"  FROM "mtcl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtat_fk_mtcl', 'mtat', 'mtcl', 'UNSPECIFIED', 'mtat_class_name', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561089" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtat_fk_mtcl" AFTER DELETE ON "mtcl"  FROM "mtat" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('mtat_fk_mtcl', 'mtat', 'mtcl', 'UNSPECIFIED', 'mtat_class_name', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561091" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtat_fk_mtcl" AFTER UPDATE ON "mtcl"  FROM "mtat" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtat_fk_mtcl', 'mtat', 'mtcl', 'UNSPECIFIED', 'mtat_class_name', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561093" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_master_mtcl" AFTER INSERT OR UPDATE ON "mtfn"  FROM "mtcl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtfn_fk_master_mtcl', 'mtfn', 'mtcl', 'UNSPECIFIED', 'mtfn_master_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561095" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_master_mtcl" AFTER DELETE ON "mtcl"  FROM "mtfn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('mtfn_fk_master_mtcl', 'mtfn', 'mtcl', 'UNSPECIFIED', 'mtfn_master_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561097" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_master_mtcl" AFTER UPDATE ON "mtcl"  FROM "mtfn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtfn_fk_master_mtcl', 'mtfn', 'mtcl', 'UNSPECIFIED', 'mtfn_master_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561099" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_other_mtcl" AFTER INSERT OR UPDATE ON "mtfn"  FROM "mtcl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtfn_fk_other_mtcl', 'mtfn', 'mtcl', 'UNSPECIFIED', 'mtfn_other_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561101" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_other_mtcl" AFTER DELETE ON "mtcl"  FROM "mtfn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('mtfn_fk_other_mtcl', 'mtfn', 'mtcl', 'UNSPECIFIED', 'mtfn_other_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561103" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_other_mtcl" AFTER UPDATE ON "mtcl"  FROM "mtfn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtfn_fk_other_mtcl', 'mtfn', 'mtcl', 'UNSPECIFIED', 'mtfn_other_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561105" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_key_mtat" AFTER INSERT OR UPDATE ON "mtfn"  FROM "mtat" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtfn_fk_key_mtat', 'mtfn', 'mtat', 'UNSPECIFIED', 'mtfn_key', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561107" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_key_mtat" AFTER DELETE ON "mtat"  FROM "mtfn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('mtfn_fk_key_mtat', 'mtfn', 'mtat', 'UNSPECIFIED', 'mtfn_key', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561109" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_key_mtat" AFTER UPDATE ON "mtat"  FROM "mtfn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtfn_fk_key_mtat', 'mtfn', 'mtat', 'UNSPECIFIED', 'mtfn_key', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561111" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_join_mtat" AFTER INSERT OR UPDATE ON "mtfn"  FROM "mtat" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtfn_fk_join_mtat', 'mtfn', 'mtat', 'UNSPECIFIED', 'mtfn_join', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561113" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_join_mtat" AFTER DELETE ON "mtat"  FROM "mtfn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('mtfn_fk_join_mtat', 'mtfn', 'mtat', 'UNSPECIFIED', 'mtfn_join', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561115" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_join_mtat" AFTER UPDATE ON "mtat"  FROM "mtfn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtfn_fk_join_mtat', 'mtfn', 'mtat', 'UNSPECIFIED', 'mtfn_join', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561117" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_view_mtat" AFTER INSERT OR UPDATE ON "mtfn"  FROM "mtat" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtfn_fk_view_mtat', 'mtfn', 'mtat', 'UNSPECIFIED', 'mtfn_view', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561119" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_view_mtat" AFTER DELETE ON "mtat"  FROM "mtfn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('mtfn_fk_view_mtat', 'mtfn', 'mtat', 'UNSPECIFIED', 'mtfn_view', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561121" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtfn_fk_view_mtat" AFTER UPDATE ON "mtat"  FROM "mtfn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtfn_fk_view_mtat', 'mtfn', 'mtat', 'UNSPECIFIED', 'mtfn_view', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561123" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtrl_fk_master_mtcl" AFTER INSERT OR UPDATE ON "mtrl"  FROM "mtcl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtrl_fk_master_mtcl', 'mtrl', 'mtcl', 'UNSPECIFIED', 'mtrl_master_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561125" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtrl_fk_master_mtcl" AFTER DELETE ON "mtcl"  FROM "mtrl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('mtrl_fk_master_mtcl', 'mtrl', 'mtcl', 'UNSPECIFIED', 'mtrl_master_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561127" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtrl_fk_master_mtcl" AFTER UPDATE ON "mtcl"  FROM "mtrl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtrl_fk_master_mtcl', 'mtrl', 'mtcl', 'UNSPECIFIED', 'mtrl_master_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561129" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtrl_fk_other_mtcl" AFTER INSERT OR UPDATE ON "mtrl"  FROM "mtcl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtrl_fk_other_mtcl', 'mtrl', 'mtcl', 'UNSPECIFIED', 'mtrl_other_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561131" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtrl_fk_other_mtcl" AFTER DELETE ON "mtcl"  FROM "mtrl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('mtrl_fk_other_mtcl', 'mtrl', 'mtcl', 'UNSPECIFIED', 'mtrl_other_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561133" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtrl_fk_other_mtcl" AFTER UPDATE ON "mtcl"  FROM "mtrl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtrl_fk_other_mtcl', 'mtrl', 'mtcl', 'UNSPECIFIED', 'mtrl_other_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561135" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "fmdt_fk_form" AFTER INSERT OR UPDATE ON "fmdt"  FROM "form" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('fmdt_fk_form', 'fmdt', 'form', 'UNSPECIFIED', 'fmdt_form_code', 'form_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561137" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "fmdt_fk_form" AFTER DELETE ON "form"  FROM "fmdt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('fmdt_fk_form', 'fmdt', 'form', 'UNSPECIFIED', 'fmdt_form_code', 'form_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561139" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "fmdt_fk_form" AFTER UPDATE ON "form"  FROM "fmdt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('fmdt_fk_form', 'fmdt', 'form', 'UNSPECIFIED', 'fmdt_form_code', 'form_code');

--
--
--
-- Name: mtfn_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "mtfn_tr_before" BEFORE INSERT OR UPDATE ON "mtfn"  FOR EACH ROW EXECUTE PROCEDURE "mtfn_tr_before" ();

--
--
--
-- Name: mtrl_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "mtrl_tr_before" BEFORE INSERT OR UPDATE ON "mtrl"  FOR EACH ROW EXECUTE PROCEDURE "mtrl_tr_before" ();

--
--
--
-- Name: form_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "form_tr_before" BEFORE INSERT OR UPDATE ON "form"  FOR EACH ROW EXECUTE PROCEDURE "form_tr_before" ();

--
--
--
-- Name: "RI_ConstraintTrigger_17561144" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cash_fk_paym" AFTER INSERT OR UPDATE ON "cash"  FROM "paym" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('cash_fk_paym', 'cash', 'paym', 'UNSPECIFIED', 'cash_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561146" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cash_fk_paym" AFTER DELETE ON "paym"  FROM "cash" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('cash_fk_paym', 'cash', 'paym', 'UNSPECIFIED', 'cash_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561148" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cash_fk_paym" AFTER UPDATE ON "paym"  FROM "cash" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('cash_fk_paym', 'cash', 'paym', 'UNSPECIFIED', 'cash_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561150" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cash_fk_bank" AFTER INSERT OR UPDATE ON "cash"  FROM "bank" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('cash_fk_bank', 'cash', 'bank', 'UNSPECIFIED', 'cash_bank_code', 'bank_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561152" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cash_fk_bank" AFTER DELETE ON "bank"  FROM "cash" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('cash_fk_bank', 'cash', 'bank', 'UNSPECIFIED', 'cash_bank_code', 'bank_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561154" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cash_fk_bank" AFTER UPDATE ON "bank"  FROM "cash" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('cash_fk_bank', 'cash', 'bank', 'UNSPECIFIED', 'cash_bank_code', 'bank_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561156" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cred_fk_paym" AFTER INSERT OR UPDATE ON "cred"  FROM "paym" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('cred_fk_paym', 'cred', 'paym', 'UNSPECIFIED', 'cred_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561158" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cred_fk_paym" AFTER DELETE ON "paym"  FROM "cred" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('cred_fk_paym', 'cred', 'paym', 'UNSPECIFIED', 'cred_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561160" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cred_fk_paym" AFTER UPDATE ON "paym"  FROM "cred" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('cred_fk_paym', 'cred', 'paym', 'UNSPECIFIED', 'cred_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561162" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cred_fk_invc" AFTER INSERT OR UPDATE ON "cred"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('cred_fk_invc', 'cred', 'invc', 'UNSPECIFIED', 'cred_invc__sequence', 'invc__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561164" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cred_fk_invc" AFTER DELETE ON "invc"  FROM "cred" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('cred_fk_invc', 'cred', 'invc', 'UNSPECIFIED', 'cred_invc__sequence', 'invc__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561166" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cred_fk_invc" AFTER UPDATE ON "invc"  FROM "cred" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('cred_fk_invc', 'cred', 'invc', 'UNSPECIFIED', 'cred_invc__sequence', 'invc__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561168" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "feeb_fk_serv" AFTER INSERT OR UPDATE ON "feeb"  FROM "serv" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('feeb_fk_serv', 'feeb', 'serv', 'UNSPECIFIED', 'feeb_serv_code', 'serv_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561170" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "feeb_fk_serv" AFTER DELETE ON "serv"  FROM "feeb" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('feeb_fk_serv', 'feeb', 'serv', 'UNSPECIFIED', 'feeb_serv_code', 'serv_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561172" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "feeb_fk_serv" AFTER UPDATE ON "serv"  FROM "feeb" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('feeb_fk_serv', 'feeb', 'serv', 'UNSPECIFIED', 'feeb_serv_code', 'serv_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561174" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "feeb_fk_feet" AFTER INSERT OR UPDATE ON "feeb"  FROM "feet" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('feeb_fk_feet', 'feeb', 'feet', 'UNSPECIFIED', 'feeb_feet_code', 'feet_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561176" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "feeb_fk_feet" AFTER DELETE ON "feet"  FROM "feeb" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('feeb_fk_feet', 'feeb', 'feet', 'UNSPECIFIED', 'feeb_feet_code', 'feet_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561178" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "feeb_fk_feet" AFTER UPDATE ON "feet"  FROM "feeb" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('feeb_fk_feet', 'feeb', 'feet', 'UNSPECIFIED', 'feeb_feet_code', 'feet_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561180" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_bank" AFTER INSERT OR UPDATE ON "invc"  FROM "bank" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('invc_fk_bank', 'invc', 'bank', 'UNSPECIFIED', 'invc_bank_code', 'bank_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561182" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_bank" AFTER DELETE ON "bank"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('invc_fk_bank', 'invc', 'bank', 'UNSPECIFIED', 'invc_bank_code', 'bank_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561184" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_bank" AFTER UPDATE ON "bank"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('invc_fk_bank', 'invc', 'bank', 'UNSPECIFIED', 'invc_bank_code', 'bank_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561186" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_prov" AFTER INSERT OR UPDATE ON "invc"  FROM "prov" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('invc_fk_prov', 'invc', 'prov', 'UNSPECIFIED', 'invc_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561188" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_prov" AFTER DELETE ON "prov"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('invc_fk_prov', 'invc', 'prov', 'UNSPECIFIED', 'invc_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561190" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_prov" AFTER UPDATE ON "prov"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('invc_fk_prov', 'invc', 'prov', 'UNSPECIFIED', 'invc_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561192" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_empl" AFTER INSERT OR UPDATE ON "invc"  FROM "empl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('invc_fk_empl', 'invc', 'empl', 'UNSPECIFIED', 'invc_empl_code', 'empl_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561194" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_empl" AFTER DELETE ON "empl"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('invc_fk_empl', 'invc', 'empl', 'UNSPECIFIED', 'invc_empl_code', 'empl_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561196" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_empl" AFTER UPDATE ON "empl"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('invc_fk_empl', 'invc', 'empl', 'UNSPECIFIED', 'invc_empl_code', 'empl_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561198" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_feet" AFTER INSERT OR UPDATE ON "invc"  FROM "feet" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('invc_fk_feet', 'invc', 'feet', 'UNSPECIFIED', 'invc_feet_code', 'feet_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561200" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_feet" AFTER DELETE ON "feet"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('invc_fk_feet', 'invc', 'feet', 'UNSPECIFIED', 'invc_feet_code', 'feet_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561202" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_feet" AFTER UPDATE ON "feet"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('invc_fk_feet', 'invc', 'feet', 'UNSPECIFIED', 'invc_feet_code', 'feet_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561204" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_rfdr" AFTER INSERT OR UPDATE ON "invc"  FROM "rfdr" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('invc_fk_rfdr', 'invc', 'rfdr', 'UNSPECIFIED', 'invc_rfdr_code', 'rfdr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561206" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_rfdr" AFTER DELETE ON "rfdr"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('invc_fk_rfdr', 'invc', 'rfdr', 'UNSPECIFIED', 'invc_rfdr_code', 'rfdr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561208" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_rfdr" AFTER UPDATE ON "rfdr"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('invc_fk_rfdr', 'invc', 'rfdr', 'UNSPECIFIED', 'invc_rfdr_code', 'rfdr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561210" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mdcr_fk_paym" AFTER INSERT OR UPDATE ON "mdcr"  FROM "paym" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mdcr_fk_paym', 'mdcr', 'paym', 'UNSPECIFIED', 'mdcr_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561212" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mdcr_fk_paym" AFTER DELETE ON "paym"  FROM "mdcr" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('mdcr_fk_paym', 'mdcr', 'paym', 'UNSPECIFIED', 'mdcr_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561214" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mdcr_fk_paym" AFTER UPDATE ON "paym"  FROM "mdcr" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mdcr_fk_paym', 'mdcr', 'paym', 'UNSPECIFIED', 'mdcr_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561216" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mdcr_fk_svpf" AFTER INSERT OR UPDATE ON "mdcr"  FROM "svpf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mdcr_fk_svpf', 'mdcr', 'svpf', 'UNSPECIFIED', 'mdcr_svpf__sequence', 'svpf__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561218" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mdcr_fk_svpf" AFTER DELETE ON "svpf"  FROM "mdcr" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('mdcr_fk_svpf', 'mdcr', 'svpf', 'UNSPECIFIED', 'mdcr_svpf__sequence', 'svpf__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561220" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mdcr_fk_svpf" AFTER UPDATE ON "svpf"  FROM "mdcr" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mdcr_fk_svpf', 'mdcr', 'svpf', 'UNSPECIFIED', 'mdcr_svpf__sequence', 'svpf__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561222" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "paym_fk_tdtp" AFTER INSERT OR UPDATE ON "paym"  FROM "tdtp" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('paym_fk_tdtp', 'paym', 'tdtp', 'UNSPECIFIED', 'paym_tdtp_code', 'tdtp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561224" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "paym_fk_tdtp" AFTER DELETE ON "tdtp"  FROM "paym" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('paym_fk_tdtp', 'paym', 'tdtp', 'UNSPECIFIED', 'paym_tdtp_code', 'tdtp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561226" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "paym_fk_tdtp" AFTER UPDATE ON "tdtp"  FROM "paym" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('paym_fk_tdtp', 'paym', 'tdtp', 'UNSPECIFIED', 'paym_tdtp_code', 'tdtp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561228" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "pyas_fk_paym" AFTER INSERT OR UPDATE ON "pyas"  FROM "paym" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('pyas_fk_paym', 'pyas', 'paym', 'UNSPECIFIED', 'pyas_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561230" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "pyas_fk_paym" AFTER DELETE ON "paym"  FROM "pyas" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('pyas_fk_paym', 'pyas', 'paym', 'UNSPECIFIED', 'pyas_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561232" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "pyas_fk_paym" AFTER UPDATE ON "paym"  FROM "pyas" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('pyas_fk_paym', 'pyas', 'paym', 'UNSPECIFIED', 'pyas_paym__sequence', 'paym__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561234" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "pyas_fk_svpf" AFTER INSERT OR UPDATE ON "pyas"  FROM "svpf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('pyas_fk_svpf', 'pyas', 'svpf', 'UNSPECIFIED', 'pyas_svpf__sequence', 'svpf__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561236" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "pyas_fk_svpf" AFTER DELETE ON "svpf"  FROM "pyas" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('pyas_fk_svpf', 'pyas', 'svpf', 'UNSPECIFIED', 'pyas_svpf__sequence', 'svpf__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561238" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "pyas_fk_svpf" AFTER UPDATE ON "svpf"  FROM "pyas" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('pyas_fk_svpf', 'pyas', 'svpf', 'UNSPECIFIED', 'pyas_svpf__sequence', 'svpf__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561240" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_invc" AFTER INSERT OR UPDATE ON "svpf"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('svpf_fk_invc', 'svpf', 'invc', 'UNSPECIFIED', 'svpf_invc__sequence', 'invc__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561242" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_invc" AFTER DELETE ON "invc"  FROM "svpf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('svpf_fk_invc', 'svpf', 'invc', 'UNSPECIFIED', 'svpf_invc__sequence', 'invc__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561244" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_invc" AFTER UPDATE ON "invc"  FROM "svpf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('svpf_fk_invc', 'svpf', 'invc', 'UNSPECIFIED', 'svpf_invc__sequence', 'invc__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561246" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_mdaf" AFTER INSERT OR UPDATE ON "svpf"  FROM "mdaf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('svpf_fk_mdaf', 'svpf', 'mdaf', 'UNSPECIFIED', 'svpf_mdaf__sequence', 'mdaf__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561248" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_mdaf" AFTER DELETE ON "mdaf"  FROM "svpf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('svpf_fk_mdaf', 'svpf', 'mdaf', 'UNSPECIFIED', 'svpf_mdaf__sequence', 'mdaf__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561250" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_mdaf" AFTER UPDATE ON "mdaf"  FROM "svpf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('svpf_fk_mdaf', 'svpf', 'mdaf', 'UNSPECIFIED', 'svpf_mdaf__sequence', 'mdaf__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561252" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_serv" AFTER INSERT OR UPDATE ON "svpf"  FROM "serv" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('svpf_fk_serv', 'svpf', 'serv', 'UNSPECIFIED', 'svpf_serv_code', 'serv_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561254" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_serv" AFTER DELETE ON "serv"  FROM "svpf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('svpf_fk_serv', 'svpf', 'serv', 'UNSPECIFIED', 'svpf_serv_code', 'serv_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561256" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_serv" AFTER UPDATE ON "serv"  FROM "svpf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('svpf_fk_serv', 'svpf', 'serv', 'UNSPECIFIED', 'svpf_serv_code', 'serv_code');

--
--
--
-- Name: bank_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "bank_tr_before" BEFORE INSERT OR UPDATE ON "bank"  FOR EACH ROW EXECUTE PROCEDURE "bank_tr_before" ();

--
--
--
-- Name: feet_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "feet_tr_before" BEFORE INSERT OR UPDATE ON "feet"  FOR EACH ROW EXECUTE PROCEDURE "feet_tr_before" ();

--
--
--
-- Name: hlfd_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "hlfd_tr_before" BEFORE INSERT OR UPDATE ON "hlfd"  FOR EACH ROW EXECUTE PROCEDURE "hlfd_tr_before" ();

--
--
--
-- Name: serv_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "serv_tr_before" BEFORE INSERT OR UPDATE ON "serv"  FOR EACH ROW EXECUTE PROCEDURE "serv_tr_before" ();

--
--
--
-- Name: tr_serv_ckdel Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_serv_ckdel" BEFORE DELETE OR UPDATE ON "serv"  FOR EACH ROW EXECUTE PROCEDURE "fn_serv_ckdel" ();

--
--
--
-- Name: "RI_ConstraintTrigger_17561267" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_feet" AFTER INSERT OR UPDATE ON "patn"  FROM "feet" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('patn_fk_feet', 'patn', 'feet', 'UNSPECIFIED', 'patn_feet_code', 'feet_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561269" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_feet" AFTER DELETE ON "feet"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('patn_fk_feet', 'patn', 'feet', 'UNSPECIFIED', 'patn_feet_code', 'feet_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561271" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_feet" AFTER UPDATE ON "feet"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('patn_fk_feet', 'patn', 'feet', 'UNSPECIFIED', 'patn_feet_code', 'feet_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561273" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_patf" AFTER INSERT OR UPDATE ON "patn"  FROM "patf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('patn_fk_patf', 'patn', 'patf', 'UNSPECIFIED', 'patn_patf_code', 'patf_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561275" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_patf" AFTER DELETE ON "patf"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('patn_fk_patf', 'patn', 'patf', 'UNSPECIFIED', 'patn_patf_code', 'patf_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561277" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_patf" AFTER UPDATE ON "patf"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('patn_fk_patf', 'patn', 'patf', 'UNSPECIFIED', 'patn_patf_code', 'patf_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561279" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_prov" AFTER INSERT OR UPDATE ON "patn"  FROM "prov" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('patn_fk_prov', 'patn', 'prov', 'UNSPECIFIED', 'patn_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561281" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_prov" AFTER DELETE ON "prov"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('patn_fk_prov', 'patn', 'prov', 'UNSPECIFIED', 'patn_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561283" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_prov" AFTER UPDATE ON "prov"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('patn_fk_prov', 'patn', 'prov', 'UNSPECIFIED', 'patn_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561285" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_patn" AFTER INSERT OR UPDATE ON "invc"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('invc_fk_patn', 'invc', 'patn', 'UNSPECIFIED', 'invc_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561287" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_patn" AFTER DELETE ON "patn"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('invc_fk_patn', 'invc', 'patn', 'UNSPECIFIED', 'invc_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561289" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_patn" AFTER UPDATE ON "patn"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('invc_fk_patn', 'invc', 'patn', 'UNSPECIFIED', 'invc_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561291" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_patn" AFTER INSERT OR UPDATE ON "svpf"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('svpf_fk_patn', 'svpf', 'patn', 'UNSPECIFIED', 'svpf_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561293" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_patn" AFTER DELETE ON "patn"  FROM "svpf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('svpf_fk_patn', 'svpf', 'patn', 'UNSPECIFIED', 'svpf_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561295" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "svpf_fk_patn" AFTER UPDATE ON "patn"  FROM "svpf" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('svpf_fk_patn', 'svpf', 'patn', 'UNSPECIFIED', 'svpf_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561297" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtat_fk_patn" AFTER INSERT OR UPDATE ON "docs"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtat_fk_patn', 'docs', 'patn', 'UNSPECIFIED', 'docs_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561299" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtat_fk_patn" AFTER DELETE ON "patn"  FROM "docs" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('mtat_fk_patn', 'docs', 'patn', 'UNSPECIFIED', 'docs_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561301" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtat_fk_patn" AFTER UPDATE ON "patn"  FROM "docs" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtat_fk_patn', 'docs', 'patn', 'UNSPECIFIED', 'docs_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561303" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "surg_fk_patn" AFTER INSERT OR UPDATE ON "surg"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('surg_fk_patn', 'surg', 'patn', 'UNSPECIFIED', 'surg_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561305" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "surg_fk_patn" AFTER DELETE ON "patn"  FROM "surg" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_noaction_del" ('surg_fk_patn', 'surg', 'patn', 'UNSPECIFIED', 'surg_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561307" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "surg_fk_patn" AFTER UPDATE ON "patn"  FROM "surg" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('surg_fk_patn', 'surg', 'patn', 'UNSPECIFIED', 'surg_patn__sequence', 'patn__sequence');

--
--
--
-- Name: eftr_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "eftr_tr_before" BEFORE INSERT ON "eftr"  FOR EACH ROW EXECUTE PROCEDURE "eftr_tr_before" ();

--
--
--
-- Name: patf_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "patf_tr_before" BEFORE INSERT OR UPDATE ON "patf"  FOR EACH ROW EXECUTE PROCEDURE "patf_tr_before" ();

--
--
--
-- Name: "RI_ConstraintTrigger_17561311" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_dbtr" AFTER INSERT OR UPDATE ON "patn"  FROM "dbtr" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('patn_fk_dbtr', 'patn', 'dbtr', 'UNSPECIFIED', 'patn_dbtr_code', 'dbtr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561313" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_dbtr" AFTER DELETE ON "dbtr"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('patn_fk_dbtr', 'patn', 'dbtr', 'UNSPECIFIED', 'patn_dbtr_code', 'dbtr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561315" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_dbtr" AFTER UPDATE ON "dbtr"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('patn_fk_dbtr', 'patn', 'dbtr', 'UNSPECIFIED', 'patn_dbtr_code', 'dbtr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561317" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_dbtr" AFTER INSERT OR UPDATE ON "invc"  FROM "dbtr" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('invc_fk_dbtr', 'invc', 'dbtr', 'UNSPECIFIED', 'invc_dbtr_code', 'dbtr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561319" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_dbtr" AFTER DELETE ON "dbtr"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('invc_fk_dbtr', 'invc', 'dbtr', 'UNSPECIFIED', 'invc_dbtr_code', 'dbtr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561321" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "invc_fk_dbtr" AFTER UPDATE ON "dbtr"  FROM "invc" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('invc_fk_dbtr', 'invc', 'dbtr', 'UNSPECIFIED', 'invc_dbtr_code', 'dbtr_code');

--
--
--
-- Name: tr_patn_null2default Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_patn_null2default" BEFORE INSERT OR UPDATE ON "patn"  FOR EACH ROW EXECUTE PROCEDURE "fn_patn_null2default" ();

--
--
--
-- Name: "RI_ConstraintTrigger_17561324" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "paym_fk_tdtp" AFTER INSERT OR UPDATE ON "paym"  FROM "tdtp" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('paym_fk_tdtp', 'paym', 'tdtp', 'UNSPECIFIED', 'paym_tdtp_code', 'tdtp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561326" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "paym_fk_tdtp" AFTER DELETE ON "tdtp"  FROM "paym" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('paym_fk_tdtp', 'paym', 'tdtp', 'UNSPECIFIED', 'paym_tdtp_code', 'tdtp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561328" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "paym_fk_tdtp" AFTER UPDATE ON "tdtp"  FROM "paym" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('paym_fk_tdtp', 'paym', 'tdtp', 'UNSPECIFIED', 'paym_tdtp_code', 'tdtp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561330" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "paym_fk_bkdp" AFTER INSERT OR UPDATE ON "paym"  FROM "bkdp" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('paym_fk_bkdp', 'paym', 'bkdp', 'UNSPECIFIED', 'paym_bkdp__sequence', 'bkdp__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561332" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "paym_fk_bkdp" AFTER DELETE ON "bkdp"  FROM "paym" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('paym_fk_bkdp', 'paym', 'bkdp', 'UNSPECIFIED', 'paym_bkdp__sequence', 'bkdp__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561334" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "paym_fk_bkdp" AFTER UPDATE ON "bkdp"  FROM "paym" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('paym_fk_bkdp', 'paym', 'bkdp', 'UNSPECIFIED', 'paym_bkdp__sequence', 'bkdp__sequence');

--
--
--
-- Name: rfdr_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "rfdr_tr_before" BEFORE INSERT OR DELETE OR UPDATE ON "rfdr"  FOR EACH ROW EXECUTE PROCEDURE "rfdr_tr_before" ();

--
--
--
-- Name: dbtr_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "dbtr_tr_before" BEFORE INSERT OR DELETE OR UPDATE ON "dbtr"  FOR EACH ROW EXECUTE PROCEDURE "dbtr_tr_before" ();

--
--
--
-- Name: "RI_ConstraintTrigger_17561338" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_empl" AFTER INSERT OR UPDATE ON "patn"  FROM "empl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('patn_fk_empl', 'patn', 'empl', 'UNSPECIFIED', 'patn_empl_code', 'empl_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561340" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_empl" AFTER DELETE ON "empl"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('patn_fk_empl', 'patn', 'empl', 'UNSPECIFIED', 'patn_empl_code', 'empl_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561342" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_empl" AFTER UPDATE ON "empl"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('patn_fk_empl', 'patn', 'empl', 'UNSPECIFIED', 'patn_empl_code', 'empl_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561344" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_rfdr" AFTER INSERT OR UPDATE ON "patn"  FROM "rfdr" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('patn_fk_rfdr', 'patn', 'rfdr', 'UNSPECIFIED', 'patn_rfdr_code', 'rfdr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561346" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_rfdr" AFTER DELETE ON "rfdr"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setdefault_del" ('patn_fk_rfdr', 'patn', 'rfdr', 'UNSPECIFIED', 'patn_rfdr_code', 'rfdr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561348" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "patn_fk_rfdr" AFTER UPDATE ON "rfdr"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('patn_fk_rfdr', 'patn', 'rfdr', 'UNSPECIFIED', 'patn_rfdr_code', 'rfdr_code');

--
--
--
-- Name: locn_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "locn_tr_before" BEFORE INSERT OR UPDATE ON "locn"  FOR EACH ROW EXECUTE PROCEDURE "locn_tr_before" ();

--
--
--
-- Name: aptp_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "aptp_tr_before" BEFORE INSERT OR UPDATE ON "aptp"  FOR EACH ROW EXECUTE PROCEDURE "aptp_tr_before" ();

--
--
--
-- Name: apst_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "apst_tr_before" BEFORE INSERT OR UPDATE ON "apst"  FOR EACH ROW EXECUTE PROCEDURE "apst_tr_before" ();

--
--
--
-- Name: "RI_ConstraintTrigger_17561354" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_patn" AFTER INSERT OR UPDATE ON "evnt"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('evnt_fk_patn', 'evnt', 'patn', 'UNSPECIFIED', 'evnt_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561356" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_patn" AFTER DELETE ON "patn"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('evnt_fk_patn', 'evnt', 'patn', 'UNSPECIFIED', 'evnt_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561358" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_patn" AFTER UPDATE ON "patn"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('evnt_fk_patn', 'evnt', 'patn', 'UNSPECIFIED', 'evnt_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561360" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_prov" AFTER INSERT OR UPDATE ON "evnt"  FROM "prov" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('evnt_fk_prov', 'evnt', 'prov', 'UNSPECIFIED', 'evnt_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561362" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_prov" AFTER DELETE ON "prov"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('evnt_fk_prov', 'evnt', 'prov', 'UNSPECIFIED', 'evnt_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561364" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_prov" AFTER UPDATE ON "prov"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('evnt_fk_prov', 'evnt', 'prov', 'UNSPECIFIED', 'evnt_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561366" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_rfdr" AFTER INSERT OR UPDATE ON "evnt"  FROM "rfdr" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('evnt_fk_rfdr', 'evnt', 'rfdr', 'UNSPECIFIED', 'evnt_rfdr_code', 'rfdr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561368" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_rfdr" AFTER DELETE ON "rfdr"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('evnt_fk_rfdr', 'evnt', 'rfdr', 'UNSPECIFIED', 'evnt_rfdr_code', 'rfdr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561370" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_rfdr" AFTER UPDATE ON "rfdr"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('evnt_fk_rfdr', 'evnt', 'rfdr', 'UNSPECIFIED', 'evnt_rfdr_code', 'rfdr_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561372" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_locn" AFTER INSERT OR UPDATE ON "evnt"  FROM "locn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('evnt_fk_locn', 'evnt', 'locn', 'UNSPECIFIED', 'evnt_locn_code', 'locn_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561374" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_locn" AFTER DELETE ON "locn"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('evnt_fk_locn', 'evnt', 'locn', 'UNSPECIFIED', 'evnt_locn_code', 'locn_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561376" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_locn" AFTER UPDATE ON "locn"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('evnt_fk_locn', 'evnt', 'locn', 'UNSPECIFIED', 'evnt_locn_code', 'locn_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561378" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_aptp" AFTER INSERT OR UPDATE ON "evnt"  FROM "aptp" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('evnt_fk_aptp', 'evnt', 'aptp', 'UNSPECIFIED', 'evnt_aptp_code', 'aptp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561380" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_aptp" AFTER DELETE ON "aptp"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('evnt_fk_aptp', 'evnt', 'aptp', 'UNSPECIFIED', 'evnt_aptp_code', 'aptp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561382" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_aptp" AFTER UPDATE ON "aptp"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('evnt_fk_aptp', 'evnt', 'aptp', 'UNSPECIFIED', 'evnt_aptp_code', 'aptp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561384" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_apst" AFTER INSERT OR UPDATE ON "evnt"  FROM "apst" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('evnt_fk_apst', 'evnt', 'apst', 'UNSPECIFIED', 'evnt_apst_code', 'apst_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561386" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_apst" AFTER DELETE ON "apst"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('evnt_fk_apst', 'evnt', 'apst', 'UNSPECIFIED', 'evnt_apst_code', 'apst_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561388" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "evnt_fk_apst" AFTER UPDATE ON "apst"  FROM "evnt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('evnt_fk_apst', 'evnt', 'apst', 'UNSPECIFIED', 'evnt_apst_code', 'apst_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561390" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "aptd_fk_prov" AFTER INSERT OR UPDATE ON "aptd"  FROM "prov" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('aptd_fk_prov', 'aptd', 'prov', 'UNSPECIFIED', 'aptd_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561392" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "aptd_fk_prov" AFTER DELETE ON "prov"  FROM "aptd" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('aptd_fk_prov', 'aptd', 'prov', 'UNSPECIFIED', 'aptd_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561394" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "aptd_fk_prov" AFTER UPDATE ON "prov"  FROM "aptd" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('aptd_fk_prov', 'aptd', 'prov', 'UNSPECIFIED', 'aptd_prov_code', 'prov_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561396" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "aptd_fk_locn" AFTER INSERT OR UPDATE ON "aptd"  FROM "locn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('aptd_fk_locn', 'aptd', 'locn', 'UNSPECIFIED', 'aptd_locn_code', 'locn_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561398" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "aptd_fk_locn" AFTER DELETE ON "locn"  FROM "aptd" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('aptd_fk_locn', 'aptd', 'locn', 'UNSPECIFIED', 'aptd_locn_code', 'locn_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561400" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "aptd_fk_locn" AFTER UPDATE ON "locn"  FROM "aptd" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('aptd_fk_locn', 'aptd', 'locn', 'UNSPECIFIED', 'aptd_locn_code', 'locn_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561402" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "aptd_fk_aptp" AFTER INSERT OR UPDATE ON "aptd"  FROM "aptp" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('aptd_fk_aptp', 'aptd', 'aptp', 'UNSPECIFIED', 'aptd_aptp_code', 'aptp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561404" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "aptd_fk_aptp" AFTER DELETE ON "aptp"  FROM "aptd" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('aptd_fk_aptp', 'aptd', 'aptp', 'UNSPECIFIED', 'aptd_aptp_code', 'aptp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561406" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "aptd_fk_aptp" AFTER UPDATE ON "aptp"  FROM "aptd" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('aptd_fk_aptp', 'aptd', 'aptp', 'UNSPECIFIED', 'aptd_aptp_code', 'aptp_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561410" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cnrt_fk_patn" AFTER INSERT OR UPDATE ON "cnrt"  FROM "patn" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('cnrt_fk_patn', 'cnrt', 'patn', 'UNSPECIFIED', 'cnrt_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561412" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cnrt_fk_patn" AFTER DELETE ON "patn"  FROM "cnrt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_del" ('cnrt_fk_patn', 'cnrt', 'patn', 'UNSPECIFIED', 'cnrt_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561414" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cnrt_fk_patn" AFTER UPDATE ON "patn"  FROM "cnrt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('cnrt_fk_patn', 'cnrt', 'patn', 'UNSPECIFIED', 'cnrt_patn__sequence', 'patn__sequence');

--
--
--
-- Name: "RI_ConstraintTrigger_17561416" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cnrt_fk_serv" AFTER INSERT OR UPDATE ON "cnrt"  FROM "serv" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('cnrt_fk_serv', 'cnrt', 'serv', 'UNSPECIFIED', 'cnrt_serv_code', 'serv_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561418" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cnrt_fk_serv" AFTER DELETE ON "serv"  FROM "cnrt" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('cnrt_fk_serv', 'cnrt', 'serv', 'UNSPECIFIED', 'cnrt_serv_code', 'serv_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561420" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "cnrt_fk_serv" AFTER UPDATE ON "serv"  FROM "cnrt" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('cnrt_fk_serv', 'cnrt', 'serv', 'UNSPECIFIED', 'cnrt_serv_code', 'serv_code');

--
--
--
-- Name: cnrt_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "cnrt_tr_before" BEFORE INSERT OR UPDATE ON "cnrt"  FOR EACH ROW EXECUTE PROCEDURE "cnrt_tr_before" ();

--
--
--
-- Name: "RI_ConstraintTrigger_17561579" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtal_fk_mtop" AFTER INSERT OR UPDATE ON "mtal"  FROM "mtop" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtal_fk_mtop', 'mtal', 'mtop', 'UNSPECIFIED', 'mtal_mtop_code', 'mtop_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561581" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtal_fk_mtop" AFTER DELETE ON "mtop"  FROM "mtal" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('mtal_fk_mtop', 'mtal', 'mtop', 'UNSPECIFIED', 'mtal_mtop_code', 'mtop_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561583" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtal_fk_mtop" AFTER UPDATE ON "mtop"  FROM "mtal" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtal_fk_mtop', 'mtal', 'mtop', 'UNSPECIFIED', 'mtal_mtop_code', 'mtop_code');

--
--
--
-- Name: "RI_ConstraintTrigger_17561585" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtal_fk_mtat" AFTER INSERT OR UPDATE ON "mtal"  FROM "mtat" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtal_fk_mtat', 'mtal', 'mtat', 'UNSPECIFIED', 'mtal_mtat_name', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561587" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtal_fk_mtat" AFTER DELETE ON "mtat"  FROM "mtal" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_restrict_del" ('mtal_fk_mtat', 'mtal', 'mtat', 'UNSPECIFIED', 'mtal_mtat_name', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561589" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtal_fk_mtat" AFTER UPDATE ON "mtat"  FROM "mtal" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtal_fk_mtat', 'mtal', 'mtat', 'UNSPECIFIED', 'mtal_mtat_name', 'mtat_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561670" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "mtag"  FROM "mtag" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'mtag', 'mtag', 'UNSPECIFIED', 'mtag_parent', 'mtag_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561672" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "mtag"  FROM "mtag" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setnull_del" ('<unnamed>', 'mtag', 'mtag', 'UNSPECIFIED', 'mtag_parent', 'mtag_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561674" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "mtag"  FROM "mtag" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('<unnamed>', 'mtag', 'mtag', 'UNSPECIFIED', 'mtag_parent', 'mtag_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561676" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtcl_fk_mtag" AFTER INSERT OR UPDATE ON "mtcl"  FROM "mtag" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('mtcl_fk_mtag', 'mtcl', 'mtag', 'UNSPECIFIED', 'mtcl_group', 'mtag_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561678" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtcl_fk_mtag" AFTER DELETE ON "mtag"  FROM "mtcl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setnull_del" ('mtcl_fk_mtag', 'mtcl', 'mtag', 'UNSPECIFIED', 'mtcl_group', 'mtag_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561680" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "mtcl_fk_mtag" AFTER UPDATE ON "mtag"  FROM "mtcl" DEFERRABLE INITIALLY DEFERRED FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('mtcl_fk_mtag', 'mtcl', 'mtag', 'UNSPECIFIED', 'mtcl_group', 'mtag_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561756" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "mtad"  FROM "mtag" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'mtad', 'mtag', 'UNSPECIFIED', 'mtad_parent', 'mtag_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561758" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "mtag"  FROM "mtad" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setnull_del" ('<unnamed>', 'mtad', 'mtag', 'UNSPECIFIED', 'mtad_parent', 'mtag_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561760" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "mtag"  FROM "mtad" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('<unnamed>', 'mtad', 'mtag', 'UNSPECIFIED', 'mtad_parent', 'mtag_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561762" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER INSERT OR UPDATE ON "mtad"  FROM "mtcl" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_check_ins" ('<unnamed>', 'mtad', 'mtcl', 'UNSPECIFIED', 'mtad_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561764" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER DELETE ON "mtcl"  FROM "mtad" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_setnull_del" ('<unnamed>', 'mtad', 'mtcl', 'UNSPECIFIED', 'mtad_class', 'mtcl_name');

--
--
--
-- Name: "RI_ConstraintTrigger_17561766" Type: TRIGGER Owner: source
--

CREATE CONSTRAINT TRIGGER "<unnamed>" AFTER UPDATE ON "mtcl"  FROM "mtad" NOT DEFERRABLE INITIALLY IMMEDIATE FOR EACH ROW EXECUTE PROCEDURE "RI_FKey_cascade_upd" ('<unnamed>', 'mtad', 'mtcl', 'UNSPECIFIED', 'mtad_class', 'mtcl_name');

--
--
--
-- Name: tr_vacuumtickets Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_vacuumtickets" BEFORE INSERT ON "mttk"  FOR EACH ROW EXECUTE PROCEDURE "fn_vacuumtickets" ();

--
--
--
-- Name: tr_lastvisit Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_lastvisit" AFTER INSERT OR DELETE OR UPDATE ON "evnt"  FOR EACH ROW EXECUTE PROCEDURE "fn_lastvisit" ();

--
--
--
-- Name: tr_lastservice Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_lastservice" AFTER INSERT OR DELETE OR UPDATE ON "svpf"  FOR EACH ROW EXECUTE PROCEDURE "fn_lastservice" ();

--
--
--
-- Name: tr_amountoutstanding Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_amountoutstanding" AFTER INSERT OR DELETE OR UPDATE ON "invc"  FOR EACH ROW EXECUTE PROCEDURE "fn_amountoutstanding" ();

--
--
--
-- Name: tr_paym_null2default Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_paym_null2default" BEFORE INSERT OR UPDATE ON "paym"  FOR EACH ROW EXECUTE PROCEDURE "fn_paym_null2default" ();

--
--
--
-- Name: tr_paym_closeddeposit Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_paym_closeddeposit" BEFORE DELETE OR UPDATE ON "paym"  FOR EACH ROW EXECUTE PROCEDURE "fn_paym_closeddeposit" ();

--
--
--
-- Name: tr_setbkdpamount Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_setbkdpamount" AFTER INSERT OR DELETE OR UPDATE ON "paym"  FOR EACH ROW EXECUTE PROCEDURE "fn_setbkdpamount" ();

--
--
--
-- Name: bkdp_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "bkdp_tr_before" BEFORE INSERT OR DELETE OR UPDATE ON "bkdp"  FOR EACH ROW EXECUTE PROCEDURE "bkdp_tr_before" ();

--
--
--
-- Name: cred_tr_before Type: TRIGGER Owner: source
--

CREATE TRIGGER "cred_tr_before" BEFORE INSERT OR UPDATE ON "cred"  FOR EACH ROW EXECUTE PROCEDURE "cred_tr_before" ();

--
--
--
-- Name: invc_credit_totals Type: TRIGGER Owner: source
--

CREATE TRIGGER "invc_credit_totals" AFTER INSERT OR DELETE OR UPDATE ON "cred"  FOR EACH ROW EXECUTE PROCEDURE "invc_credit_totals" ();

--
--
--
-- Name: invc_debit_totals Type: TRIGGER Owner: source
--

CREATE TRIGGER "invc_debit_totals" AFTER INSERT OR DELETE OR UPDATE ON "svpf"  FOR EACH ROW EXECUTE PROCEDURE "invc_debit_totals" ();

--
--
--
-- Name: tr_invc_closedinvoice Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_invc_closedinvoice" BEFORE DELETE OR UPDATE ON "invc"  FOR EACH ROW EXECUTE PROCEDURE "fn_invc_closedinvoice" ();

--
--
--
-- Name: tr_svpf_null2default Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_svpf_null2default" BEFORE INSERT OR UPDATE ON "svpf"  FOR EACH ROW EXECUTE PROCEDURE "fn_svpf_null2default" ();

--
--
--
-- Name: tr_svpf_closedinvoice Type: TRIGGER Owner: source
--

CREATE TRIGGER "tr_svpf_closedinvoice" BEFORE DELETE OR UPDATE ON "svpf"  FOR EACH ROW EXECUTE PROCEDURE "fn_svpf_closedinvoice" ();

--
--
--
-- Name: rl_crev_update Type: RULE Owner: source
--

CREATE RULE rl_crev_update AS ON UPDATE TO crev DO INSTEAD (UPDATE cred SET cred_invc__sequence = new.crev_invc__sequence, cred_amount = new.crev_cred_amount, cred_gst_amount = new.crev_cred_gst_amount WHERE (cred.cred__sequence = new.crev__sequence); UPDATE paym SET paym_user_entry = new.crev_user_entry, paym_site_entry = new.crev_site_entry, paym_amount = new.crev_paym_amount, paym_tdtp_code = new.crev_tdtp_code, paym_drawer = new.crev_drawer, paym_bank = new.crev_bank, paym_branch = new.crev_branch WHERE (paym.paym__sequence = new.crev_paym__sequence); UPDATE paym SET paym_amount = (SELECT (sum(cred.cred_amount) + sum(cred.cred_gst_amount)) FROM cred WHERE (cred.cred_paym__sequence = new.crev_paym__sequence)) WHERE (paym.paym__sequence = new.crev_paym__sequence); );
--
--
--
-- Name: rl_crev_delete Type: RULE Owner: source
--

CREATE RULE rl_crev_delete AS ON DELETE TO crev DO INSTEAD DELETE FROM cred WHERE (cred.cred__sequence = old.crev__sequence);
--
--
--
-- Name: rl_crep_update Type: RULE Owner: source
--

CREATE RULE rl_crep_update AS ON UPDATE TO crep DO INSTEAD UPDATE cred SET cred_invc__sequence = new.crep_invc__sequence, cred_paym__sequence = new.crep_paym__sequence, cred_amount = new.crep_cred_amount, cred_gst_amount = new.crep_cred_gst_amount WHERE (cred.cred__sequence = new.crep__sequence);
--
--
--
-- Name: rl_crep_delete Type: RULE Owner: source
--

CREATE RULE rl_crep_delete AS ON DELETE TO crep DO INSTEAD DELETE FROM cred WHERE (cred.cred__sequence = old.crep__sequence);
--
--
--
-- Name: rl_notv_update Type: RULE Owner: source
--

CREATE RULE rl_notv_update AS ON UPDATE TO notv DO INSTEAD UPDATE note SET note_patn__sequence = new.notv_patn__sequence, note_desc = new.notv_desc WHERE (note.note__sequence = new.notv__sequence);
--
--
--
-- Name: rl_notv_delete Type: RULE Owner: source
--

CREATE RULE rl_notv_delete AS ON DELETE TO notv DO INSTEAD DELETE FROM note WHERE (note.note__sequence = old.notv__sequence);
--
--
--
-- Name: rl_notv_insert Type: RULE Owner: source
--

CREATE RULE rl_notv_insert AS ON INSERT TO notv DO INSTEAD SELECT notv_insert_row() AS notv_insert_row;
--
--
--
-- Name: rl_cnrv_update Type: RULE Owner: source
--

CREATE RULE rl_cnrv_update AS ON UPDATE TO cnrv DO INSTEAD UPDATE cnrt SET cnrt_patn__sequence = new.cnrv_patn__sequence, cnrt_amount = new.cnrv_amount, ctrt_period = new.ctrv_period, cnrt_count = new.cnrv_count, cnrt_start_date = "timestamp"(new.cnrv_start_date), cnrt_serv_code = new.cnrv_serv_code, cnrt_first_installment = new.cnrv_first_installment, cnrt_other_installment = new.cnrv_other_installment, cnrt_last_date = "timestamp"(new.cnrv_last_date), cnrt_balance = new.cnrv_balance, cnrt_end_date = "timestamp"(new.cnrv_end_date), cnrt__sequence = new.cnrv__sequence, cnrt__timestamp = new.cnrv__timestamp, cnrt__user_entry = new.cnrv__user_entry, cnrt__status = new.cnrv__status WHERE (cnrt.cnrt__sequence = new.cnrv__sequence);
--
--
--
-- Name: rl_cnrv_delete Type: RULE Owner: source
--

CREATE RULE rl_cnrv_delete AS ON DELETE TO cnrv DO INSTEAD DELETE FROM cnrt WHERE (cnrt.cnrt__sequence = old.cnrv__sequence);
--
--
--
-- Name: rl_evnv_update Type: RULE Owner: source
--

CREATE RULE rl_evnv_update AS ON UPDATE TO evnv DO INSTEAD (UPDATE evnt SET evnt_patn__sequence = new.evnv_patn__sequence, evnt_prov_code = new.evnv_prov_code, evnt_rfdr_code = new.evnv_rfdr_code, evnt_locn_code = new.evnv_locn_code, evnt_aptp_code = new.evnv_aptp_code, evnt_apst_code = new.evnv_apst_code, evnt_starttime = new.evnv_starttime, evnt_duration = new.evnv_duration, evnt_desc = new.evnv_desc WHERE (evnt.evnt__sequence = new.evnv__sequence); UPDATE patn SET patn_psnam = new.evnv_patn_psnam, patn_fsnam = new.evnv_patn_fsnam, patn_dob = "timestamp"(new.evnv_patn_dob), patn_address = new.evnv_patn_address, patn_suburb = new.evnv_patn_suburb, patn_postcode = new.evnv_patn_postcode, patn_phone = new.evnv_patn_phone, patn_ref_date = new.evnv_patn_ref_date, patn_ref_period = new.evnv_patn_ref_period WHERE ((patn.patn__sequence = new.evnv_patn__sequence) AND (new.evnv_patn__sequence > 0)); );
--
--
--
-- Name: rl_evnv_delete Type: RULE Owner: source
--

CREATE RULE rl_evnv_delete AS ON DELETE TO evnv DO INSTEAD DELETE FROM evnt WHERE (evnt.evnt__sequence = old.evnv__sequence);
--
--
--
-- Name: rl_evnv_insert Type: RULE Owner: source
--

CREATE RULE rl_evnv_insert AS ON INSERT TO evnv DO INSTEAD SELECT evnv_insert_row() AS evnv_insert_row;
--
--
--
-- Name: mtcl_mtcl__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mtcl_mtcl__sequence_seq"', 231, 't');

--
--
--
-- Name: mtat_mtat__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mtat_mtat__sequence_seq"', 3450, 't');

--
--
--
-- Name: mtfn_mtfn__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mtfn_mtfn__sequence_seq"', 510, 't');

--
--
--
-- Name: mtrl_mtrl__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mtrl_mtrl__sequence_seq"', 322, 't');

--
--
--
-- Name: form_form__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"form_form__sequence_seq"', 1, 't');

--
--
--
-- Name: fmdt_fmdt__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"fmdt_fmdt__sequence_seq"', 1, 't');

--
--
--
-- Name: accl_accl__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"accl_accl__sequence_seq"', 1, 't');

--
--
--
-- Name: bank_bank__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"bank_bank__sequence_seq"', 1, 't');

--
--
--
-- Name: cash_cash__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"cash_cash__sequence_seq"', 1, 't');

--
--
--
-- Name: clsp_clsp__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"clsp_clsp__sequence_seq"', 1, 't');

--
--
--
-- Name: clst_clst__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"clst_clst__sequence_seq"', 1, 't');

--
--
--
-- Name: cnty_cnty__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"cnty_cnty__sequence_seq"', 1, 't');

--
--
--
-- Name: conf_conf__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"conf_conf__sequence_seq"', 1, 't');

--
--
--
-- Name: cred_cred__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"cred_cred__sequence_seq"', 1, 't');

--
--
--
-- Name: diag_diag__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"diag_diag__sequence_seq"', 1, 't');

--
--
--
-- Name: empl_empl__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"empl_empl__sequence_seq"', 1, 't');

--
--
--
-- Name: epsd_epsd__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"epsd_epsd__sequence_seq"', 1, 't');

--
--
--
-- Name: feeb_feeb__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"feeb_feeb__sequence_seq"', 1, 't');

--
--
--
-- Name: feet_feet__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"feet_feet__sequence_seq"', 1, 't');

--
--
--
-- Name: hlfd_hlfd__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"hlfd_hlfd__sequence_seq"', 11, 't');

--
--
--
-- Name: icd9_icd9__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"icd9_icd9__sequence_seq"', 1, 't');

--
--
--
-- Name: inst_inst__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"inst_inst__sequence_seq"', 1, 't');

--
--
--
-- Name: invc_invc__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"invc_invc__sequence_seq"', 1, 't');

--
--
--
-- Name: labl_labl__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"labl_labl__sequence_seq"', 1, 't');

--
--
--
-- Name: lthd_lthd__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"lthd_lthd__sequence_seq"', 1, 't');

--
--
--
-- Name: mdaf_mdaf__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mdaf_mdaf__sequence_seq"', 1, 't');

--
--
--
-- Name: mdbt_mdbt__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mdbt_mdbt__sequence_seq"', 1, 't');

--
--
--
-- Name: mdcr_mdcr__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mdcr_mdcr__sequence_seq"', 1, 't');

--
--
--
-- Name: note_note__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"note_note__sequence_seq"', 1, 't');

--
--
--
-- Name: paym_paym__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"paym_paym__sequence_seq"', 1, 't');

--
--
--
-- Name: prnt_prnt__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"prnt_prnt__sequence_seq"', 1, 't');

--
--
--
-- Name: prov_prov__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"prov_prov__sequence_seq"', 1, 't');

--
--
--
-- Name: pyas_pyas__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"pyas_pyas__sequence_seq"', 1, 't');

--
--
--
-- Name: rfdr_rfdr__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"rfdr_rfdr__sequence_seq"', 1, 't');

--
--
--
-- Name: serv_serv__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"serv_serv__sequence_seq"', 1, 't');

--
--
--
-- Name: stts_stts__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"stts_stts__sequence_seq"', 1, 't');

--
--
--
-- Name: svpf_svpf__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"svpf_svpf__sequence_seq"', 1, 't');

--
--
--
-- Name: tdtp_tdtp__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"tdtp_tdtp__sequence_seq"', 14, 't');

--
--
--
-- Name: bkdp_bkdp__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"bkdp_bkdp__sequence_seq"', 1, 't');

--
--
--
-- Name: docs_docs__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"docs_docs__sequence_seq"', 1, 't');

--
--
--
-- Name: patf_patf__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"patf_patf__sequence_seq"', 1, 't');

--
--
--
-- Name: patn_patn__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"patn_patn__sequence_seq"', 1, 't');

--
--
--
-- Name: surg_surg__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"surg_surg__sequence_seq"', 1, 't');

--
--
--
-- Name: eftr_eftr__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"eftr_eftr__sequence_seq"', 1, 't');

--
--
--
-- Name: dbtr_dbtr__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"dbtr_dbtr__sequence_seq"', 1, 't');

--
--
--
-- Name: mtpt_mtpt__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mtpt_mtpt__sequence_seq"', 13, 't');

--
--
--
-- Name: mttb_mttb__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mttb_mttb__sequence_seq"', 55, 't');

--
--
--
-- Name: locn_locn__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"locn_locn__sequence_seq"', 1, 't');

--
--
--
-- Name: aptp_aptp__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"aptp_aptp__sequence_seq"', 1, 't');

--
--
--
-- Name: apst_apst__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"apst_apst__sequence_seq"', 1, 't');

--
--
--
-- Name: evnt_evnt__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"evnt_evnt__sequence_seq"', 1, 't');

--
--
--
-- Name: aptd_aptd__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"aptd_aptd__sequence_seq"', 1, 't');

--
--
--
-- Name: cnrt_cnrt__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"cnrt_cnrt__sequence_seq"', 1, 't');

--
--
--
-- Name: mtop_mtop__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mtop_mtop__sequence_seq"', 10, 't');

--
--
--
-- Name: mtal_mtal__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mtal_mtal__sequence_seq"', 3, 't');

--
--
--
-- Name: mtag_mtag__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mtag_mtag__sequence_seq"', 1, 't');

--
--
--
-- Name: mtad_mtad__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mtad_mtad__sequence_seq"', 9, 't');

--
--
--
-- Name: mttk_mttk__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mttk_mttk__sequence_seq"', 1, 'f');

--
--
--
-- Name: mtau_mtau__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"mtau_mtau__sequence_seq"', 1, 'f');

--
--
--
-- Name: pcde_pcde__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"pcde_pcde__sequence_seq"', 1, 'f');

--
--
--
-- Name: addr_addr__sequence_seq Type: SEQUENCE SET Owner: 
--

SELECT setval ('"addr_addr__sequence_seq"', 1, 'f');

